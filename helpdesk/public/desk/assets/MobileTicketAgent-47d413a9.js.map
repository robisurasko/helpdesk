{"version":3,"file":"MobileTicketAgent-47d413a9.js","sources":["../../../../desk/src/components/icons/DetailsIcon.vue","../../../../desk/src/pages/ticket/MobileTicketAgent.vue"],"sourcesContent":["<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"lucide lucide-list-collapse\"\n  >\n    <path d=\"m3 10 2.5-2.5L3 5\" />\n    <path d=\"m3 19 2.5-2.5L3 14\" />\n    <path d=\"M10 6h11\" />\n    <path d=\"M10 12h11\" />\n    <path d=\"M10 18h11\" />\n  </svg>\n</template>\n","<template>\n  <div class=\"flex flex-col\">\n    <LayoutHeader v-if=\"ticket.data\">\n      <template #left-header>\n        <Breadcrumbs :items=\"breadcrumbs\" />\n      </template>\n      <template #right-header>\n        <div class=\"absolute right-0 pr-2\">\n          <Dropdown :options=\"dropdownOptions\">\n            <template #default=\"{ open }\">\n              <Button :label=\"ticket.data.status\">\n                <template #prefix>\n                  <IndicatorIcon\n                    :class=\"ticketStatusStore.textColorMap[ticket.data.status]\"\n                  />\n                </template>\n                <template #suffix>\n                  <FeatherIcon\n                    :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                    class=\"h-4\"\n                  />\n                </template>\n              </Button>\n            </template>\n          </Dropdown>\n        </div>\n      </template>\n    </LayoutHeader>\n    <header\n      class=\"flex h-12 items-center justify-between py-[7px] px-3 border-b\"\n      v-if=\"ticket.data\"\n    >\n      <!-- left side -->\n      <div class=\"flex items-center gap-2 max-w-[50%]\">\n        <div v-if=\"ticket.data.assignees?.length\">\n          <component :is=\"ticket.data.assignees.length == 1 ? 'Button' : 'div'\">\n            <MultipleAvatar\n              :avatars=\"ticket.data.assignees\"\n              @click=\"showAssignmentModal = true\"\n            />\n          </component>\n        </div>\n        <button\n          v-else\n          class=\"rounded bg-gray-100 px-2 py-1.5 text-base text-gray-800\"\n          @click=\"showAssignmentModal = true\"\n        >\n          Assign\n        </button>\n      </div>\n      <!-- right side -->\n      <div class=\"flex items-center gap-2\">\n        <CustomActions\n          v-if=\"ticket.data._customActions\"\n          :actions=\"ticket.data._customActions\"\n        />\n      </div>\n    </header>\n    <div v-if=\"ticket.data\" class=\"flex flex-1 overflow-x-hidden\">\n      <div class=\"flex flex-1 flex-col overflow-x-hidden\">\n        <div class=\"flex-1 flex flex-col\">\n          <Tabs v-model=\"tabIndex\" :tabs=\"tabs\">\n            <TabList />\n            <TabPanel v-slot=\"{ tab }\" class=\"h-full\">\n              <div v-if=\"tab.name === 'details'\">\n                <!-- ticket contact info -->\n                <TicketAgentContact\n                  :contact=\"ticket.data.contact\"\n                  @email:open=\"communicationAreaRef.toggleEmailBox()\"\n                />\n                <!-- feedback component -->\n                <TicketFeedback\n                  v-if=\"ticket.data.feedback_rating\"\n                  class=\"border-b px-6 py-3 text-base text-gray-600\"\n                  :ticket=\"ticket.data\"\n                />\n                <!-- SLA Section -->\n                <h3 class=\"px-6 pt-3 font-semibold text-base\">SLA</h3>\n                <TicketAgentDetails :ticket=\"ticket.data\" />\n                <!-- Ticket Fields -->\n                <h3 class=\"px-6 pt-3 font-semibold text-base\">Details</h3>\n                <TicketAgentFields\n                  :ticket=\"ticket.data\"\n                  @update=\"({ field, value }) => updateTicket(field, value)\"\n                  class=\"!border-0\"\n                />\n              </div>\n\n              <!-- Rest Activities -->\n              <TicketAgentActivities\n                v-else\n                ref=\"ticketAgentActivitiesRef\"\n                :activities=\"filterActivities(tab.name)\"\n                :title=\"tab.label\"\n                :ticket-status=\"ticket.data?.status\"\n                @update=\"\n                  () => {\n                    ticket.reload();\n                  }\n                \"\n                @email:reply=\"\n                  (e) => {\n                    communicationAreaRef.replyToEmail(e);\n                  }\n                \"\n                @email:forward=\"\n                  (e) => {\n                    communicationAreaRef.forwardEmail(e);\n                  }\n                \"\n              />\n            </TabPanel>\n          </Tabs>\n          <CommunicationArea\n            class=\"sticky bottom-0 z-50 bg-white\"\n            ref=\"communicationAreaRef\"\n            v-model=\"ticket.data\"\n            :to-emails=\"[ticket.data.raised_by]\"\n            :cc-emails=\"[]\"\n            :bcc-emails=\"[]\"\n            :key=\"ticket.data?.name\"\n            @update=\"\n              () => {\n                ticket.reload();\n                tabIndex !== 0 &&\n                  ticketAgentActivitiesRef.scrollToLatestActivity();\n              }\n            \"\n          />\n        </div>\n      </div>\n    </div>\n    <AssignmentModal\n      v-if=\"ticket.data\"\n      v-model=\"showAssignmentModal\"\n      :assignees=\"ticket.data.assignees\"\n      :docname=\"ticketId\"\n      doctype=\"HD Ticket\"\n      @update=\"\n        () => {\n          ticket.reload();\n        }\n      \"\n    />\n    <Dialog v-model=\"showSubjectDialog\">\n      <template #body-title>\n        <h3>Rename</h3>\n      </template>\n      <template #body-content>\n        <FormControl\n          v-model=\"subjectInput\"\n          :type=\"'text'\"\n          size=\"sm\"\n          variant=\"subtle\"\n          :disabled=\"false\"\n          label=\"New Subject\"\n        />\n      </template>\n      <template #actions>\n        <Button\n          variant=\"solid\"\n          :disabled=\"!subjectInput\"\n          :loading=\"isLoading\"\n          @click=\"\n            () => {\n              updateTicket('subject', subjectInput);\n              showSubjectDialog = false;\n            }\n          \"\n        >\n          Confirm\n        </Button>\n        <Button class=\"ml-2\" @click=\"showSubjectDialog = false\"> Close </Button>\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, h, watch, onMounted, onUnmounted, provide } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStorage } from \"@vueuse/core\";\nimport {\n  Breadcrumbs,\n  Dropdown,\n  Tabs,\n  TabPanel,\n  TabList,\n  createResource,\n  Dialog,\n  FormControl,\n  call,\n} from \"frappe-ui\";\n\nimport {\n  LayoutHeader,\n  MultipleAvatar,\n  AssignmentModal,\n  CommunicationArea,\n} from \"@/components\";\nimport { TicketAgentActivities } from \"@/components/ticket\";\nimport {\n  ActivityIcon,\n  CommentIcon,\n  EmailIcon,\n  IndicatorIcon,\n  DetailsIcon,\n} from \"@/components/icons\";\n\nimport { useTicketStatusStore } from \"@/stores/ticketStatus\";\nimport { useUserStore } from \"@/stores/user\";\nimport { globalStore } from \"@/stores/globalStore\";\nimport { setupCustomizations } from \"@/composables/formCustomisation\";\nimport { createToast } from \"@/utils\";\n\nconst ticketStatusStore = useTicketStatusStore();\nconst { getUser } = useUserStore();\nimport { useScreenSize } from \"@/composables/screen\";\nimport { TabObject, TicketTab } from \"@/types\";\nimport TicketAgentDetails from \"@/components/ticket/TicketAgentDetails.vue\";\nimport TicketAgentFields from \"@/components/ticket/TicketAgentFields.vue\";\n\nconst router = useRouter();\nconst ticketAgentActivitiesRef = ref(null);\nconst communicationAreaRef = ref(null);\nconst subjectInput = ref(null);\nconst isLoading = ref(false);\n\nconst props = defineProps({\n  ticketId: {\n    type: String,\n    required: true,\n  },\n});\n\nprovide(\"communicationArea\", communicationAreaRef);\n\nconst { isMobileView } = useScreenSize();\nconst { $dialog } = globalStore();\n\nconst showAssignmentModal = ref(false);\nconst showSubjectDialog = ref(false);\n\nconst ticket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.get_one\",\n  cache: [\"Ticket\", props.ticketId],\n  auto: true,\n  params: {\n    name: props.ticketId,\n  },\n  transform: (data) => {\n    if (data._assign) {\n      data.assignees = JSON.parse(data._assign).map((assignee) => {\n        return {\n          name: assignee,\n          image: getUser(assignee).user_image,\n          label: getUser(assignee).full_name,\n        };\n      });\n    }\n  },\n  onSuccess: (ticket) => {\n    subjectInput.value = ticket.subject;\n    setupCustomizations(ticket, {\n      doc: ticket,\n      call,\n      router,\n      $dialog,\n      updateField,\n      createToast,\n    });\n  },\n});\n\nfunction updateField(name: string, value: string, callback = () => {}) {\n  updateTicket(name, value);\n  callback();\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: \"Tickets\", route: { name: \"TicketsAgent\" } }];\n  items.push({\n    label: ticket.data?.subject,\n    route: { name: \"TicketAgent\" },\n  });\n  return items;\n});\n\nconst dropdownOptions = computed(() =>\n  ticketStatusStore.options.map((o) => ({\n    label: o,\n    value: o,\n    onClick: () => updateTicket(\"status\", o),\n    icon: () =>\n      h(IndicatorIcon, {\n        class: ticketStatusStore.textColorMap[o],\n      }),\n  }))\n);\n\nconst tabIndex = ref(0);\nconst tabs: TabObject[] = [\n  {\n    name: \"details\",\n    label: \"Details\",\n    icon: DetailsIcon,\n    condition: () => isMobileView.value,\n  },\n  {\n    name: \"activity\",\n    label: \"Activity\",\n    icon: ActivityIcon,\n  },\n  {\n    name: \"email\",\n    label: \"Emails\",\n    icon: EmailIcon,\n  },\n  {\n    name: \"comment\",\n    label: \"Comments\",\n    icon: CommentIcon,\n  },\n];\n\nconst activities = computed(() => {\n  const emailProps = ticket.data.communications.map((email, idx: number) => {\n    return {\n      type: \"email\",\n      key: email.creation,\n      sender: { name: email.user.email, full_name: email.user.name },\n      to: email.recipients,\n      cc: email.cc,\n      bcc: email.bcc,\n      creation: email.creation,\n      subject: email.subject,\n      attachments: email.attachments,\n      content: email.content,\n      isFirstEmail: idx === 0,\n    };\n  });\n\n  const commentProps = ticket.data.comments.map((comment) => {\n    return {\n      name: comment.name,\n      type: \"comment\",\n      key: comment.creation,\n      commentedBy: comment.commented_by,\n      commenter: comment.user.name,\n      creation: comment.creation,\n      content: comment.content,\n    };\n  });\n\n  const historyProps = [...ticket.data.history, ...ticket.data.views].map(\n    (h) => {\n      return {\n        type: \"history\",\n        key: h.creation,\n        content: h.action ? h.action : \"viewed this\",\n        creation: h.creation,\n        user: h.user.name + \" \",\n      };\n    }\n  );\n\n  const sorted = [...emailProps, ...commentProps, ...historyProps].sort(\n    (a, b) => new Date(a.creation) - new Date(b.creation)\n  );\n\n  const data = [];\n  let i = 0;\n\n  while (i < sorted.length) {\n    const currentActivity = sorted[i];\n    if (currentActivity.type === \"history\") {\n      currentActivity.relatedActivities = [];\n      for (let j = i + 1; j < sorted.length + 1; j++) {\n        const nextActivity = sorted[j];\n        if (nextActivity && nextActivity.type === \"history\") {\n          currentActivity.relatedActivities.push(nextActivity);\n        } else {\n          data.push(currentActivity);\n          i = j - 1;\n          break;\n        }\n      }\n    } else {\n      data.push(currentActivity);\n    }\n    i++;\n  }\n\n  return data;\n});\n\nfunction filterActivities(eventType: TicketTab) {\n  if (eventType === \"activity\") {\n    return activities.value;\n  }\n  return activities.value.filter((activity) => activity.type === eventType);\n}\n\nfunction updateTicket(fieldname: string, value: string) {\n  isLoading.value = true;\n  createResource({\n    url: \"frappe.client.set_value\",\n    params: {\n      doctype: \"HD Ticket\",\n      name: props.ticketId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      isLoading.value = false;\n      ticket.reload();\n      createToast({\n        title: \"Ticket updated\",\n        icon: \"check\",\n        iconClasses: \"text-green-600\",\n      });\n    },\n  });\n}\nonMounted(() => {\n  document.title = props.ticketId;\n});\n\nonUnmounted(() => {\n  document.title = \"Helpdesk\";\n});\n</script>\n"],"names":["_hoisted_1","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","ticketStatusStore","useTicketStatusStore","getUser","useUserStore","router","useRouter","ticketAgentActivitiesRef","ref","communicationAreaRef","subjectInput","isLoading","props","__props","provide","isMobileView","useScreenSize","$dialog","globalStore","showAssignmentModal","showSubjectDialog","ticket","createResource","data","assignee","setupCustomizations","call","updateField","createToast","name","value","callback","updateTicket","breadcrumbs","computed","items","_a","dropdownOptions","h","IndicatorIcon","tabIndex","tabs","DetailsIcon","ActivityIcon","EmailIcon","CommentIcon","activities","emailProps","email","idx","commentProps","comment","historyProps","sorted","b","i","currentActivity","j","nextActivity","filterActivities","eventType","activity","fieldname","onMounted","onUnmounted"],"mappings":"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"}