{"version":3,"file":"FadedScrollableDiv.vue_vue_type_script_setup_true_lang-bce5a402.js","sources":["../../../../desk/src/components/MultipleAvatar.vue","../../../../desk/src/components/FadedScrollableDiv.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"_avatars?.length\"\n    class=\"mr-1.5 flex cursor-pointer items-center\"\n    :class=\"[\n      _avatars?.length > 1 ? 'flex-row-reverse' : 'truncate [&>div]:truncate',\n    ]\"\n  >\n    <div v-if=\"_avatars?.length == 1\" class=\"flex items-center gap-2 text-base\">\n      <Tooltip :text=\"_avatars[0].name\">\n        <Avatar\n          shape=\"circle\"\n          :image=\"_avatars[0].image\"\n          :label=\"_avatars[0].label\"\n          size=\"sm\"\n        />\n        <div class=\"truncate\" v-if=\"!hideName\">{{ _avatars[0].label }}</div>\n      </Tooltip>\n    </div>\n    <Tooltip\n      v-for=\"avatar in _avatars\"\n      v-else\n      :key=\"avatar.name\"\n      :text=\"avatar.name\"\n    >\n      <Avatar\n        class=\"user-avatar -mr-1.5 ring-2 ring-white transition hover:z-10 hover:scale-110\"\n        shape=\"circle\"\n        :image=\"avatar.image\"\n        :label=\"avatar.label\"\n        :size=\"size\"\n        :data-name=\"avatar.name\"\n      />\n    </Tooltip>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { Avatar, Tooltip } from \"frappe-ui\";\nimport { computed } from \"vue\";\nimport { useUserStore } from \"@/stores/user\";\n\nconst props = defineProps({\n  avatars: {\n    type: String,\n  },\n  size: {\n    type: String,\n    default: \"md\",\n  },\n  hideName: {\n    type: Boolean,\n    default: false,\n  },\n});\nconst { getUser } = useUserStore();\nconst _avatars = computed(() => {\n  let result: any;\n  try {\n    result = JSON.parse(props.avatars);\n  } catch (error) {\n    result = props.avatars;\n  }\n  if (!result) return;\n  if (result[0].hasOwnProperty(\"name\")) {\n    return result;\n  }\n  result = result.map((a: string) => {\n    let _user = getUser(a);\n    return {\n      name: _user.name,\n      label: _user.full_name,\n      image: _user.user_image,\n    };\n  });\n  return result;\n});\n</script>\n","<template>\n  <div\n    ref=\"scrollableDiv\"\n    :style=\"`maskImage: ${maskStyle}`\"\n    @scroll=\"updateMaskStyle\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from \"vue\";\n\nconst props = defineProps({\n  maskLength: {\n    type: Number,\n    default: 30,\n  },\n  orientation: {\n    type: String,\n    default: \"vertical\",\n  },\n});\n\nconst scrollableDiv = ref(null);\nconst maskStyle = ref(\"none\");\nconst side = computed(() =>\n  props.orientation == \"horizontal\" ? \"right\" : \"bottom\"\n);\n\nfunction updateMaskStyle() {\n  if (!scrollableDiv.value) return;\n\n  let scrollWidth = scrollableDiv.value.scrollWidth;\n  let clientWidth = scrollableDiv.value.clientWidth;\n  let scrollHeight = scrollableDiv.value.scrollHeight;\n  let clientHeight = scrollableDiv.value.clientHeight;\n  let scrollTop = scrollableDiv.value.scrollTop;\n  let scrollLeft = scrollableDiv.value.scrollLeft;\n\n  maskStyle.value = \"none\";\n\n  // faded on both sides\n  if (\n    (side.value == \"right\" && scrollWidth > clientWidth) ||\n    (side.value == \"bottom\" && scrollHeight > clientHeight)\n  ) {\n    maskStyle.value = `linear-gradient(to ${side.value}, transparent, black ${props.maskLength}px, black calc(100% - ${props.maskLength}px), transparent);`;\n  }\n\n  // faded on left or top\n  if (\n    (side.value == \"right\" && scrollLeft - 20 > clientWidth) ||\n    (side.value == \"bottom\" && scrollTop + clientHeight >= scrollHeight)\n  ) {\n    maskStyle.value = `linear-gradient(to ${side.value}, transparent, black ${props.maskLength}px, black 100%, transparent);`;\n  }\n\n  // faded on right or bottom\n  if (\n    (side.value == \"right\" && scrollLeft == 0) ||\n    (side.value == \"bottom\" && scrollTop == 0)\n  ) {\n    maskStyle.value = `linear-gradient(to ${side.value}, black calc(100% - ${props.maskLength}px), transparent 100%);`;\n  }\n\n  if (\n    (side.value == \"right\" && clientWidth == scrollWidth) ||\n    (side.value == \"bottom\" && clientHeight == scrollHeight)\n  ) {\n    maskStyle.value = \"none\";\n  }\n}\n\nonMounted(() => setTimeout(() => updateMaskStyle(), 300));\n</script>\n"],"names":["props","__props","getUser","useUserStore","_avatars","computed","result","a","_user","scrollableDiv","ref","maskStyle","side","updateMaskStyle","scrollWidth","clientWidth","scrollHeight","clientHeight","scrollTop","scrollLeft","onMounted"],"mappings":"4cAyCA,MAAMA,EAAQC,EAaR,CAAE,QAAAC,GAAYC,IACdC,EAAWC,EAAS,IAAM,CAC1B,IAAAC,EACA,GAAA,CACOA,EAAA,KAAK,MAAMN,EAAM,OAAO,OACnB,CACdM,EAASN,EAAM,OACjB,CACA,GAAKM,EACL,OAAIA,EAAO,CAAC,EAAE,eAAe,MAAM,IAG1BA,EAAAA,EAAO,IAAKC,GAAc,CAC7B,IAAAC,EAAQN,EAAQK,CAAC,EACd,MAAA,CACL,KAAMC,EAAM,KACZ,MAAOA,EAAM,UACb,MAAOA,EAAM,UAAA,CACf,CACD,GACMF,CAAA,CACR,09BC/DD,MAAMN,EAAQC,EAWRQ,EAAgBC,EAAI,IAAI,EACxBC,EAAYD,EAAI,MAAM,EACtBE,EAAOP,EAAS,IACpBL,EAAM,aAAe,aAAe,QAAU,QAAA,EAGhD,SAASa,GAAkB,CACzB,GAAI,CAACJ,EAAc,MAAO,OAEtB,IAAAK,EAAcL,EAAc,MAAM,YAClCM,EAAcN,EAAc,MAAM,YAClCO,EAAeP,EAAc,MAAM,aACnCQ,EAAeR,EAAc,MAAM,aACnCS,EAAYT,EAAc,MAAM,UAChCU,EAAaV,EAAc,MAAM,WAErCE,EAAU,MAAQ,QAIfC,EAAK,OAAS,SAAWE,EAAcC,GACvCH,EAAK,OAAS,UAAYI,EAAeC,KAEhCN,EAAA,MAAQ,sBAAsBC,EAAK,KAAK,wBAAwBZ,EAAM,UAAU,yBAAyBA,EAAM,UAAU,uBAKlIY,EAAK,OAAS,SAAWO,EAAa,GAAKJ,GAC3CH,EAAK,OAAS,UAAYM,EAAYD,GAAgBD,KAEvDL,EAAU,MAAQ,sBAAsBC,EAAK,KAAK,wBAAwBZ,EAAM,UAAU,kCAKzFY,EAAK,OAAS,SAAWO,GAAc,GACvCP,EAAK,OAAS,UAAYM,GAAa,KAExCP,EAAU,MAAQ,sBAAsBC,EAAK,KAAK,uBAAuBZ,EAAM,UAAU,4BAIxFY,EAAK,OAAS,SAAWG,GAAeD,GACxCF,EAAK,OAAS,UAAYK,GAAgBD,KAE3CL,EAAU,MAAQ,OAEtB,CAEA,OAAAS,EAAU,IAAM,WAAW,IAAMP,EAAgB,EAAG,GAAG,CAAC"}