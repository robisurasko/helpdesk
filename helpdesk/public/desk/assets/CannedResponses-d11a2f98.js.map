{"version":3,"file":"CannedResponses-d11a2f98.js","sources":["../../../../desk/src/components/canned-response/CannedResponseModal.vue","../../../../desk/src/pages/CannedResponses.vue"],"sourcesContent":["<template>\n  <Dialog\n    v-model=\"show\"\n    :options=\"{\n      size: 'xl',\n      actions: [\n        {\n          label: !isNew ? 'Update' : 'Create',\n          variant: 'solid',\n          onClick: () => updateItem(),\n        },\n      ],\n    }\"\n  >\n    <template #body-title>\n      <div class=\"flex items-center gap-3\">\n        <h3 class=\"text-2xl font-semibold leading-6 text-gray-900\">\n          {{ !isNew ? \"Edit Canned Response\" : \"Create Canned Response\" }}\n        </h3>\n      </div>\n    </template>\n    <template #body-content>\n      <div class=\"flex flex-col gap-4\">\n        <div>\n          <div class=\"mb-1.5 text-sm text-gray-600\">{{ \"Title\" }}</div>\n          <TextInput\n            v-model=\"title\"\n            variant=\"outline\"\n            :placeholder=\"'Customer Query Resolved'\"\n          />\n        </div>\n        <div>\n          <div class=\"mb-1.5 text-sm text-gray-600\">{{ \"Message\" }}</div>\n          <TextEditor\n            ref=\"content\"\n            variant=\"outline\"\n            editor-class=\"!prose-sm overflow-auto min-h-[180px] max-h-80 py-1.5 px-2 rounded border border-gray-300 bg-white hover:border-gray-400 hover:shadow-sm focus:bg-white focus:border-gray-500 focus:shadow-sm focus:ring-0 focus-visible:ring-2 focus-visible:ring-gray-400 text-gray-800 transition-colors\"\n            :bubble-menu=\"true\"\n            :content=\"message\"\n            :placeholder=\"'Your query has been resolved. Thank you for reaching out.'\"\n            @change=\"(val) => (message = val)\"\n          />\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup>\nimport { TextEditor, call, TextInput } from \"frappe-ui\";\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: false,\n    default: null,\n  },\n  isNew: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n});\n\nconst show = defineModel();\nconst title = defineModel(\"title\");\nconst message = defineModel(\"message\");\nconst emit = defineEmits([\"update\"]);\n\nasync function updateItem() {\n  if (props.name) {\n    await call(\"frappe.client.set_value\", {\n      doctype: \"HD Canned Response\",\n      name: props.name,\n      fieldname: {\n        title: title.value,\n        message: message.value,\n      },\n    });\n  } else {\n    await call(\"frappe.client.insert\", {\n      doc: {\n        doctype: \"HD Canned Response\",\n        title: title.value,\n        message: message.value,\n      },\n    });\n  }\n  emit(\"update\");\n  show.value = false;\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <LayoutHeader>\n      <template #left-header>\n        <Breadcrumbs :items=\"breadcrumbs\" />\n      </template>\n      <template #right-header>\n        <Button\n          label=\"Create\"\n          theme=\"gray\"\n          variant=\"solid\"\n          @click=\"\n            () => {\n              title = null;\n              message = null;\n              showNewDialog = true;\n            }\n          \"\n        >\n          <template #prefix>\n            <LucidePlus class=\"h-4 w-4\" />\n          </template>\n        </Button>\n      </template>\n    </LayoutHeader>\n    <div class=\"flex-1 overflow-y-auto p-2\">\n      <div\n        v-if=\"cannedResponses.data?.length > 0\"\n        class=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4 px-5 pb-3\"\n      >\n        <div\n          v-for=\"cannedResponse in cannedResponses.data\"\n          :key=\"cannedResponse.name\"\n          class=\"group flex h-60 cursor-pointer flex-col justify-between gap-2 rounded-lg border px-4 py-3 pt-2 shadow-sm hover:bg-gray-50\"\n          @click=\"editItem(cannedResponse)\"\n        >\n          <div class=\"flex items-center justify-between\">\n            <div class=\"truncate text-lg font-medium\">\n              {{ cannedResponse.title }}\n            </div>\n            <Dropdown\n              :options=\"[\n                {\n                  label: 'Delete',\n                  icon: 'trash-2',\n                  onClick: () => deleteItem(cannedResponse.name),\n                },\n              ]\"\n              @click.stop\n            >\n              <Button\n                icon=\"more-horizontal\"\n                variant=\"ghosted\"\n                class=\"hover:bg-white\"\n              />\n            </Dropdown>\n          </div>\n          <TextEditor\n            v-if=\"cannedResponse.message\"\n            :content=\"cannedResponse.message\"\n            :editable=\"false\"\n            editor-class=\"prose-sm\"\n            class=\"flex-1 overflow-hidden response-preview\"\n          />\n          <div class=\"mt-2 flex items-center justify-between gap-2\">\n            <div class=\"flex items-center gap-2\">\n              <UserAvatar :name=\"cannedResponse.owner\" size=\"xs\" />\n              <div class=\"text-sm text-gray-800\">\n                {{ getUser(cannedResponse.owner).full_name }}\n              </div>\n            </div>\n            <Tooltip\n              :text=\"dateFormat(cannedResponse.modified, dateTooltipFormat)\"\n            >\n              <div class=\"text-sm text-gray-700\">\n                {{ dayjs.tz(cannedResponse.modified).fromNow() }}\n              </div>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n      <EmptyState\n        v-else\n        title=\"No Canned Responses Found\"\n        @emptyStateAction=\"showNewDialog = true\"\n      />\n    </div>\n    <CannedResponseModal\n      v-model=\"showNewDialog\"\n      v-model:title=\"title\"\n      v-model:message=\"message\"\n      :name=\"name\"\n      :is-new=\"name ? false : true\"\n      @close=\"\n        () => {\n          showNewDialog = false;\n          title = null;\n          message = null;\n          name = null;\n        }\n      \"\n      @update=\"\n        () => {\n          cannedResponses.reload();\n          showNewDialog = false;\n          title = null;\n          message = null;\n          name = null;\n        }\n      \"\n    />\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport {\n  createListResource,\n  Breadcrumbs,\n  Dropdown,\n  TextEditor,\n  Tooltip,\n  call,\n  usePageMeta,\n} from \"frappe-ui\";\nimport { CannedResponseModal } from \"@/components/canned-response/\";\nimport { LayoutHeader } from \"@/components\";\nimport { useUserStore } from \"@/stores/user\";\nimport { dateFormat, dateTooltipFormat } from \"@/utils\";\nimport { dayjs } from \"@/dayjs\";\nimport EmptyState from \"../components/EmptyState.vue\";\n\nconst { getUser } = useUserStore();\n\nconst breadcrumbs = [\n  { label: \"Canned Responses\", route: { name: \"CannedResponses\" } },\n];\nconst route = useRoute();\n\nconst title = ref(null);\nconst message = ref(null);\nconst name = ref(null);\nconst isNew = route.hash.split(\"#\")[1] === \"new\";\nconst showNewDialog = ref(isNew || false);\n\nconst cannedResponses = createListResource({\n  doctype: \"HD Canned Response\",\n  fields: [\"name\", \"title\", \"message\", \"owner\", \"modified\"],\n  auto: true,\n  orderBy: \"modified desc\",\n});\n\nfunction editItem(cannedResponse) {\n  title.value = cannedResponse.title;\n  message.value = cannedResponse.message;\n  name.value = cannedResponse.name;\n  showNewDialog.value = true;\n}\n\nasync function deleteItem(name) {\n  await call(\"frappe.client.delete\", {\n    doctype: \"HD Canned Response\",\n    name,\n  });\n  cannedResponses.reload();\n}\n\nusePageMeta(() => {\n  return {\n    title: \"Canned Responses\",\n  };\n});\n</script>\n\n<style>\n.response-preview :where(p, span, a) {\n  @apply !text-gray-600;\n}\n</style>\n"],"names":["props","__props","show","_useModel","title","message","emit","__emit","updateItem","call","getUser","useUserStore","breadcrumbs","route","useRoute","ref","name","isNew","showNewDialog","cannedResponses","createListResource","editItem","cannedResponse","deleteItem","usePageMeta"],"mappings":"ixCAmDA,MAAMA,EAAQC,EAaRC,EAAOC,EAAWF,EAAA,YAAC,EACnBG,EAAQD,EAAYF,EAAA,OAAO,EAC3BI,EAAUF,EAAWF,EAAC,SAAS,EAC/BK,EAAOC,EAEb,eAAeC,GAAa,CACtBR,EAAM,KACR,MAAMS,EAAK,0BAA2B,CACpC,QAAS,qBACT,KAAMT,EAAM,KACZ,UAAW,CACT,MAAOI,EAAM,MACb,QAASC,EAAQ,KAClB,CACP,CAAK,EAED,MAAMI,EAAK,uBAAwB,CACjC,IAAK,CACH,QAAS,qBACT,MAAOL,EAAM,MACb,QAASC,EAAQ,KAClB,CACP,CAAK,EAEHC,EAAK,QAAQ,EACbJ,EAAK,MAAQ,EACf,gqDC0CM,KAAA,CAAE,QAAAQ,GAAYC,IAEdC,EAAc,CAClB,CAAE,MAAO,mBAAoB,MAAO,CAAE,KAAM,kBAAoB,CAAA,EAE5DC,EAAQC,IAERV,EAAQW,EAAI,IAAI,EAChBV,EAAUU,EAAI,IAAI,EAClBC,EAAOD,EAAI,IAAI,EACfE,EAAQJ,EAAM,KAAK,MAAM,GAAG,EAAE,CAAC,IAAM,MACrCK,EAAgBH,EAAIE,GAAS,EAAK,EAElCE,EAAkBC,EAAmB,CACzC,QAAS,qBACT,OAAQ,CAAC,OAAQ,QAAS,UAAW,QAAS,UAAU,EACxD,KAAM,GACN,QAAS,eAAA,CACV,EAED,SAASC,EAASC,EAAgB,CAChClB,EAAM,MAAQkB,EAAe,MAC7BjB,EAAQ,MAAQiB,EAAe,QAC/BN,EAAK,MAAQM,EAAe,KAC5BJ,EAAc,MAAQ,EACxB,CAEA,eAAeK,EAAWP,EAAM,CAC9B,MAAMP,EAAK,uBAAwB,CACjC,QAAS,qBACT,KAAAO,CAAA,CACD,EACDG,EAAgB,OAAO,CACzB,CAEA,OAAAK,EAAY,KACH,CACL,MAAO,kBAAA,EAEV"}