{"version":3,"file":"Link-9287dea6.js","sources":["../../../../desk/src/components/frappe-ui/Autocomplete.vue","../../../../desk/src/components/frappe-ui/Link.vue"],"sourcesContent":["<template>\n  <Combobox v-model=\"selectedValue\" nullable v-slot=\"{ open: isComboboxOpen }\">\n    <Popover class=\"w-full\" v-model:show=\"showOptions\">\n      <template #target=\"{ open: openPopover, togglePopover }\">\n        <slot\n          name=\"target\"\n          v-bind=\"{\n            open: openPopover,\n            togglePopover,\n            isOpen: showOptions,\n            selectedValue,\n            displayValue,\n          }\"\n        >\n          <div class=\"w-full\">\n            <button\n              class=\"flex w-full items-center justify-between focus:outline-none\"\n              :class=\"inputClasses\"\n              @click=\"() => togglePopover()\"\n            >\n              <div class=\"flex items-center\">\n                <slot name=\"prefix\" />\n                <span\n                  class=\"overflow-hidden text-ellipsis whitespace-nowrap text-base leading-5\"\n                  v-if=\"selectedValue\"\n                >\n                  {{ displayValue(selectedValue) }}\n                </span>\n                <span class=\"text-base leading-5 text-gray-500\" v-else>\n                  {{ placeholder || \"\" }}\n                </span>\n              </div>\n              <FeatherIcon\n                name=\"chevron-down\"\n                class=\"h-4 w-4 text-gray-600\"\n                aria-hidden=\"true\"\n              />\n            </button>\n          </div>\n        </slot>\n      </template>\n      <template #body=\"{ isOpen }\">\n        <div v-show=\"isOpen\">\n          <div class=\"mt-1 rounded-lg bg-white py-1 text-base shadow-2xl\">\n            <div class=\"relative px-1.5 pt-0.5\">\n              <ComboboxInput\n                ref=\"search\"\n                class=\"form-input w-full\"\n                type=\"text\"\n                @change=\"\n                  (e) => {\n                    query = e.target.value;\n                  }\n                \"\n                :value=\"query\"\n                autocomplete=\"off\"\n                placeholder=\"Search\"\n              />\n              <button\n                class=\"absolute right-1.5 inline-flex h-7 w-7 items-center justify-center\"\n                @click=\"selectedValue = null\"\n              >\n                <FeatherIcon name=\"x\" class=\"w-4\" />\n              </button>\n            </div>\n            <ComboboxOptions\n              class=\"my-1 max-h-[12rem] overflow-y-auto px-1.5\"\n              static\n            >\n              <div\n                class=\"mt-1.5\"\n                v-for=\"group in groups\"\n                :key=\"group.key\"\n                v-show=\"group.items.length > 0\"\n              >\n                <div\n                  v-if=\"group.group && !group.hideLabel\"\n                  class=\"px-2.5 py-1.5 text-sm font-medium text-gray-500\"\n                >\n                  {{ group.group }}\n                </div>\n                <ComboboxOption\n                  as=\"template\"\n                  v-for=\"option in group.items\"\n                  :key=\"option.value\"\n                  :value=\"option\"\n                  v-slot=\"{ active, selected }\"\n                >\n                  <li\n                    :class=\"[\n                      'flex items-center rounded px-2.5 py-1.5 text-base',\n                      { 'bg-gray-100': active },\n                    ]\"\n                  >\n                    <slot\n                      name=\"item-prefix\"\n                      v-bind=\"{ active, selected, option }\"\n                    />\n                    <slot\n                      name=\"item-label\"\n                      v-bind=\"{ active, selected, option }\"\n                    >\n                      {{ option.label }}\n                    </slot>\n                  </li>\n                </ComboboxOption>\n              </div>\n              <li\n                v-if=\"groups.length == 0\"\n                class=\"mt-1.5 rounded-md px-2.5 py-1.5 text-base text-gray-600\"\n              >\n                No results found\n              </li>\n            </ComboboxOptions>\n            <div v-if=\"slots.footer\" class=\"border-t p-1.5 pb-0.5\">\n              <slot\n                name=\"footer\"\n                v-bind=\"{ value: search?.el._value, close }\"\n              ></slot>\n            </div>\n          </div>\n        </div>\n      </template>\n    </Popover>\n  </Combobox>\n</template>\n\n<script setup>\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxOptions,\n  ComboboxOption,\n} from \"@headlessui/vue\";\nimport { Popover, Button, FeatherIcon } from \"frappe-ui\";\nimport { ref, computed, useAttrs, useSlots, watch, nextTick } from \"vue\";\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: \"\",\n  },\n  options: {\n    type: Array,\n    default: () => [],\n  },\n  size: {\n    type: String,\n    default: \"md\",\n  },\n  variant: {\n    type: String,\n    default: \"subtle\",\n  },\n  placeholder: {\n    type: String,\n    default: \"\",\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  filterable: {\n    type: Boolean,\n    default: true,\n  },\n});\nconst emit = defineEmits([\"update:modelValue\", \"update:query\", \"change\"]);\n\nconst query = ref(\"\");\nconst showOptions = ref(false);\nconst search = ref(null);\n\nconst attrs = useAttrs();\nconst slots = useSlots();\n\nconst valuePropPassed = computed(() => \"value\" in attrs);\n\nconst selectedValue = computed({\n  get() {\n    return valuePropPassed.value ? attrs.value : props.modelValue;\n  },\n  set(val) {\n    query.value = \"\";\n    if (val) {\n      showOptions.value = false;\n    }\n    emit(valuePropPassed.value ? \"change\" : \"update:modelValue\", val);\n  },\n});\n\nfunction close() {\n  showOptions.value = false;\n}\n\nconst groups = computed(() => {\n  if (!props.options || props.options.length == 0) return [];\n\n  let groups = props.options[0]?.group\n    ? props.options\n    : [{ group: \"\", items: props.options }];\n\n  return groups\n    .map((group, i) => {\n      return {\n        key: i,\n        group: group.group,\n        hideLabel: group.hideLabel || false,\n        items: props.filterable ? filterOptions(group.items) : group.items,\n      };\n    })\n    .filter((group) => group.items.length > 0);\n});\n\nfunction filterOptions(options) {\n  if (!query.value) {\n    return options;\n  }\n  return options.filter((option) => {\n    let searchTexts = [option.label, option.value];\n    return searchTexts.some((text) =>\n      (text || \"\").toString().toLowerCase().includes(query.value.toLowerCase())\n    );\n  });\n}\n\nfunction displayValue(option) {\n  if (typeof option === \"string\") {\n    let allOptions = groups.value.flatMap((group) => group.items);\n    let selectedOption = allOptions.find((o) => o.value === option);\n    return selectedOption?.label || option;\n  }\n  return option?.label;\n}\n\nwatch(query, (q) => {\n  emit(\"update:query\", q);\n});\n\nwatch(showOptions, (val) => {\n  if (val) {\n    nextTick(() => {\n      search.value.el.focus();\n    });\n  }\n});\n\nconst textColor = computed(() => {\n  return props.disabled ? \"text-gray-600\" : \"text-gray-800\";\n});\n\nconst inputClasses = computed(() => {\n  let sizeClasses = {\n    sm: \"text-base rounded h-7\",\n    md: \"text-base rounded h-8\",\n    lg: \"text-lg rounded-md h-10\",\n    xl: \"text-xl rounded-md h-10\",\n  }[props.size];\n\n  let paddingClasses = {\n    sm: \"py-1.5 px-2\",\n    md: \"py-1.5 px-2.5\",\n    lg: \"py-1.5 px-3\",\n    xl: \"py-1.5 px-3\",\n  }[props.size];\n\n  let variant = props.disabled ? \"disabled\" : props.variant;\n  let variantClasses = {\n    subtle:\n      \"border border-gray-100 bg-gray-100 placeholder-gray-500 hover:border-gray-200 hover:bg-gray-200 focus:bg-white focus:border-gray-500 focus:shadow-sm focus:ring-0 focus-visible:ring-2 focus-visible:ring-gray-400\",\n    outline:\n      \"border border-gray-300 bg-white placeholder-gray-500 hover:border-gray-400 hover:shadow-sm focus:bg-white focus:border-gray-500 focus:shadow-sm focus:ring-0 focus-visible:ring-2 focus-visible:ring-gray-400\",\n    disabled: [\n      \"border bg-gray-50 placeholder-gray-400\",\n      props.variant === \"outline\" ? \"border-gray-300\" : \"border-transparent\",\n    ],\n  }[variant];\n\n  return [\n    sizeClasses,\n    paddingClasses,\n    variantClasses,\n    textColor.value,\n    \"transition-colors w-full\",\n  ];\n});\n\ndefineExpose({ query });\n</script>\n","<template>\n  <div class=\"space-y-1.5\">\n    <label class=\"block\" :class=\"labelClasses\" v-if=\"attrs.label\">\n      {{ attrs.label }}\n    </label>\n    <Autocomplete\n      ref=\"autocomplete\"\n      :options=\"options.data\"\n      v-model=\"value\"\n      :size=\"attrs.size || 'sm'\"\n      :variant=\"attrs.variant\"\n      :placeholder=\"attrs.placeholder\"\n      :filterable=\"false\"\n    >\n      <template #target=\"{ open, togglePopover }\">\n        <slot name=\"target\" v-bind=\"{ open, togglePopover }\" />\n      </template>\n\n      <template #prefix>\n        <slot name=\"prefix\" />\n      </template>\n\n      <template #item-prefix=\"{ active, selected, option }\">\n        <slot name=\"item-prefix\" v-bind=\"{ active, selected, option }\" />\n      </template>\n\n      <template #item-label=\"{ active, selected, option }\">\n        <slot name=\"item-label\" v-bind=\"{ active, selected, option }\">\n          <div\n            v-if=\"option.description && showDescription\"\n            class=\"flex flex-col gap-1\"\n          >\n            <div class=\"flex-1 font-semibold truncate text-ink-gray-7\">\n              {{ option.label }}\n            </div>\n            <div class=\"flex-1 text-sm truncate text-ink-gray-5\">\n              {{ option.description }}\n            </div>\n          </div>\n          <div v-else class=\"flex-1 truncate text-ink-gray-7\">\n            {{ option.label }}\n          </div>\n        </slot>\n      </template>\n\n      <template #footer=\"{ value, close }\" v-if=\"!hideClearButton\">\n        <div v-if=\"attrs.onCreate\">\n          <Button\n            variant=\"ghost\"\n            class=\"w-full !justify-start\"\n            :label=\"'Create New'\"\n            @click=\"attrs.onCreate(value, close)\"\n          >\n            <template #prefix>\n              <FeatherIcon name=\"plus\" class=\"h-4\" />\n            </template>\n          </Button>\n        </div>\n        <div>\n          <Button\n            variant=\"ghost\"\n            class=\"w-full !justify-start\"\n            :label=\"'Clear'\"\n            @click=\"() => clearValue(close)\"\n          >\n            <template #prefix>\n              <FeatherIcon name=\"x\" class=\"h-4\" />\n            </template>\n          </Button>\n        </div>\n      </template>\n    </Autocomplete>\n  </div>\n</template>\n\n<script setup>\nimport { useAttrs, computed, ref } from \"vue\";\nimport { createResource } from \"frappe-ui\";\nimport Autocomplete from \"./Autocomplete.vue\";\nimport { watchDebounced } from \"@vueuse/core\";\nimport { watch } from \"vue\";\n\nconst props = defineProps({\n  doctype: {\n    type: String,\n    required: true,\n  },\n  filters: {\n    type: Object,\n    default: null,\n  },\n  modelValue: {\n    type: String,\n    default: \"\",\n  },\n  hideMe: {\n    type: Boolean,\n    default: false,\n  },\n  pageLength: {\n    type: Number,\n    default: 10,\n  },\n  hideClearButton: {\n    type: Boolean,\n    default: false,\n  },\n  showDescription: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emit = defineEmits([\"update:modelValue\", \"change\"]);\n\nconst attrs = useAttrs();\n\nconst valuePropPassed = computed(() => \"value\" in attrs);\n\nconst value = computed({\n  get: () => (valuePropPassed.value ? attrs.value : props.modelValue),\n  set: (val) => {\n    return (\n      val?.value &&\n      emit(valuePropPassed.value ? \"change\" : \"update:modelValue\", val?.value)\n    );\n  },\n});\n\nconst autocomplete = ref(null);\nconst text = ref(\"\");\n\nwatchDebounced(\n  () => autocomplete.value?.query,\n  (val) => {\n    val = val || \"\";\n    if (text.value === val) return;\n    text.value = val;\n    reload(val);\n  },\n  { debounce: 300, immediate: true }\n);\n\nwatchDebounced(\n  () => props.doctype,\n  () => reload(\"\"),\n  { debounce: 300, immediate: true }\n);\n\nwatch(\n  () => props?.filters,\n  (newVal) => {\n    options.update({\n      params: {\n        txt: text.value,\n        doctype: props.doctype,\n        filters: newVal,\n        page_length: props.pageLength,\n      },\n    });\n    options.reload();\n  },\n  { deep: true }\n);\n\nconst options = createResource({\n  url: \"frappe.desk.search.search_link\",\n  cache: [props.doctype, text.value, props.hideMe],\n  method: \"POST\",\n  params: {\n    txt: text.value,\n    doctype: props.doctype,\n    filters: props.filters,\n    page_length: props.pageLength,\n  },\n  transform: (data) => {\n    let allData = data.map((option) => {\n      return {\n        value: option.value,\n        label: option?.label || option.value,\n        description: option?.description,\n      };\n    });\n\n    if (\n      !props.hideMe &&\n      (props.doctype == \"User\" || props.doctype == \"HD Agent\")\n    ) {\n      allData.unshift({\n        label: \"@me\",\n        value: \"@me\",\n      });\n    }\n    return allData;\n  },\n});\n\nfunction reload(val) {\n  if (\n    options.data?.length &&\n    val === options.params?.txt &&\n    props.doctype === options.params?.doctype\n  )\n    return;\n\n  options.update({\n    params: {\n      txt: val,\n      doctype: props.doctype,\n      filters: props.filters,\n      page_length: props.pageLength,\n    },\n  });\n  options.reload();\n}\n\nfunction clearValue(close) {\n  emit(valuePropPassed.value ? \"change\" : \"update:modelValue\", \"\");\n  close();\n}\n\nconst labelClasses = computed(() => {\n  return [\n    {\n      sm: \"text-xs\",\n      md: \"text-base\",\n    }[attrs.size || \"sm\"],\n    \"text-gray-600\",\n  ];\n});\n</script>\n"],"names":["props","__props","emit","__emit","query","ref","showOptions","search","attrs","useAttrs","slots","useSlots","valuePropPassed","computed","selectedValue","val","close","groups","_a","group","i","filterOptions","options","option","text","displayValue","selectedOption","o","watch","q","nextTick","textColor","inputClasses","sizeClasses","paddingClasses","variant","variantClasses","__expose","value","autocomplete","watchDebounced","reload","newVal","createResource","data","allData","_b","_c","clearValue","labelClasses"],"mappings":"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"}