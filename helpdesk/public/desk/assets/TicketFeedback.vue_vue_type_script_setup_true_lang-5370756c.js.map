{"version":3,"file":"TicketFeedback.vue_vue_type_script_setup_true_lang-5370756c.js","sources":["../../../../desk/src/pages/ticket/TicketFeedback.vue"],"sourcesContent":["<template>\n  <Dialog\n    :model-value=\"open\"\n    :options=\"{\n      title: 'Rate this ticket',\n      actions: [\n        {\n          disabled: !preset,\n          label: 'Submit',\n          theme: 'gray',\n          variant: 'solid',\n          onClick: () =>\n            setValue.submit({\n              fieldname: {\n                status: 'Closed',\n                feedback: preset,\n                feedback_extra: text,\n              },\n            }),\n        },\n      ],\n    }\"\n    @update:model-value=\"() => $emit('update:open', !open)\"\n  >\n    <template #body-content>\n      <div class=\"space-y-4 text-base text-gray-700\">\n        <div class=\"space-y-2\">\n          <span> Select a rating </span>\n          <span class=\"text-red-500\"> * </span>\n          <StarRating\n            :static=\"false\"\n            :rating=\"rating\"\n            v-model=\"rating\"\n            @update:model-value=\"rating = $event\"\n          />\n        </div>\n        <div v-if=\"options.data?.length\" class=\"space-y-2\">\n          <span> Pick an option </span>\n          <span class=\"text-red-500\"> * </span>\n          <div class=\"flex flex-wrap gap-2\">\n            <Button\n              v-for=\"o in options.data\"\n              :key=\"o.name\"\n              :label=\"o.label\"\n              :theme=\"preset === o.name ? 'blue' : 'gray'\"\n              variant=\"subtle\"\n              @click=\"preset = o.name\"\n            />\n          </div>\n        </div>\n        <div class=\"space-y-2\">\n          <span> Other </span>\n          <FormControl\n            v-model=\"text\"\n            type=\"textarea\"\n            placeholder=\"Tell us more\"\n          />\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, ref, watch } from \"vue\";\nimport { createResource, createListResource } from \"frappe-ui\";\nimport { StarRating } from \"@/components\";\nimport { ITicket } from \"./symbols\";\n\ninterface P {\n  open: boolean;\n}\n\ninterface E {\n  (event: \"update:open\", open: boolean): void;\n}\n\ndefineProps<P>();\nconst emit = defineEmits<E>();\nconst ticket = inject(ITicket);\nconst rating = ref(0);\nconst text = ref(\"\");\nconst preset = ref(null);\nconst options = createListResource({\n  doctype: \"HD Ticket Feedback Option\",\n  fields: [\"name\", \"label\"],\n  pageLength: 99999,\n});\nconst setValue = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 300,\n  makeParams: (params) => {\n    return {\n      doctype: \"HD Ticket\",\n      name: ticket.data.name,\n      fieldname: params.fieldname,\n      value: params.value,\n    };\n  },\n  onSuccess: () => {\n    emit(\"update:open\", false);\n    ticket.reload();\n  },\n});\nwatch(rating, (r) => {\n  preset.value = null;\n  text.value = \"\";\n  options.update({\n    filters: {\n      rating: r,\n    },\n  });\n  options.reload();\n});\n</script>\n"],"names":["emit","__emit","ticket","inject","ITicket","rating","ref","text","preset","options","createListResource","setValue","createResource","params","watch","r"],"mappings":"8oBA8EA,MAAMA,EAAOC,EACPC,EAASC,EAAOC,CAAO,EACvBC,EAASC,EAAI,CAAC,EACdC,EAAOD,EAAI,EAAE,EACbE,EAASF,EAAI,IAAI,EACjBG,EAAUC,EAAmB,CACjC,QAAS,4BACT,OAAQ,CAAC,OAAQ,OAAO,EACxB,WAAY,KAAA,CACb,EACKC,EAAWC,EAAe,CAC9B,IAAK,0BACL,SAAU,IACV,WAAaC,IACJ,CACL,QAAS,YACT,KAAMX,EAAO,KAAK,KAClB,UAAWW,EAAO,UAClB,MAAOA,EAAO,KAAA,GAGlB,UAAW,IAAM,CACfb,EAAK,cAAe,EAAK,EACzBE,EAAO,OAAO,CAChB,CAAA,CACD,EACK,OAAAY,EAAAT,EAASU,GAAM,CACnBP,EAAO,MAAQ,KACfD,EAAK,MAAQ,GACbE,EAAQ,OAAO,CACb,QAAS,CACP,OAAQM,CACV,CAAA,CACD,EACDN,EAAQ,OAAO,CAAA,CAChB"}