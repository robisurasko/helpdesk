{"version":3,"file":"TicketTextEditor.vue_vue_type_script_setup_true_lang-131673e4.js","sources":["../../../../desk/src/components/TextEditor.vue","../../../../desk/src/pages/ticket/TicketTextEditor.vue"],"sourcesContent":["<template>\n  <div class=\"rounded p-3 shadow\">\n    <FTextEditor\n      ref=\"e\"\n      :extensions=\"[PreserveVideoControls]\"\n      v-bind=\"$attrs\"\n      :editor-class=\"[\n        'prose-f max-h-64 max-w-none overflow-auto my-4 min-h-[5rem',\n        getFontFamily(modelValue),\n      ]\"\n      bubble-menu\n      :content=\"modelValue\"\n      @change=\"$emit('update:modelValue', $event)\"\n    >\n      <template #top>\n        <span class=\"text-base\">\n          <span class=\"flex items-center justify-between\">\n            <UserAvatar\n              :name=\"authStore.userName\"\n              :image=\"authStore.userImage\"\n              expand\n              strong\n            />\n            <slot name=\"top-right\" />\n          </span>\n          <slot name=\"top-bottom\" />\n        </span>\n      </template>\n      <template #bottom>\n        <div class=\"flex flex-col gap-2\">\n          <slot name=\"bottom-top\" />\n          <div\n            class=\"flex flex-col space-y-1.5 overflow-auto sm:flex-row sm:justify-between\"\n          >\n            <div class=\"flex items-center gap-1\">\n              <TextEditorFixedMenu :buttons=\"fixedMenu\" />\n              <slot name=\"bottom-left\" />\n            </div>\n            <div class=\"flex items-center gap-2\">\n              <Button\n                label=\"Discard\"\n                theme=\"gray\"\n                variant=\"subtle\"\n                @click=\"\n                  () => {\n                    editor.commands.clearContent(true);\n                    $emit('clear');\n                  }\n                \"\n              />\n              <slot name=\"bottom-right\" />\n            </div>\n          </div>\n        </div>\n      </template>\n    </FTextEditor>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed, nextTick, ref } from \"vue\";\nimport { TextEditor as FTextEditor, TextEditorFixedMenu } from \"frappe-ui\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { UserAvatar } from \"@/components\";\nimport { PreserveVideoControls } from \"@/tiptap-extensions\";\nimport { getFontFamily } from \"@/utils\";\n\ninterface P {\n  modelValue: string;\n  autofocus?: boolean;\n}\n\ninterface E {\n  (event: \"clear\"): void;\n  (event: \"update:modelValue\", any): string;\n}\n\nconst props = withDefaults(defineProps<P>(), {\n  autofocus: false,\n});\n\ndefineEmits<E>();\n\nconst e = ref(null);\nconst editor = computed(() => e.value.editor);\nconst authStore = useAuthStore();\nconst fixedMenu = [\n  \"Paragraph\",\n  [\"Heading 2\", \"Heading 3\", \"Heading 4\", \"Heading 5\"],\n  \"Bullet List\",\n  \"Numbered List\",\n  \"Image\",\n  \"Video\",\n  \"Link\",\n  \"Blockquote\",\n  \"Code\",\n];\n\ndefineExpose({\n  editor,\n});\n\nif (props.autofocus) {\n  nextTick(() => e.value.editor.commands.focus());\n}\n</script>\n","<template>\n  <HTextEditor\n    v-if=\"expand\"\n    ref=\"e\"\n    :model-value=\"content\"\n    :placeholder=\"placeholder\"\n    @update:model-value=\"$emit('update:content', $event)\"\n    @clear=\"() => $emit('update:attachments', [])\"\n  >\n    <template #bottom-top>\n      <div class=\"flex flex-wrap gap-2\">\n        <AttachmentItem\n          v-for=\"a in attachments\"\n          :key=\"a.file_url\"\n          :label=\"a.file_name\"\n        >\n          <template #suffix>\n            <Icon\n              icon=\"lucide:x\"\n              @click.stop=\"\n                $emit(\n                  'update:attachments',\n                  attachments.filter((b) => b.file_url !== a.file_url)\n                )\n              \"\n            />\n          </template>\n        </AttachmentItem>\n      </div>\n    </template>\n    <template #bottom-left>\n      <span class=\"flex\">\n        <slot name=\"bottom-left\" />\n        <FileUploader\n          :upload-args=\"{\n            folder: 'Home/Helpdesk',\n            private: true,\n          }\"\n          @success=\"(f: File) => $emit('update:attachments', [...attachments, f])\"\n          @failure=\"\n            () =>\n              createToast({\n                title: 'Error Uploading File',\n                icon: 'x',\n                iconClasses: 'text-red-600',\n              })\n          \"\n        >\n          <template #default=\"{ openFileSelector }\">\n            <Button theme=\"gray\" variant=\"ghost\" @click=\"openFileSelector()\">\n              <template #icon>\n                <Icon icon=\"lucide:paperclip\" />\n              </template>\n            </Button>\n          </template>\n        </FileUploader>\n      </span>\n    </template>\n    <template #top-right>\n      <slot name=\"top-right\" />\n    </template>\n    <template #top-bottom>\n      <slot name=\"top-bottom\" />\n    </template>\n    <template #bottom-right>\n      <slot name=\"bottom-right\" />\n    </template>\n  </HTextEditor>\n  <div\n    v-else\n    class=\"flex w-full cursor-pointer items-center gap-2 rounded bg-gray-100 px-3.5 py-2 hover:bg-gray-200\"\n    @click=\"() => $emit('update:expand', !expand)\"\n  >\n    <UserAvatar\n      :name=\"authStore.userName\"\n      :image=\"authStore.userImage\"\n      size=\"sm\"\n    />\n    <span class=\"text-base text-gray-700\">\n      {{ placeholder }}\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { FileUploader } from \"frappe-ui\";\nimport { Icon } from \"@iconify/vue\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport {\n  AttachmentItem,\n  TextEditor as HTextEditor,\n  UserAvatar,\n} from \"@/components\";\nimport { File } from \"@/types\";\nimport { createToast } from \"@/utils\";\n\ninterface P {\n  content: string;\n  placeholder: string;\n  attachments: File[];\n  expand?: boolean;\n}\n\ninterface E {\n  (event: \"update:content\", content: string): void;\n  (event: \"update:attachments\", attachments: File[]): void;\n  (event: \"update:expand\", expand: boolean): void;\n}\n\nwithDefaults(defineProps<P>(), {\n  expand: false,\n});\ndefineEmits<E>();\nconst e = ref(null);\nconst editor = computed(() => e.value.editor);\nconst authStore = useAuthStore();\ndefineExpose({\n  editor,\n});\n</script>\n"],"names":["props","__props","e","ref","editor","computed","authStore","useAuthStore","fixedMenu","__expose","nextTick"],"mappings":"69BA4EA,MAAMA,EAAQC,EAMRC,EAAIC,EAAI,IAAI,EACZC,EAASC,EAAS,IAAMH,EAAE,MAAM,MAAM,EACtCI,EAAYC,IACZC,EAAY,CAChB,YACA,CAAC,YAAa,YAAa,YAAa,WAAW,EACnD,cACA,gBACA,QACA,QACA,OACA,aACA,MAAA,EAGW,OAAAC,EAAA,CACX,OAAAL,CAAA,CACD,EAEGJ,EAAM,WACRU,EAAS,IAAMR,EAAE,MAAM,OAAO,SAAS,OAAO,imCCY1C,MAAAA,EAAIC,EAAI,IAAI,EACZC,EAASC,EAAS,IAAMH,EAAE,MAAM,MAAM,EACtCI,EAAYC,IACL,OAAAE,EAAA,CACX,OAAAL,CAAA,CACD"}