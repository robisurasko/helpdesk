{"version":3,"file":"ListViewBuilder.vue_vue_type_script_setup_true_lang-46520700.js","sources":["../../../../node_modules/@headlessui/vue/dist/components/popover/popover.js","../../../../node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js","../../../../node_modules/frappe-ui/src/components/DatePicker/utils.ts","../../../../node_modules/frappe-ui/src/components/DatePicker/useDatePicker.ts","../../../../node_modules/frappe-ui/src/components/DatePicker/DatePicker.vue","../../../../node_modules/frappe-ui/src/components/DatePicker/DateTimePicker.vue","../../../../node_modules/frappe-ui/src/components/DatePicker/DateRangePicker.vue","../../../../node_modules/frappe-ui/src/components/TabButtons.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListEmptyState.vue","../../../../node_modules/frappe-ui/src/components/ListView/utils.js","../../../../node_modules/frappe-ui/src/components/ListView/ListHeaderItem.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListHeader.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListRowItem.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListRow.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListRows.vue","../../../../node_modules/frappe-ui/src/icons/DownSolid.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListGroupHeader.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListGroupRows.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListGroups.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListSelectBanner.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListView.vue","../../../../node_modules/frappe-ui/src/components/ListView/ListFooter.vue","../../../../node_modules/frappe-ui/src/components/ListFilter/NestedPopover.vue","../../../../desk/src/components/icons/ColumnsIcon.vue","../../../../desk/src/components/icons/EditIcon.vue","../../../../desk/src/components/icons/RefreshIcon.vue","../../../../desk/src/components/icons/ReloadIcon.vue","../../../../desk/src/components/icons/AscendingIcon.vue","../../../../desk/src/components/icons/DescendingIcon.vue","../../../../desk/src/components/icons/SortIcon.vue","../../../../desk/src/components/icons/DragIcon.vue","../../../../desk/src/components/NestedPopover.vue","../../../../desk/src/components/icons/FilterIcon.vue","../../../../desk/src/components/view-controls/Filter.vue","../../../../node_modules/@vueuse/integrations/node_modules/@vueuse/shared/index.mjs","../../../../node_modules/@vueuse/integrations/node_modules/@vueuse/core/index.mjs","../../../../node_modules/@vueuse/integrations/useSortable.mjs","../../../../desk/src/components/view-controls/SortBy.vue","../../../../desk/src/components/view-controls/QuickFilterField.vue","../../../../desk/src/components/view-controls/QuickFilters.vue","../../../../desk/src/components/view-controls/ColumnSettings.vue","../../../../desk/src/components/ListRows.vue","../../../../desk/src/components/ListViewBuilder.vue"],"sourcesContent":["import{computed as O,defineComponent as j,Fragment as W,h as T,inject as q,onMounted as ee,onUnmounted as te,provide as z,ref as R,shallowRef as ie,watchEffect as J}from\"vue\";import{useNestedPortals as se}from'../../components/portal/portal.js';import{useEventListener as pe}from'../../hooks/use-event-listener.js';import{useId as H}from'../../hooks/use-id.js';import{useOutsideClick as fe}from'../../hooks/use-outside-click.js';import{useResolveButtonType as ve}from'../../hooks/use-resolve-button-type.js';import{useMainTreeNode as ce,useRootContainers as de}from'../../hooks/use-root-containers.js';import{Direction as M,useTabDirection as oe}from'../../hooks/use-tab-direction.js';import{Features as Q,Hidden as X}from'../../internal/hidden.js';import{State as N,useOpenClosed as ne,useOpenClosedProvider as Pe}from'../../internal/open-closed.js';import{Keys as k}from'../../keyboard.js';import{dom as n}from'../../utils/dom.js';import{Focus as D,FocusableMode as me,focusIn as B,FocusResult as Y,getFocusableElements as Z,isFocusableElement as be}from'../../utils/focus-management.js';import{match as K}from'../../utils/match.js';import'../../utils/micro-task.js';import{getOwnerDocument as V}from'../../utils/owner.js';import{Features as _,render as A}from'../../utils/render.js';var Se=(s=>(s[s.Open=0]=\"Open\",s[s.Closed=1]=\"Closed\",s))(Se||{});let re=Symbol(\"PopoverContext\");function U(d){let P=q(re,null);if(P===null){let s=new Error(`<${d} /> is missing a parent <${ye.name} /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,U),s}return P}let le=Symbol(\"PopoverGroupContext\");function ae(){return q(le,null)}let ue=Symbol(\"PopoverPanelContext\");function ge(){return q(ue,null)}let ye=j({name:\"Popover\",inheritAttrs:!1,props:{as:{type:[Object,String],default:\"div\"}},setup(d,{slots:P,attrs:s,expose:h}){var u;let f=R(null);h({el:f,$el:f});let t=R(1),o=R(null),y=R(null),v=R(null),m=R(null),b=O(()=>V(f)),E=O(()=>{var L,$;if(!n(o)||!n(m))return!1;for(let x of document.querySelectorAll(\"body > *\"))if(Number(x==null?void 0:x.contains(n(o)))^Number(x==null?void 0:x.contains(n(m))))return!0;let e=Z(),r=e.indexOf(n(o)),l=(r+e.length-1)%e.length,g=(r+1)%e.length,G=e[l],C=e[g];return!((L=n(m))!=null&&L.contains(G))&&!(($=n(m))!=null&&$.contains(C))}),a={popoverState:t,buttonId:R(null),panelId:R(null),panel:m,button:o,isPortalled:E,beforePanelSentinel:y,afterPanelSentinel:v,togglePopover(){t.value=K(t.value,{[0]:1,[1]:0})},closePopover(){t.value!==1&&(t.value=1)},close(e){a.closePopover();let r=(()=>e?e instanceof HTMLElement?e:e.value instanceof HTMLElement?n(e):n(a.button):n(a.button))();r==null||r.focus()}};z(re,a),Pe(O(()=>K(t.value,{[0]:N.Open,[1]:N.Closed})));let S={buttonId:a.buttonId,panelId:a.panelId,close(){a.closePopover()}},c=ae(),I=c==null?void 0:c.registerPopover,[F,w]=se(),i=de({mainTreeNodeRef:c==null?void 0:c.mainTreeNodeRef,portals:F,defaultContainers:[o,m]});function p(){var e,r,l,g;return(g=c==null?void 0:c.isFocusWithinPopoverGroup())!=null?g:((e=b.value)==null?void 0:e.activeElement)&&(((r=n(o))==null?void 0:r.contains(b.value.activeElement))||((l=n(m))==null?void 0:l.contains(b.value.activeElement)))}return J(()=>I==null?void 0:I(S)),pe((u=b.value)==null?void 0:u.defaultView,\"focus\",e=>{var r,l;e.target!==window&&e.target instanceof HTMLElement&&t.value===0&&(p()||o&&m&&(i.contains(e.target)||(r=n(a.beforePanelSentinel))!=null&&r.contains(e.target)||(l=n(a.afterPanelSentinel))!=null&&l.contains(e.target)||a.closePopover()))},!0),fe(i.resolveContainers,(e,r)=>{var l;a.closePopover(),be(r,me.Loose)||(e.preventDefault(),(l=n(o))==null||l.focus())},O(()=>t.value===0)),()=>{let e={open:t.value===0,close:a.close};return T(W,[T(w,{},()=>A({theirProps:{...d,...s},ourProps:{ref:f},slot:e,slots:P,attrs:s,name:\"Popover\"})),T(i.MainTreeNode)])}}}),Ge=j({name:\"PopoverButton\",props:{as:{type:[Object,String],default:\"button\"},disabled:{type:[Boolean],default:!1},id:{type:String,default:null}},inheritAttrs:!1,setup(d,{attrs:P,slots:s,expose:h}){var u;let f=(u=d.id)!=null?u:`headlessui-popover-button-${H()}`,t=U(\"PopoverButton\"),o=O(()=>V(t.button));h({el:t.button,$el:t.button}),ee(()=>{t.buttonId.value=f}),te(()=>{t.buttonId.value=null});let y=ae(),v=y==null?void 0:y.closeOthers,m=ge(),b=O(()=>m===null?!1:m.value===t.panelId.value),E=R(null),a=`headlessui-focus-sentinel-${H()}`;b.value||J(()=>{t.button.value=n(E)});let S=ve(O(()=>({as:d.as,type:P.type})),E);function c(e){var r,l,g,G,C;if(b.value){if(t.popoverState.value===1)return;switch(e.key){case k.Space:case k.Enter:e.preventDefault(),(l=(r=e.target).click)==null||l.call(r),t.closePopover(),(g=n(t.button))==null||g.focus();break}}else switch(e.key){case k.Space:case k.Enter:e.preventDefault(),e.stopPropagation(),t.popoverState.value===1&&(v==null||v(t.buttonId.value)),t.togglePopover();break;case k.Escape:if(t.popoverState.value!==0)return v==null?void 0:v(t.buttonId.value);if(!n(t.button)||(G=o.value)!=null&&G.activeElement&&!((C=n(t.button))!=null&&C.contains(o.value.activeElement)))return;e.preventDefault(),e.stopPropagation(),t.closePopover();break}}function I(e){b.value||e.key===k.Space&&e.preventDefault()}function F(e){var r,l;d.disabled||(b.value?(t.closePopover(),(r=n(t.button))==null||r.focus()):(e.preventDefault(),e.stopPropagation(),t.popoverState.value===1&&(v==null||v(t.buttonId.value)),t.togglePopover(),(l=n(t.button))==null||l.focus()))}function w(e){e.preventDefault(),e.stopPropagation()}let i=oe();function p(){let e=n(t.panel);if(!e)return;function r(){K(i.value,{[M.Forwards]:()=>B(e,D.First),[M.Backwards]:()=>B(e,D.Last)})===Y.Error&&B(Z().filter(g=>g.dataset.headlessuiFocusGuard!==\"true\"),K(i.value,{[M.Forwards]:D.Next,[M.Backwards]:D.Previous}),{relativeTo:n(t.button)})}r()}return()=>{let e=t.popoverState.value===0,r={open:e},{...l}=d,g=b.value?{ref:E,type:S.value,onKeydown:c,onClick:F}:{ref:E,id:f,type:S.value,\"aria-expanded\":t.popoverState.value===0,\"aria-controls\":n(t.panel)?t.panelId.value:void 0,disabled:d.disabled?!0:void 0,onKeydown:c,onKeyup:I,onClick:F,onMousedown:w};return T(W,[A({ourProps:g,theirProps:{...P,...l},slot:r,attrs:P,slots:s,name:\"PopoverButton\"}),e&&!b.value&&t.isPortalled.value&&T(X,{id:a,features:Q.Focusable,\"data-headlessui-focus-guard\":!0,as:\"button\",type:\"button\",onFocus:p})])}}}),$e=j({name:\"PopoverOverlay\",props:{as:{type:[Object,String],default:\"div\"},static:{type:Boolean,default:!1},unmount:{type:Boolean,default:!0}},setup(d,{attrs:P,slots:s}){let h=U(\"PopoverOverlay\"),f=`headlessui-popover-overlay-${H()}`,t=ne(),o=O(()=>t!==null?(t.value&N.Open)===N.Open:h.popoverState.value===0);function y(){h.closePopover()}return()=>{let v={open:h.popoverState.value===0};return A({ourProps:{id:f,\"aria-hidden\":!0,onClick:y},theirProps:d,slot:v,attrs:P,slots:s,features:_.RenderStrategy|_.Static,visible:o.value,name:\"PopoverOverlay\"})}}}),je=j({name:\"PopoverPanel\",props:{as:{type:[Object,String],default:\"div\"},static:{type:Boolean,default:!1},unmount:{type:Boolean,default:!0},focus:{type:Boolean,default:!1},id:{type:String,default:null}},inheritAttrs:!1,setup(d,{attrs:P,slots:s,expose:h}){var w;let f=(w=d.id)!=null?w:`headlessui-popover-panel-${H()}`,{focus:t}=d,o=U(\"PopoverPanel\"),y=O(()=>V(o.panel)),v=`headlessui-focus-sentinel-before-${H()}`,m=`headlessui-focus-sentinel-after-${H()}`;h({el:o.panel,$el:o.panel}),ee(()=>{o.panelId.value=f}),te(()=>{o.panelId.value=null}),z(ue,o.panelId),J(()=>{var p,u;if(!t||o.popoverState.value!==0||!o.panel)return;let i=(p=y.value)==null?void 0:p.activeElement;(u=n(o.panel))!=null&&u.contains(i)||B(n(o.panel),D.First)});let b=ne(),E=O(()=>b!==null?(b.value&N.Open)===N.Open:o.popoverState.value===0);function a(i){var p,u;switch(i.key){case k.Escape:if(o.popoverState.value!==0||!n(o.panel)||y.value&&!((p=n(o.panel))!=null&&p.contains(y.value.activeElement)))return;i.preventDefault(),i.stopPropagation(),o.closePopover(),(u=n(o.button))==null||u.focus();break}}function S(i){var u,e,r,l,g;let p=i.relatedTarget;p&&n(o.panel)&&((u=n(o.panel))!=null&&u.contains(p)||(o.closePopover(),((r=(e=n(o.beforePanelSentinel))==null?void 0:e.contains)!=null&&r.call(e,p)||(g=(l=n(o.afterPanelSentinel))==null?void 0:l.contains)!=null&&g.call(l,p))&&p.focus({preventScroll:!0})))}let c=oe();function I(){let i=n(o.panel);if(!i)return;function p(){K(c.value,{[M.Forwards]:()=>{var e;B(i,D.First)===Y.Error&&((e=n(o.afterPanelSentinel))==null||e.focus())},[M.Backwards]:()=>{var u;(u=n(o.button))==null||u.focus({preventScroll:!0})}})}p()}function F(){let i=n(o.panel);if(!i)return;function p(){K(c.value,{[M.Forwards]:()=>{let u=n(o.button),e=n(o.panel);if(!u)return;let r=Z(),l=r.indexOf(u),g=r.slice(0,l+1),C=[...r.slice(l+1),...g];for(let L of C.slice())if(L.dataset.headlessuiFocusGuard===\"true\"||e!=null&&e.contains(L)){let $=C.indexOf(L);$!==-1&&C.splice($,1)}B(C,D.First,{sorted:!1})},[M.Backwards]:()=>{var e;B(i,D.Previous)===Y.Error&&((e=n(o.button))==null||e.focus())}})}p()}return()=>{let i={open:o.popoverState.value===0,close:o.close},{focus:p,...u}=d,e={ref:o.panel,id:f,onKeydown:a,onFocusout:t&&o.popoverState.value===0?S:void 0,tabIndex:-1};return A({ourProps:e,theirProps:{...P,...u},attrs:P,slot:i,slots:{...s,default:(...r)=>{var l;return[T(W,[E.value&&o.isPortalled.value&&T(X,{id:v,ref:o.beforePanelSentinel,features:Q.Focusable,\"data-headlessui-focus-guard\":!0,as:\"button\",type:\"button\",onFocus:I}),(l=s.default)==null?void 0:l.call(s,...r),E.value&&o.isPortalled.value&&T(X,{id:m,ref:o.afterPanelSentinel,features:Q.Focusable,\"data-headlessui-focus-guard\":!0,as:\"button\",type:\"button\",onFocus:F})])]}},features:_.RenderStrategy|_.Static,visible:E.value,name:\"PopoverPanel\"})}}}),Ae=j({name:\"PopoverGroup\",inheritAttrs:!1,props:{as:{type:[Object,String],default:\"div\"}},setup(d,{attrs:P,slots:s,expose:h}){let f=R(null),t=ie([]),o=O(()=>V(f)),y=ce();h({el:f,$el:f});function v(a){let S=t.value.indexOf(a);S!==-1&&t.value.splice(S,1)}function m(a){return t.value.push(a),()=>{v(a)}}function b(){var c;let a=o.value;if(!a)return!1;let S=a.activeElement;return(c=n(f))!=null&&c.contains(S)?!0:t.value.some(I=>{var F,w;return((F=a.getElementById(I.buttonId.value))==null?void 0:F.contains(S))||((w=a.getElementById(I.panelId.value))==null?void 0:w.contains(S))})}function E(a){for(let S of t.value)S.buttonId.value!==a&&S.close()}return z(le,{registerPopover:m,unregisterPopover:v,isFocusWithinPopoverGroup:b,closeOthers:E,mainTreeNodeRef:y.mainTreeNodeRef}),()=>T(W,[A({ourProps:{ref:f},theirProps:{...d,...P},slot:{},attrs:P,slots:s,name:\"PopoverGroup\"}),T(y.MainTreeNode)])}});export{ye as Popover,Ge as PopoverButton,Ae as PopoverGroup,$e as PopoverOverlay,je as PopoverPanel};\n","import{computed as o,defineComponent as F,Fragment as _,h as C,inject as $,onMounted as D,onUnmounted as U,provide as W,ref as k,toRaw as y,watch as J}from\"vue\";import{useControllable as q}from'../../hooks/use-controllable.js';import{useId as x}from'../../hooks/use-id.js';import{useTreeWalker as Q}from'../../hooks/use-tree-walker.js';import{Features as X,Hidden as Y}from'../../internal/hidden.js';import{Keys as h}from'../../keyboard.js';import{dom as E}from'../../utils/dom.js';import{Focus as w,focusIn as I,FocusResult as P,sortByDomNode as Z}from'../../utils/focus-management.js';import{attemptSubmit as z,objectToFormEntries as ee}from'../../utils/form.js';import{getOwnerDocument as A}from'../../utils/owner.js';import{compact as te,omit as ae,render as B}from'../../utils/render.js';import{Description as ne,useDescriptions as V}from'../description/description.js';import{Label as re,useLabels as j}from'../label/label.js';function le(t,m){return t===m}let H=Symbol(\"RadioGroupContext\");function N(t){let m=$(H,null);if(m===null){let u=new Error(`<${t} /> is missing a parent <RadioGroup /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(u,N),u}return m}let he=F({name:\"RadioGroup\",emits:{\"update:modelValue\":t=>!0},props:{as:{type:[Object,String],default:\"div\"},disabled:{type:[Boolean],default:!1},by:{type:[String,Function],default:()=>le},modelValue:{type:[Object,String,Number,Boolean],default:void 0},defaultValue:{type:[Object,String,Number,Boolean],default:void 0},form:{type:String,optional:!0},name:{type:String,optional:!0},id:{type:String,default:null}},inheritAttrs:!1,setup(t,{emit:m,attrs:u,slots:S,expose:g}){var O;let d=(O=t.id)!=null?O:`headlessui-radiogroup-${x()}`,p=k(null),l=k([]),R=j({name:\"RadioGroupLabel\"}),T=V({name:\"RadioGroupDescription\"});g({el:p,$el:p});let[f,G]=q(o(()=>t.modelValue),e=>m(\"update:modelValue\",e),o(()=>t.defaultValue)),s={options:l,value:f,disabled:o(()=>t.disabled),firstOption:o(()=>l.value.find(e=>!e.propsRef.disabled)),containsCheckedOption:o(()=>l.value.some(e=>s.compare(y(e.propsRef.value),y(t.modelValue)))),compare(e,a){if(typeof t.by==\"string\"){let n=t.by;return(e==null?void 0:e[n])===(a==null?void 0:a[n])}return t.by(e,a)},change(e){var n;if(t.disabled||s.compare(y(f.value),y(e)))return!1;let a=(n=l.value.find(i=>s.compare(y(i.propsRef.value),y(e))))==null?void 0:n.propsRef;return a!=null&&a.disabled?!1:(G(e),!0)},registerOption(e){l.value.push(e),l.value=Z(l.value,a=>a.element)},unregisterOption(e){let a=l.value.findIndex(n=>n.id===e);a!==-1&&l.value.splice(a,1)}};W(H,s),Q({container:o(()=>E(p)),accept(e){return e.getAttribute(\"role\")===\"radio\"?NodeFilter.FILTER_REJECT:e.hasAttribute(\"role\")?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT},walk(e){e.setAttribute(\"role\",\"none\")}});function v(e){if(!p.value||!p.value.contains(e.target))return;let a=l.value.filter(n=>n.propsRef.disabled===!1).map(n=>n.element);switch(e.key){case h.Enter:z(e.currentTarget);break;case h.ArrowLeft:case h.ArrowUp:if(e.preventDefault(),e.stopPropagation(),I(a,w.Previous|w.WrapAround)===P.Success){let i=l.value.find(r=>{var c;return r.element===((c=A(p))==null?void 0:c.activeElement)});i&&s.change(i.propsRef.value)}break;case h.ArrowRight:case h.ArrowDown:if(e.preventDefault(),e.stopPropagation(),I(a,w.Next|w.WrapAround)===P.Success){let i=l.value.find(r=>{var c;return r.element===((c=A(r.element))==null?void 0:c.activeElement)});i&&s.change(i.propsRef.value)}break;case h.Space:{e.preventDefault(),e.stopPropagation();let n=l.value.find(i=>{var r;return i.element===((r=A(i.element))==null?void 0:r.activeElement)});n&&s.change(n.propsRef.value)}break}}let b=o(()=>{var e;return(e=E(p))==null?void 0:e.closest(\"form\")});return D(()=>{J([b],()=>{if(!b.value||t.defaultValue===void 0)return;function e(){s.change(t.defaultValue)}return b.value.addEventListener(\"reset\",e),()=>{var a;(a=b.value)==null||a.removeEventListener(\"reset\",e)}},{immediate:!0})}),()=>{let{disabled:e,name:a,form:n,...i}=t,r={ref:p,id:d,role:\"radiogroup\",\"aria-labelledby\":R.value,\"aria-describedby\":T.value,onKeydown:v};return C(_,[...a!=null&&f.value!=null?ee({[a]:f.value}).map(([c,L])=>C(Y,te({features:X.Hidden,key:c,as:\"input\",type:\"hidden\",hidden:!0,readOnly:!0,form:n,disabled:e,name:c,value:L}))):[],B({ourProps:r,theirProps:{...u,...ae(i,[\"modelValue\",\"defaultValue\",\"by\"])},slot:{},attrs:u,slots:S,name:\"RadioGroup\"})])}}});var ie=(u=>(u[u.Empty=1]=\"Empty\",u[u.Active=2]=\"Active\",u))(ie||{});let Oe=F({name:\"RadioGroupOption\",props:{as:{type:[Object,String],default:\"div\"},value:{type:[Object,String,Number,Boolean]},disabled:{type:Boolean,default:!1},id:{type:String,default:null}},setup(t,{attrs:m,slots:u,expose:S}){var i;let g=(i=t.id)!=null?i:`headlessui-radiogroup-option-${x()}`,d=N(\"RadioGroupOption\"),p=j({name:\"RadioGroupLabel\"}),l=V({name:\"RadioGroupDescription\"}),R=k(null),T=o(()=>({value:t.value,disabled:t.disabled})),f=k(1);S({el:R,$el:R});let G=o(()=>E(R));D(()=>d.registerOption({id:g,element:G,propsRef:T})),U(()=>d.unregisterOption(g));let s=o(()=>{var r;return((r=d.firstOption.value)==null?void 0:r.id)===g}),v=o(()=>d.disabled.value||t.disabled),b=o(()=>d.compare(y(d.value.value),y(t.value))),O=o(()=>v.value?-1:b.value||!d.containsCheckedOption.value&&s.value?0:-1);function e(){var r;d.change(t.value)&&(f.value|=2,(r=E(R))==null||r.focus())}function a(){f.value|=2}function n(){f.value&=-3}return()=>{let{value:r,disabled:c,...L}=t,K={checked:b.value,disabled:v.value,active:Boolean(f.value&2)},M={id:g,ref:R,role:\"radio\",\"aria-checked\":b.value?\"true\":\"false\",\"aria-labelledby\":p.value,\"aria-describedby\":l.value,\"aria-disabled\":v.value?!0:void 0,tabIndex:O.value,onClick:v.value?void 0:e,onFocus:v.value?void 0:a,onBlur:v.value?void 0:n};return B({ourProps:M,theirProps:L,slot:K,attrs:m,slots:u,name:\"RadioGroupOption\"})}}}),ke=re,Ee=ne;export{he as RadioGroup,Ee as RadioGroupDescription,ke as RadioGroupLabel,Oe as RadioGroupOption};\n","import { dayjs } from '../../utils/dayjs'\n\ntype DateConstructorParam = string | number | Date\n\nfunction getDate(...args: DateConstructorParam[]): Date {\n  return new Date(...(args as [DateConstructorParam]))\n}\n\nfunction getDateValue(date: Date | string) {\n  if (!date || date.toString() === 'Invalid Date') return ''\n\n  return dayjs(date)\n    .set('hour', 0)\n    .set('minute', 0)\n    .set('second', 0)\n    .set('millisecond', 0)\n    .format('YYYY-MM-DD')\n}\n\nfunction getDatesAfter(date: Date, count: number) {\n  let incrementer = 1\n  if (count < 0) {\n    incrementer = -1\n    count = Math.abs(count)\n  }\n  const dates: Date[] = []\n\n  while (count) {\n    date = getDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() + incrementer,\n    )\n    dates.push(date)\n    count--\n  }\n\n  if (incrementer === -1) {\n    return dates.reverse()\n  }\n  return dates\n}\n\nfunction getDaysInMonth(monthIndex: number, year: number) {\n  const daysInMonthMap = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  const daysInMonth = daysInMonthMap[monthIndex]\n  if (monthIndex === 1 && isLeapYear(year)) {\n    return 29\n  }\n  return daysInMonth\n}\n\nfunction isLeapYear(year: number) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}\n\nexport { getDate, getDateValue, getDatesAfter, getDaysInMonth, isLeapYear }\n","import { computed, ref } from 'vue'\nimport { getDate, getDatesAfter, getDaysInMonth } from './utils'\n\nexport function useDatePicker() {\n  const currentYear = ref<number>(0)\n  const currentMonth = ref<number>(0)\n\n  const today = computed(() => getDate())\n\n  const dates = computed(() => {\n    if (!(currentYear.value && currentMonth.value)) {\n      return []\n    }\n    const monthIndex = currentMonth.value - 1\n    const year = currentYear.value\n\n    const firstDayOfMonth = getDate(year, monthIndex, 1)\n    const lastDayOfMonth = getDate(year, monthIndex + 1, 0)\n    const leftPaddingCount = firstDayOfMonth.getDay()\n    const rightPaddingCount = 6 - lastDayOfMonth.getDay()\n\n    const leftPadding = getDatesAfter(firstDayOfMonth, -leftPaddingCount)\n    const rightPadding = getDatesAfter(lastDayOfMonth, rightPaddingCount)\n    const daysInMonth = getDaysInMonth(monthIndex, year)\n    const datesInMonth = getDatesAfter(firstDayOfMonth, daysInMonth - 1)\n\n    let dates = [\n      ...leftPadding,\n      firstDayOfMonth,\n      ...datesInMonth,\n      ...rightPadding,\n    ]\n\n    if (dates.length < 42) {\n      const lastDate = dates.at(-1)\n      if (lastDate) {\n        const finalPadding = getDatesAfter(lastDate, 42 - dates.length)\n        dates = dates.concat(...finalPadding)\n      }\n    }\n    return dates\n  })\n\n  const datesAsWeeks = computed(() => {\n    const datesAsWeeks: Date[][] = []\n    const computedDates = dates.value.slice()\n    while (computedDates.length) {\n      const week = computedDates.splice(0, 7)\n      datesAsWeeks.push(week)\n    }\n    return datesAsWeeks\n  })\n\n  const formattedMonth = computed(() => {\n    if (!(currentYear.value && currentMonth.value)) {\n      return ''\n    }\n    const date = getDate(currentYear.value, currentMonth.value - 1, 1)\n    const month = date.toLocaleString('en-US', {\n      month: 'long',\n    })\n    return `${month}, ${date.getFullYear()}`\n  })\n\n  function prevMonth() {\n    changeMonth(-1)\n  }\n\n  function nextMonth() {\n    changeMonth(1)\n  }\n\n  function changeMonth(adder: number) {\n    currentMonth.value = currentMonth.value + adder\n    if (currentMonth.value < 1) {\n      currentMonth.value = 12\n      currentYear.value = currentYear.value - 1\n    }\n    if (currentMonth.value > 12) {\n      currentMonth.value = 1\n      currentYear.value = currentYear.value + 1\n    }\n  }\n\n  return {\n    currentYear,\n    currentMonth,\n    today,\n    dates,\n    datesAsWeeks,\n    formattedMonth,\n    prevMonth,\n    nextMonth,\n    changeMonth,\n  }\n}\n","<template>\n  <Popover\n    @open=\"selectCurrentMonthYear\"\n    class=\"flex w-full [&>div:first-child]:w-full\"\n    :placement=\"placement\"\n  >\n    <template #target=\"{ togglePopover }\">\n      <TextInput\n        readonly\n        type=\"text\"\n        icon-left=\"calendar\"\n        :placeholder=\"placeholder\"\n        :value=\"dateValue && formatter ? formatter(dateValue) : dateValue\"\n        @focus=\"!readonly ? togglePopover() : null\"\n        class=\"w-full\"\n        :class=\"inputClass\"\n        v-bind=\"$attrs\"\n      />\n    </template>\n\n    <template #body=\"{ togglePopover }\">\n      <div\n        class=\"w-fit select-none text-base text-ink-gray-9 divide-y divide-outline-gray-modals rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n        :class=\"marginClass\"\n      >\n        <!-- Month Switcher -->\n        <div class=\"flex items-center p-1 text-ink-gray-4\">\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"prevMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-left\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n          <div class=\"flex-1 text-center text-base font-medium text-ink-gray-6\">\n            {{ formattedMonth }}\n          </div>\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"nextMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-right\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n        </div>\n\n        <!-- Date Input -->\n        <div class=\"flex items-center justify-center gap-1 p-1\">\n          <TextInput\n            class=\"text-sm\"\n            type=\"text\"\n            :value=\"dateValue\"\n            @change=\"selectDate(getDate($event.target.value))\"\n          />\n          <Button\n            :label=\"'Today'\"\n            class=\"text-sm\"\n            @click=\"\n              () => {\n                selectDate(getDate(), true)\n                togglePopover()\n              }\n            \"\n          />\n        </div>\n\n        <!-- Calendar -->\n        <div\n          class=\"flex flex-col items-center justify-center p-1 text-ink-gray-8\"\n        >\n          <div class=\"flex items-center text-xs uppercase\">\n            <div\n              class=\"flex h-6 w-8 items-center justify-center text-center\"\n              v-for=\"(d, i) in ['s', 'm', 't', 'w', 't', 'f', 's']\"\n              :key=\"i\"\n            >\n              {{ d }}\n            </div>\n          </div>\n          <div\n            class=\"flex items-center\"\n            v-for=\"(week, i) in datesAsWeeks\"\n            :key=\"i\"\n          >\n            <div\n              v-for=\"date in week\"\n              :key=\"getDateValue(date)\"\n              class=\"flex h-8 w-8 cursor-pointer items-center justify-center rounded hover:bg-surface-gray-2\"\n              :class=\"{\n                'text-ink-gray-3': date.getMonth() !== currentMonth - 1,\n                'font-extrabold text-ink-gray-9':\n                  getDateValue(date) === getDateValue(today),\n                'bg-surface-gray-6 text-ink-white hover:bg-surface-gray-6':\n                  getDateValue(date) === dateValue,\n              }\"\n              @click=\"\n                () => {\n                  selectDate(date)\n                  togglePopover()\n                }\n              \"\n            >\n              {{ date.getDate() }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex justify-end p-1\">\n          <Button\n            :label=\"'Clear'\"\n            class=\"text-sm\"\n            @click=\"\n              () => {\n                selectDate('')\n                togglePopover()\n              }\n            \"\n          />\n        </div>\n      </div>\n    </template>\n  </Popover>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\n\nimport { Button } from '../Button'\nimport Popover from '../Popover.vue'\nimport FeatherIcon from '../FeatherIcon.vue'\nimport TextInput from '../TextInput.vue'\n\nimport { getDate, getDateValue } from './utils'\nimport { useDatePicker } from './useDatePicker'\nimport { dayjsLocal } from '../../utils/dayjs'\n\nimport type { DatePickerEmits, DatePickerProps } from './DatePicker'\n\nconst props = defineProps<DatePickerProps>()\nconst emit = defineEmits<DatePickerEmits>()\n\nconst {\n  currentYear,\n  currentMonth,\n  today,\n  datesAsWeeks,\n  formattedMonth,\n  prevMonth,\n  nextMonth,\n} = useDatePicker()\n\nconst marginClass = computed(() => {\n  let _marginClass = 'mt-2'\n  if (props.placement?.startsWith('top')) {\n    _marginClass = 'mb-2'\n  } else if (props.placement?.startsWith('left')) {\n    _marginClass = 'mr-2'\n  } else if (props.placement?.startsWith('right')) {\n    _marginClass = 'ml-2'\n  }\n  return _marginClass\n})\n\nconst dateValue = computed(() => {\n  return props.value ? props.value : props.modelValue\n})\n\nfunction selectDate(date: Date | string, isNow: boolean = false) {\n  date = isNow ? dayjsLocal(date) : date\n  emit('change', getDateValue(date))\n  emit('update:modelValue', getDateValue(date))\n}\n\nfunction selectCurrentMonthYear() {\n  let date = dateValue.value ? getDate(dateValue.value) : getDate()\n  if (date.toString() === 'Invalid Date') {\n    date = getDate()\n  }\n  currentYear.value = date.getFullYear()\n  currentMonth.value = date.getMonth() + 1\n}\n\nonMounted(() => selectCurrentMonthYear())\n</script>\n","<template>\n  <Popover\n    @open=\"selectCurrentMonthYear\"\n    class=\"flex w-full [&>div:first-child]:w-full\"\n    :placement=\"placement\"\n  >\n    <template #target=\"{ togglePopover }\">\n      <TextInput\n        readonly\n        type=\"text\"\n        icon-left=\"calendar\"\n        :placeholder=\"placeholder\"\n        :value=\"dateValue && formatter ? formatter(dateValue) : dateValue\"\n        @focus=\"!readonly ? togglePopover() : null\"\n        class=\"w-full\"\n        :class=\"inputClass\"\n        v-bind=\"$attrs\"\n      />\n    </template>\n\n    <template #body=\"{ togglePopover }\">\n      <div\n        class=\"w-fit select-none text-base text-ink-gray-9 divide-y divide-outline-gray-modals rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n        :class=\"marginClass\"\n      >\n        <!-- Month Switcher -->\n        <div class=\"flex items-center p-1 text-ink-gray-4\">\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"prevMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-left\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n          <div class=\"flex-1 text-center text-base font-medium text-ink-gray-6\">\n            {{ formattedMonth }}\n          </div>\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"nextMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-right\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n        </div>\n\n        <!-- Date Time Input -->\n        <div class=\"flex items-center justify-center gap-1 p-1\">\n          <TextInput\n            class=\"text-sm\"\n            type=\"text\"\n            :value=\"dateValue\"\n            @change=\"\n              (e: Event) => {\n                updateDate((e.target as HTMLInputElement).value)\n                togglePopover()\n              }\n            \"\n          />\n          <Button\n            :label=\"'Now'\"\n            class=\"text-sm\"\n            @click=\"\n              () => {\n                selectDate(getDate(), true)\n                togglePopover()\n              }\n            \"\n          />\n        </div>\n\n        <!-- Date Picker -->\n        <div\n          class=\"flex flex-col items-center justify-center p-1 text-ink-gray-8\"\n        >\n          <div class=\"flex items-center text-xs uppercase\">\n            <div\n              class=\"flex h-6 w-8 items-center justify-center text-center\"\n              v-for=\"(d, i) in ['s', 'm', 't', 'w', 't', 'f', 's']\"\n              :key=\"i\"\n            >\n              {{ d }}\n            </div>\n          </div>\n          <div\n            class=\"flex items-center\"\n            v-for=\"(week, i) in datesAsWeeks\"\n            :key=\"i\"\n          >\n            <div\n              v-for=\"date in week\"\n              :key=\"toValue(date)\"\n              class=\"flex h-8 w-8 cursor-pointer items-center justify-center rounded hover:bg-surface-gray-2\"\n              :class=\"{\n                'text-ink-gray-3': date.getMonth() !== currentMonth - 1,\n                'font-extrabold text-ink-gray-9':\n                  toValue(date) === toValue(today),\n                'bg-surface-gray-6 text-ink-white hover:bg-surface-gray-6':\n                  toValue(date) === dateValue,\n              }\"\n              @click=\"\n                () => {\n                  selectDate(date)\n                  togglePopover()\n                }\n              \"\n            >\n              {{ date.getDate() }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Time Picker -->\n        <div class=\"flex items-center justify-around gap-2 p-1\">\n          <div>\n            {{ twoDigit(hour) }} : {{ twoDigit(minute) }} :\n            {{ twoDigit(second) }}\n          </div>\n          <div class=\"flex flex-col items-center justify-center\">\n            <div class=\"slider flex min-h-4 items-center justify-center\">\n              <TextInput\n                v-model=\"hour\"\n                name=\"hours\"\n                type=\"range\"\n                min=\"0\"\n                max=\"23\"\n                step=\"1\"\n                @change=\"\n                  () => {\n                    changeTime()\n                    togglePopover()\n                  }\n                \"\n              />\n            </div>\n            <div class=\"slider flex min-h-4 items-center justify-center\">\n              <TextInput\n                v-model=\"minute\"\n                name=\"minutes\"\n                type=\"range\"\n                min=\"0\"\n                max=\"59\"\n                step=\"1\"\n                @change=\"\n                  () => {\n                    changeTime()\n                    togglePopover()\n                  }\n                \"\n              />\n            </div>\n            <div class=\"slider flex min-h-4 items-center justify-center\">\n              <TextInput\n                v-model=\"second\"\n                name=\"seconds\"\n                type=\"range\"\n                min=\"0\"\n                max=\"59\"\n                step=\"1\"\n                @change=\"\n                  () => {\n                    changeTime()\n                    togglePopover()\n                  }\n                \"\n              />\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex justify-end p-1\">\n          <Button\n            :label=\"'Clear'\"\n            class=\"text-sm\"\n            @click=\"\n              () => {\n                selectDate('')\n                togglePopover()\n              }\n            \"\n          />\n        </div>\n      </div>\n    </template>\n  </Popover>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\n\nimport { Button } from '../Button'\nimport Popover from '../Popover.vue'\nimport FeatherIcon from '../FeatherIcon.vue'\nimport TextInput from '../TextInput.vue'\n\nimport { getDate } from './utils'\nimport { useDatePicker } from './useDatePicker'\nimport { dayjs, dayjsLocal, dayjsSystem } from '../../utils/dayjs'\n\nimport type { DatePickerEmits, DatePickerProps } from './DatePicker'\n\nconst props = defineProps<DatePickerProps>()\nconst emit = defineEmits<DatePickerEmits>()\n\nconst {\n  currentYear,\n  currentMonth,\n  today,\n  datesAsWeeks,\n  formattedMonth,\n  prevMonth,\n  nextMonth,\n} = useDatePicker()\n\nconst marginClass = computed(() => {\n  let _marginClass = 'mt-2'\n  if (props.placement?.startsWith('top')) {\n    _marginClass = 'mb-2'\n  } else if (props.placement?.startsWith('left')) {\n    _marginClass = 'mr-2'\n  } else if (props.placement?.startsWith('right')) {\n    _marginClass = 'ml-2'\n  }\n  return _marginClass\n})\n\nconst hour = ref<number>(0)\nconst minute = ref<number>(0)\nconst second = ref<number>(0)\n\nconst dateValue = computed(() => {\n  let date = props.value ? props.value : props.modelValue\n  return date ? dayjsLocal(date).format('YYYY-MM-DD HH:mm:ss') : ''\n})\n\nfunction changeTime() {\n  let date = dateValue.value ? getDate(dateValue.value) : getDate()\n  selectDate(date)\n}\n\nfunction selectDate(date: Date | string, isNow: boolean = false) {\n  if (isNow) {\n    date = dayjsLocal(date)\n    hour.value = date.hour()\n    minute.value = date.minute()\n    second.value = date.second()\n  }\n\n  let systemParsedDate = date\n    ? dayjsSystem(toValue(date)).format('YYYY-MM-DD HH:mm:ss')\n    : ''\n  emit('change', systemParsedDate)\n  emit('update:modelValue', systemParsedDate)\n}\n\nfunction toValue(date: Date | string) {\n  if (!date || date.toString() === 'Invalid Date') return ''\n\n  // \"YYYY-MM-DD HH:mm:ss\"\n  return dayjs(date)\n    .set('hour', hour.value)\n    .set('minute', minute.value)\n    .set('second', second.value)\n    .format('YYYY-MM-DD HH:mm:ss')\n}\n\nfunction twoDigit(number: number) {\n  return number.toString().padStart(2, '0')\n}\n\nfunction updateDate(date: Date | string) {\n  date = getDate(date)\n  hour.value = date.getHours()\n  minute.value = date.getMinutes()\n  second.value = date.getSeconds()\n  selectDate(date)\n}\n\nfunction selectCurrentMonthYear() {\n  let date = dateValue.value ? getDate(dateValue.value) : getDate()\n  if (date.toString() === 'Invalid Date') {\n    date = getDate()\n  }\n  currentYear.value = date.getFullYear()\n  currentMonth.value = date.getMonth() + 1\n  hour.value = date.getHours()\n  minute.value = date.getMinutes()\n  second.value = date.getSeconds()\n}\n\nonMounted(() => selectCurrentMonthYear())\n</script>\n\n<style scoped>\n.slider {\n  --trackHeight: 1px;\n  --thumbRadius: 10px;\n}\n:deep(.slider input[type='range']) {\n  -webkit-appearance: none;\n  appearance: none;\n  height: 100%;\n  background: transparent;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n:deep(.slider input[type='range']::-webkit-slider-runnable-track) {\n  appearance: none;\n  background: #000;\n  height: var(--trackHeight);\n  border-radius: 999px;\n}\n\n:deep(.slider input[type='range']:focus-visible) {\n  outline: none;\n}\n\n:deep(.slider input[type='range']::-webkit-slider-thumb) {\n  width: var(--thumbRadius);\n  height: var(--thumbRadius);\n  margin-top: calc((var(--trackHeight) - var(--thumbRadius)) / 2);\n  background: #fff;\n  border-radius: 3px;\n  pointer-events: all;\n  appearance: none;\n  outline: 1px solid #777777;\n  z-index: 1;\n}\n\n:deep(.slider:hover input[type='range']::-webkit-slider-thumb) {\n  outline: 1px solid #000;\n}\n:deep(.slider input[type='range']::-webkit-slider-thumb) {\n  width: var(--thumbRadius);\n  height: var(--thumbRadius);\n  margin-top: calc((var(--trackHeight) - var(--thumbRadius)) / 2);\n  background: #fff;\n  border-radius: 3px;\n  pointer-events: all;\n  appearance: none;\n  z-index: 1;\n}\n</style>\n","<template>\n  <Popover\n    @open=\"selectCurrentMonthYear\"\n    class=\"flex w-full [&>div:first-child]:w-full\"\n    :placement=\"placement\"\n  >\n    <template #target=\"{ togglePopover }\">\n      <TextInput\n        readonly\n        type=\"text\"\n        icon-left=\"calendar\"\n        :placeholder=\"placeholder\"\n        :value=\"dateValue && formatter ? formatDates(dateValue) : dateValue\"\n        @focus=\"!readonly ? togglePopover() : null\"\n        class=\"w-full\"\n        :class=\"inputClass\"\n        v-bind=\"$attrs\"\n      />\n    </template>\n\n    <template #body=\"{ togglePopover }\">\n      <div\n        class=\"w-fit select-none text-base text-ink-gray-9 divide-y divide-outline-gray-modals rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n        :class=\"marginClass\"\n      >\n        <!-- Month Switcher -->\n        <div class=\"flex items-center p-1 text-ink-gray-4\">\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"prevMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-left\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n          <div class=\"flex-1 text-center text-base font-medium text-ink-gray-6\">\n            {{ formattedMonth }}\n          </div>\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"nextMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-right\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n        </div>\n\n        <!-- Date Range Inputs -->\n        <div class=\"flex items-center justify-center gap-1 p-1\">\n          <TextInput class=\"w-28 text-sm\" type=\"text\" v-model=\"fromDate\" />\n          <TextInput class=\"w-28 text-sm\" type=\"text\" v-model=\"toDate\" />\n        </div>\n\n        <!-- Calendar -->\n        <div\n          class=\"flex flex-col items-center justify-center p-1 text-ink-gray-8\"\n        >\n          <div class=\"flex items-center text-xs uppercase\">\n            <div\n              class=\"flex h-6 w-8 items-center justify-center text-center\"\n              v-for=\"(d, i) in ['s', 'm', 't', 'w', 't', 'f', 's']\"\n              :key=\"i\"\n            >\n              {{ d }}\n            </div>\n          </div>\n          <div\n            class=\"flex items-center\"\n            v-for=\"(week, i) in datesAsWeeks\"\n            :key=\"i\"\n          >\n            <div\n              v-for=\"date in week\"\n              :key=\"getDateValue(date)\"\n              class=\"flex h-8 w-8 cursor-pointer items-center justify-center rounded hover:bg-surface-gray-2\"\n              :class=\"{\n                'text-ink-gray-3': date.getMonth() !== currentMonth - 1,\n                'text-ink-gray-9': date.getMonth() === currentMonth - 1,\n                'font-extrabold text-ink-gray-9':\n                  getDateValue(date) === getDateValue(today),\n                'rounded-none bg-surface-gray-3': isInRange(date),\n                'rounded-l-md rounded-r-none bg-surface-gray-6 text-ink-white hover:bg-surface-gray-6':\n                  fromDate && getDateValue(date) === getDateValue(fromDate),\n                'rounded-r-md bg-surface-gray-6 text-ink-white hover:bg-surface-gray-6':\n                  toDate && getDateValue(date) === getDateValue(toDate),\n              }\"\n              @click=\"() => handleDateClick(date)\"\n            >\n              {{ date.getDate() }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex justify-end space-x-1 p-1\">\n          <Button\n            :label=\"'Clear'\"\n            @click=\"\n              () => {\n                clearDates()\n                togglePopover()\n              }\n            \"\n            :disabled=\"!fromDate || !toDate\"\n          />\n          <Button\n            variant=\"solid\"\n            :label=\"'Apply'\"\n            :disabled=\"!fromDate || !toDate\"\n            @click=\"\n              () => {\n                selectDates()\n                togglePopover()\n              }\n            \"\n          />\n        </div>\n      </div>\n    </template>\n  </Popover>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted } from 'vue'\n\nimport { Button } from '../Button'\nimport Popover from '../Popover.vue'\nimport FeatherIcon from '../FeatherIcon.vue'\nimport TextInput from '../TextInput.vue'\n\nimport { getDate, getDateValue } from './utils'\nimport { useDatePicker } from './useDatePicker'\n\nimport type { DatePickerEmits, DatePickerProps } from './DatePicker'\n\nconst props = defineProps<DatePickerProps>()\nconst emit = defineEmits<DatePickerEmits>()\n\nconst {\n  currentYear,\n  currentMonth,\n  today,\n  datesAsWeeks,\n  formattedMonth,\n  prevMonth,\n  nextMonth,\n} = useDatePicker()\n\nconst marginClass = computed(() => {\n  let _marginClass = 'mt-2'\n  if (props.placement?.startsWith('top')) {\n    _marginClass = 'mb-2'\n  } else if (props.placement?.startsWith('left')) {\n    _marginClass = 'mr-2'\n  } else if (props.placement?.startsWith('right')) {\n    _marginClass = 'ml-2'\n  }\n  return _marginClass\n})\n\nconst dateValue = computed(() => {\n  return props.value ? props.value : props.modelValue\n})\n\nconst fromDate = ref<string>(dateValue.value ? dateValue.value[0] : '')\nconst toDate = ref<string>(dateValue.value ? dateValue.value[1] : '')\n\nfunction handleDateClick(date: Date) {\n  if (fromDate.value && toDate.value) {\n    fromDate.value = getDateValue(date)\n    toDate.value = ''\n  } else if (fromDate.value && !toDate.value) {\n    toDate.value = getDateValue(date)\n  } else {\n    fromDate.value = getDateValue(date)\n  }\n  swapDatesIfNecessary()\n}\n\nfunction swapDatesIfNecessary() {\n  if (!fromDate.value || !toDate.value) {\n    return\n  }\n\n  // if fromDate is greater than toDate, swap them\n  let from = getDate(fromDate.value)\n  let to = getDate(toDate.value)\n  if (from > to) {\n    let temp = from\n    from = to\n    to = temp\n  }\n  fromDate.value = getDateValue(from)\n  toDate.value = getDateValue(to)\n}\n\nfunction selectDates() {\n  let val = `${fromDate.value},${toDate.value}`\n  if (!fromDate.value && !toDate.value) {\n    val = ''\n  }\n  emit('change', val)\n  emit('update:modelValue', val)\n}\n\nfunction selectCurrentMonthYear() {\n  let date = toDate.value ? getDate(toDate.value) : today.value\n  currentYear.value = date.getFullYear()\n  currentMonth.value = date.getMonth() + 1\n}\n\nfunction isInRange(date: Date) {\n  if (!fromDate.value || !toDate.value) {\n    return false\n  }\n  return date >= getDate(fromDate.value) && date <= getDate(toDate.value)\n}\n\nfunction formatDates(value: string) {\n  if (!value) {\n    return ''\n  }\n  const values = value.split(',')\n  return props.formatter\n    ? props.formatter(values[0]) + ' to ' + props.formatter(values[1])\n    : value\n}\n\nfunction clearDates() {\n  fromDate.value = ''\n  toDate.value = ''\n  selectDates()\n}\n\nonMounted(() => selectCurrentMonthYear())\n</script>\n","<template>\n  <RadioGroup v-model=\"value\">\n    <div class=\"flex space-x-1 rounded bg-surface-gray-2 p-0.5 text-sm\">\n      <RadioGroupOption\n        as=\"template\"\n        v-for=\"button in buttons\"\n        :key=\"button.label\"\n        :value=\"button.value ?? button.label\"\n        v-slot=\"{ active, checked }\"\n      >\n        <button\n          :class=\"[\n            active ? 'ring-outline-gray-2 focus-visible:ring' : '',\n            checked\n              ? 'bg-surface-white text-ink-gray-9 shadow'\n              : 'text-ink-gray-7',\n            'flex flex-1 justify-center gap-2 whitespace-nowrap rounded-[7px] px-3 py-[5px] leading-none transition-colors focus:outline-none',\n          ]\"\n        >\n          <FeatherIcon\n            class=\"h-4 w-4\"\n            v-if=\"button.icon\"\n            :name=\"button.icon\"\n            :label=\"button.label\"\n            :aria-label=\"button.label\"\n          />\n          <RadioGroupLabel\n            as=\"span\"\n            class=\"flex h-4 items-center\"\n            v-show=\"button.label && !button.hideLabel\"\n            >{{ button.label }}</RadioGroupLabel\n          >\n        </button>\n      </RadioGroupOption>\n    </div>\n  </RadioGroup>\n</template>\n<script>\nimport { RadioGroup, RadioGroupLabel, RadioGroupOption } from '@headlessui/vue'\nimport FeatherIcon from './FeatherIcon.vue'\n\nexport default {\n  name: 'TabButtons',\n  props: {\n    buttons: {\n      type: Array,\n      required: true,\n    },\n    modelValue: {\n      type: [String, Boolean, Number],\n    },\n  },\n  emits: ['update:modelValue'],\n  components: {\n    FeatherIcon,\n    RadioGroup,\n    RadioGroupOption,\n    RadioGroupLabel,\n  },\n  computed: {\n    value: {\n      get() {\n        return this.modelValue\n      },\n      set(value) {\n        this.$emit('update:modelValue', value)\n      },\n    },\n  },\n}\n</script>\n","<template>\n  <div\n    class=\"flex h-full w-full flex-col items-center justify-center text-base\"\n  >\n    <slot>\n      <div class=\"text-xl font-medium\">{{ list.options.emptyState.title }}</div>\n      <div class=\"mt-1 text-base text-ink-gray-5\">\n        {{ list.options.emptyState.description }}\n      </div>\n      <Button\n        v-if=\"list.options.emptyState.button\"\n        v-bind=\"list.options.emptyState.button\"\n        class=\"mt-4\"\n      ></Button>\n    </slot>\n  </div>\n</template>\n\n<script setup>\nimport { inject } from 'vue'\nimport { Button } from '../Button'\n\nconst list = inject('list')\n</script>\n","export function getGridTemplateColumns(columns, withCheckbox = true) {\n  let checkBoxWidth = withCheckbox ? '14px ' : ''\n  let columnsWidth = columns\n    .map((col) => {\n      let width = col.width || 1\n      if (typeof width === 'number') {\n        return width + 'fr'\n      }\n      return width\n    })\n    .join(' ')\n  return checkBoxWidth + columnsWidth\n}\n\nexport const alignmentMap = {\n  left: 'justify-start',\n  start: 'justify-start',\n  center: 'justify-center',\n  middle: 'justify-center',\n  right: 'justify-end',\n  end: 'justify-end',\n}\n","<template>\n  <div\n    ref=\"columnRef\"\n    class=\"group relative flex items-center\"\n    :class=\"item.align ? alignmentMap[item.align] : 'justify-between'\"\n  >\n    <div\n      class=\"flex items-center space-x-2 truncate text-sm text-ink-gray-5\"\n      :class=\"$attrs.class\"\n    >\n      <slot name=\"prefix\" v-bind=\"{ item }\" />\n      <slot>\n        <div class=\"truncate\">\n          {{ item.label }}\n        </div>\n      </slot>\n      <slot name=\"suffix\" v-bind=\"{ item }\" />\n    </div>\n    <slot v-if=\"list.options.resizeColumn\" name=\"resizer\" v-bind=\"{ item }\">\n      <div\n        class=\"flex h-4 absolute -right-2 w-2 cursor-col-resize justify-center\"\n        @mousedown=\"startResizing\"\n      >\n        <div\n          ref=\"resizer\"\n          class=\"h-full w-[2px] rounded-full transition-all duration-300 ease-in-out group-hover:bg-gray-400\"\n        />\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script setup>\nimport { alignmentMap } from './utils'\nimport { useDebounceFn } from '@vueuse/core'\nimport { ref, computed, inject } from 'vue'\n\nconst props = defineProps({\n  item: {\n    type: Object,\n    required: true,\n  },\n  debounce: {\n    type: Number,\n    default: 1000,\n  },\n})\n\nconst emit = defineEmits(['columnWidthUpdated'])\n\nconst resizer = ref(null)\nconst columnRef = ref(null)\n\nconst widthInPx = computed(() => {\n  if (typeof props.item.width === 'string') {\n    const parsedWidth = parseInt(props.item.width)\n    if (props.item.width.includes('rem')) {\n      return parsedWidth * 16\n    } else if (props.item.width.includes('px')) {\n      return parsedWidth\n    }\n  }\n  return columnRef.value.offsetWidth\n})\n\nconst startResizing = (e) => {\n  const initialX = e.clientX\n  const initialWidth = widthInPx.value\n  const onMouseMove = (e) => {\n    document.body.classList.add('select-none')\n    document.body.classList.add('cursor-col-resize')\n    resizer.value.style.backgroundColor = 'rgb(199 199 199)'\n    let newWidth = initialWidth + (e.clientX - initialX)\n\n    props.item.width = `${newWidth < 50 ? 50 : newWidth}px`\n    updateWidth(props.item.width)\n  }\n  const onMouseUp = () => {\n    document.body.classList.remove('select-none')\n    document.body.classList.remove('cursor-col-resize')\n    resizer.value.style.backgroundColor = ''\n    window.removeEventListener('mousemove', onMouseMove)\n    window.removeEventListener('mouseup', onMouseUp)\n  }\n  window.addEventListener('mousemove', onMouseMove)\n  window.addEventListener('mouseup', onMouseUp)\n}\n\nconst updateWidth = useDebounceFn((width) => {\n  props.item.width = width\n  emit('columnWidthUpdated')\n}, props.debounce)\n\nconst list = inject('list')\n</script>\n","<template>\n  <div\n    class=\"mb-2 grid items-center space-x-4 rounded bg-surface-gray-2 p-2\"\n    :style=\"{\n      gridTemplateColumns: getGridTemplateColumns(\n        list.columns,\n        list.options.selectable,\n      ),\n    }\"\n  >\n    <Checkbox\n      v-if=\"list.options.selectable\"\n      class=\"cursor-pointer duration-300\"\n      :modelValue=\"list.allRowsSelected\"\n      @click.stop=\"list.toggleAllRows\"\n    />\n    <slot>\n      <ListHeaderItem\n        v-for=\"column in list.columns\"\n        :key=\"column.key\"\n        :item=\"column\"\n        @columnWidthUpdated=\"emit('columnWidthUpdated', column)\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script setup>\nimport Checkbox from '../Checkbox.vue'\nimport ListHeaderItem from './ListHeaderItem.vue'\nimport { getGridTemplateColumns } from './utils'\nimport { inject } from 'vue'\n\nconst emit = defineEmits(['columnWidthUpdated'])\n\nconst list = inject('list')\n</script>\n","<template>\n  <component\n    :is=\"list.options.showTooltip ? Tooltip : 'div'\"\n    v-bind=\"list.options.showTooltip ? { text: label } : {}\"\n  >\n    <div class=\"flex items-center space-x-2\" :class=\"alignmentMap[align]\">\n      <slot name=\"prefix\">\n        <component\n          v-if=\"column.prefix\"\n          :is=\"\n            typeof column.prefix === 'function'\n              ? column.prefix({ row })\n              : column.prefix\n          \"\n        />\n      </slot>\n      <slot v-bind=\"{ label }\">\n        <div class=\"truncate text-base\">\n          {{ column?.getLabel ? column.getLabel({ row }) : label }}\n        </div>\n      </slot>\n      <slot name=\"suffix\" />\n    </div>\n  </component>\n</template>\n<script setup>\nimport { computed, inject } from 'vue'\nimport { Tooltip } from '../../index'\nimport { alignmentMap } from './utils'\n\nconst props = defineProps({\n  column: {\n    type: Object,\n    default: {},\n  },\n  row: {\n    type: Object,\n    default: {},\n  },\n  item: {\n    type: [String, Number, Object],\n    default: '',\n  },\n  align: {\n    type: String,\n    default: 'left',\n  },\n})\n\nconst label = computed(() => {\n  return getValue(props.item).label || ''\n})\n\nfunction getValue(value) {\n  if (value && typeof value === 'object') {\n    return value\n  }\n  return { label: value }\n}\n\nconst list = inject('list')\n</script>\n","<template>\n  <component\n    :is=\"list.options.getRowRoute ? 'router-link' : 'div'\"\n    :class=\"{ 'cursor-pointer': isHoverable }\"\n    class=\"flex flex-col transition-all duration-300 ease-in-out\"\n    v-bind=\"{\n      to: list.options.getRowRoute ? list.options.getRowRoute(row) : undefined,\n      onClick: list.options.onRowClick\n        ? () => list.options.onRowClick(row)\n        : undefined,\n    }\"\n  >\n    <component\n      :is=\"list.options.getRowRoute ? 'template' : 'button'\"\n      class=\"[all:unset] hover:[all:unset]\"\n    >\n      <div\n        class=\"grid items-center space-x-4 rounded px-2\"\n        :class=\"[\n          isSelected ? 'bg-surface-gray-2' : '',\n          isHoverable\n            ? isSelected\n              ? 'hover:bg-surface-gray-3'\n              : 'hover:bg-surface-menu-bar'\n            : '',\n        ]\"\n        :style=\"{\n          height: rowHeight,\n          gridTemplateColumns: getGridTemplateColumns(\n            list.columns,\n            list.options.selectable,\n          ),\n        }\"\n      >\n        <Checkbox\n          v-if=\"list.options.selectable\"\n          :modelValue=\"list.selections.has(row[list.rowKey])\"\n          @click.stop=\"list.toggleRow(row[list.rowKey])\"\n          class=\"cursor-pointer duration-300\"\n        />\n        <div\n          v-for=\"(column, i) in list.columns\"\n          :key=\"column.key\"\n          :class=\"[\n            alignmentMap[column.align],\n            i == 0 ? 'text-ink-gray-9' : 'text-ink-gray-7',\n          ]\"\n        >\n          <slot v-bind=\"{ idx: i, column, item: row[column.key] }\">\n            <component\n              v-if=\"list.slots.cell\"\n              :is=\"list.slots.cell\"\n              v-bind=\"{\n                column,\n                row,\n                item: row[column.key],\n                align: column.align,\n              }\"\n            />\n            <ListRowItem\n              v-else\n              :column=\"column\"\n              :row=\"row\"\n              :item=\"row[column.key]\"\n              :align=\"column.align\"\n            />\n          </slot>\n        </div>\n      </div>\n      <div\n        v-if=\"!isLastRow\"\n        class=\"mx-2 h-px border-t border-outline-gray-1\"\n      />\n    </component>\n  </component>\n</template>\n\n<script setup>\nimport Checkbox from '../Checkbox.vue'\nimport ListRowItem from './ListRowItem.vue'\nimport { alignmentMap, getGridTemplateColumns } from './utils'\nimport { computed, inject } from 'vue'\n\nconst props = defineProps({\n  row: {\n    type: Object,\n    required: true,\n  },\n})\n\nconst list = inject('list')\n\nconst isLastRow = computed(() => {\n  if (!list.value.rows?.length) return false\n  return (\n    list.value.rows[list.value.rows.length - 1][list.value.rowKey] ===\n    props.row[list.value.rowKey]\n  )\n})\n\nconst isSelected = computed(() => {\n  return list.value.selections.has(props.row[list.value.rowKey])\n})\n\nconst isHoverable = computed(() => {\n  return list.value.options.getRowRoute || list.value.options.onRowClick\n})\n\nconst rowHeight = computed(() => {\n  if (typeof list.value.options.rowHeight === 'number') {\n    return `${list.value.options.rowHeight}px`\n  }\n  return list.value.options.rowHeight\n})\n</script>\n","<template>\n  <div class=\"h-full overflow-y-auto\">\n    <slot>\n      <ListRow v-for=\"row in list.rows\" :key=\"row[list.rowKey]\" :row=\"row\" />\n    </slot>\n  </div>\n</template>\n\n<script setup>\nimport ListRow from './ListRow.vue'\nimport { inject } from 'vue'\n\nconst list = inject('list')\n</script>\n","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\">\n    <path\n      fill=\"currentColor\"\n      d=\"M4.293 5.28h7.413a.5.5 0 0 1 .41.787l-3.707 5.295a.5.5 0 0 1-.82 0L3.884 6.067a.5.5 0 0 1 .41-.787Z\"\n    />\n  </svg>\n</template>\n","<template>\n  <div class=\"flex items-center\">\n    <button\n      @click=\"toggleGroup\"\n      class=\"ml-[3px] mr-[11px] rounded p-1 hover:bg-surface-gray-2\"\n    >\n      <DownSolid\n        class=\"h-4 w-4 text-ink-gray-6 transition-transform duration-200\"\n        :class=\"[group.collapsed ? '-rotate-90' : '']\"\n      />\n    </button>\n    <slot>\n      <div class=\"w-full py-1.5 pr-2\">\n        <component\n          v-if=\"list.slots['group-header']\"\n          :is=\"list.slots['group-header']\"\n          v-bind=\"{ group }\"\n        />\n        <span v-else class=\"text-base font-medium leading-6\">\n          {{ group.group }}\n        </span>\n      </div>\n    </slot>\n  </div>\n  <div class=\"mx-2 h-px border-t border-outline-gray-modals\"></div>\n</template>\n<script setup>\nimport { inject } from 'vue'\nimport DownSolid from '../../icons/DownSolid.vue'\n\nconst props = defineProps({\n  group: {\n    type: Object,\n    required: true,\n  },\n})\n\nconst list = inject('list')\n\nfunction toggleGroup() {\n  if (props.group.collapsed == null) {\n    props.group.collapsed = false\n  }\n  props.group.collapsed = !props.group.collapsed\n}\n</script>\n","<template>\n  <div class=\"mb-5 mt-2\" v-if=\"!group.collapsed\">\n    <slot>\n      <ListRow v-for=\"row in group.rows\" :key=\"row[list.rowKey]\" :row=\"row\" />\n    </slot>\n  </div>\n</template>\n<script setup>\nimport ListRow from './ListRow.vue'\nimport { inject } from 'vue'\n\nconst props = defineProps({\n  group: {\n    type: Object,\n    required: true,\n  },\n})\nconst list = inject('list')\n</script>\n","<template>\n  <div class=\"h-full overflow-y-auto\">\n    <div v-for=\"group in list.rows\" :key=\"group.group\">\n      <slot>\n        <ListGroupHeader :group=\"group\">\n          <slot\n            name=\"group-header\"\n            v-if=\"$slots['group-header']\"\n            v-bind=\"{ group }\"\n          />\n        </ListGroupHeader>\n        <ListGroupRows :group=\"group\" />\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport ListGroupHeader from './ListGroupHeader.vue'\nimport ListGroupRows from './ListGroupRows.vue'\nimport { inject } from 'vue'\n\nconst list = inject('list')\n</script>\n","<template>\n  <transition\n    enter-active-class=\"duration-300 ease-out\"\n    enter-from-class=\"transform opacity-0\"\n    enter-to-class=\"opacity-100\"\n    leave-active-class=\"duration-300 ease-in\"\n    leave-from-class=\"opacity-100\"\n    leave-to-class=\"transform opacity-0\"\n  >\n    <div\n      v-if=\"list.selections.size\"\n      class=\"absolute inset-x-0 bottom-6 mx-auto w-max text-base\"\n    >\n      <div\n        class=\"flex min-w-[596px] items-center space-x-3 rounded-lg bg-surface-white px-4 py-2 shadow-2xl\"\n        :class=\"$attrs.class\"\n      >\n        <slot\n          v-bind=\"{\n            selections: list.selections,\n            allRowsSelected: list.allRowsSelected,\n            selectAll: () => list.toggleAllRows(true),\n            unselectAll: () => list.toggleAllRows(false),\n          }\"\n        >\n          <div\n            class=\"flex flex-1 justify-between border-r border-outline-gray-2 text-ink-gray-9\"\n          >\n            <div class=\"flex items-center space-x-3\">\n              <Checkbox\n                :modelValue=\"true\"\n                :disabled=\"true\"\n                class=\"text-ink-gray-9\"\n              />\n              <div>{{ selectedText }}</div>\n            </div>\n            <div class=\"mr-3\">\n              <slot\n                name=\"actions\"\n                v-bind=\"{\n                  selections: list.selections,\n                  allRowsSelected: list.allRowsSelected,\n                  selectAll: () => list.toggleAllRows(true),\n                  unselectAll: () => list.toggleAllRows(false),\n                }\"\n              />\n            </div>\n          </div>\n          <div class=\"flex items-center space-x-1\">\n            <Button\n              class=\"w- text-ink-gray-7\"\n              :disabled=\"list.allRowsSelected\"\n              :class=\"list.allRowsSelected ? 'cursor-not-allowed' : ''\"\n              variant=\"ghost\"\n              @click=\"list.toggleAllRows(true)\"\n            >\n              Select all\n            </Button>\n            <Button\n              icon=\"x\"\n              variant=\"ghost\"\n              @click=\"list.toggleAllRows(false)\"\n            />\n          </div>\n        </slot>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script setup>\nimport Checkbox from '../Checkbox.vue'\nimport { Button } from '../Button'\nimport { computed, inject } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst list = inject('list')\n\nlet selectedText = computed(() => {\n  let title = list.value.selections.size === 1 ? 'Row' : 'Rows'\n  return `${list.value.selections.size} ${title} selected`\n})\n</script>\n","<template>\n  <div class=\"relative flex w-full flex-1 flex-col overflow-x-auto\">\n    <div\n      class=\"flex w-max min-w-full flex-col overflow-y-hidden\"\n      :class=\"$attrs.class\"\n    >\n      <slot v-bind=\"{ showGroupedRows, selectable }\">\n        <ListHeader />\n        <template v-if=\"props.rows.length\">\n          <ListGroups v-if=\"showGroupedRows\" />\n          <ListRows v-else />\n        </template>\n        <ListEmptyState v-else />\n        <ListSelectBanner v-if=\"selectable\" />\n      </slot>\n    </div>\n  </div>\n</template>\n<script setup>\nimport ListEmptyState from './ListEmptyState.vue'\nimport ListHeader from './ListHeader.vue'\nimport ListRows from './ListRows.vue'\nimport ListGroups from './ListGroups.vue'\nimport ListSelectBanner from './ListSelectBanner.vue'\nimport { reactive, computed, provide, watch, useSlots } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps({\n  columns: {\n    type: Array,\n    default: [],\n  },\n  rows: {\n    type: Array,\n    default: [],\n  },\n  rowKey: {\n    type: String,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      getRowRoute: null,\n      onRowClick: null,\n      showTooltip: true,\n      selectable: true,\n      resizeColumn: false,\n      rowHeight: 40,\n      emptyState: {\n        title: 'No Data',\n        description: 'No data available',\n      },\n    }),\n  },\n})\n\nconst slots = useSlots()\n\nlet selections = reactive(new Set())\n\nconst emit = defineEmits(['update:selections'])\n\nwatch(selections, (value) => {\n  emit('update:selections', value)\n})\n\nlet _options = computed(() => {\n  function defaultTrue(value) {\n    return value === undefined ? true : value\n  }\n\n  function defaultFalse(value) {\n    return value === undefined ? false : value\n  }\n\n  return {\n    getRowRoute: props.options.getRowRoute || null,\n    onRowClick: props.options.onRowClick || null,\n    showTooltip: defaultTrue(props.options.showTooltip),\n    selectable: defaultTrue(props.options.selectable),\n    resizeColumn: defaultFalse(props.options.resizeColumn),\n    rowHeight: props.options.rowHeight || 40,\n    emptyState: props.options.emptyState,\n  }\n})\n\nconst allRowsSelected = computed(() => {\n  if (!props.rows.length) return false\n  if (showGroupedRows.value) {\n    return (\n      selections.size ===\n      props.rows.reduce((acc, row) => acc + row.rows.length, 0)\n    )\n  }\n  return selections.size === props.rows.length\n})\n\nconst selectable = computed(() => {\n  return _options.value.selectable\n})\n\nlet showGroupedRows = computed(() => {\n  return props.rows.every(\n    (row) => row.group && row.rows && Array.isArray(row.rows),\n  )\n})\n\nfunction toggleRow(row) {\n  if (!selections.delete(row)) {\n    selections.add(row)\n  }\n}\n\nfunction toggleAllRows(select) {\n  if (!select || allRowsSelected.value) {\n    selections.clear()\n    return\n  }\n  if (showGroupedRows.value) {\n    props.rows.forEach((row) => {\n      row.rows.forEach((r) => selections.add(r[props.rowKey]))\n    })\n    return\n  }\n  props.rows.forEach((row) => selections.add(row[props.rowKey]))\n}\n\nprovide(\n  'list',\n  computed(() => ({\n    rowKey: props.rowKey,\n    rows: props.rows,\n    columns: props.columns,\n    options: _options.value,\n    selections: selections,\n    allRowsSelected: allRowsSelected.value,\n    slots: slots,\n    toggleRow,\n    toggleAllRows,\n  })),\n)\n\ndefineExpose({\n  selections,\n  allRowsSelected,\n  toggleRow,\n  toggleAllRows,\n})\n</script>\n","<template>\n  <div class=\"flex justify-between gap-2\">\n    <slot>\n      <slot name=\"left\">\n        <TabButtons\n          v-model=\"pageLengthCount\"\n          :buttons=\"pageLengthOptions.map((o) => ({ label: o, value: o }))\"\n        />\n      </slot>\n      <slot name=\"right\">\n        <div class=\"flex items-center\">\n          <Button\n            v-if=\"showLoadMore\"\n            label=\"Load More\"\n            @click=\"emit('loadMore')\"\n          />\n          <div v-if=\"showLoadMore\" class=\"mx-3 h-[80%] border-l\" />\n          <div class=\"flex items-center gap-1 text-base text-ink-gray-5\">\n            <div>{{ options.rowCount || '0' }}</div>\n            <div>of</div>\n            <div>{{ options.totalCount || '0' }}</div>\n          </div>\n        </div>\n      </slot>\n    </slot>\n  </div>\n</template>\n<script setup>\nimport TabButtons from '../TabButtons.vue'\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Number,\n    default: 20,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      rowCount: 0,\n      totalCount: 0,\n      pageLengthOptions: [20, 50, 100],\n    }),\n  },\n})\n\nconst emit = defineEmits(['update:modelValue', 'loadMore'])\n\nconst pageLengthCount = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value),\n})\n\nconst pageLengthOptions = ref(props.options.pageLengthOptions || [20, 50, 100])\n\nconst showLoadMore = computed(() => {\n  return (\n    props.options.rowCount &&\n    props.options.totalCount &&\n    props.options.rowCount < props.options.totalCount\n  )\n})\n</script>\n","<template>\n  <Popover v-slot=\"{ open }\">\n    <PopoverButton\n      as=\"div\"\n      ref=\"reference\"\n      @click=\"updatePosition\"\n      @focusin=\"updatePosition\"\n      @keydown=\"updatePosition\"\n      v-slot=\"{ open }\"\n    >\n      <slot name=\"target\" v-bind=\"{ open }\" />\n    </PopoverButton>\n    <div v-show=\"open\">\n      <PopoverPanel\n        v-slot=\"{ open, close }\"\n        ref=\"popover\"\n        static\n        class=\"z-[100]\"\n      >\n        <slot name=\"body\" v-bind=\"{ open, close }\" />\n      </PopoverPanel>\n    </div>\n  </Popover>\n</template>\n\n<script setup>\nimport { Popover, PopoverButton, PopoverPanel } from '@headlessui/vue'\nimport { createPopper } from '@popperjs/core'\nimport { nextTick, ref, onBeforeUnmount } from 'vue'\n\nconst props = defineProps({\n  placement: {\n    type: String,\n    default: 'bottom-start',\n  },\n})\n\nconst reference = ref(null)\nconst popover = ref(null)\n\nlet popper = ref(null)\n\nfunction setupPopper() {\n  if (!popper.value) {\n    popper.value = createPopper(reference.value.el, popover.value.el, {\n      placement: props.placement,\n    })\n  } else {\n    popper.value.update()\n  }\n}\n\nfunction updatePosition() {\n  nextTick(() => setupPopper())\n}\n\nonBeforeUnmount(() => {\n  popper.value?.destroy()\n})\n</script>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M8.07548 1.50005C8.05087 1.49632 8.02566 1.49438 8 1.49438C7.97434 1.49438 7.94914 1.49632 7.92452 1.50005H3C1.89543 1.50005 1 2.39548 1 3.50005V12.5C1 13.6046 1.89543 14.5 3 14.5H7.92511C7.94954 14.5037 7.97455 14.5056 8 14.5056C8.02545 14.5056 8.05046 14.5037 8.07489 14.5H13C14.1046 14.5 15 13.6046 15 12.5V3.50005C15 2.39548 14.1046 1.50005 13 1.50005H8.07548ZM7.5 2.50005H3C2.44772 2.50005 2 2.94776 2 3.50005V12.5C2 13.0523 2.44772 13.5 3 13.5H7.5L7.5 2.50005ZM8.5 13.5L8.5 2.50005H13C13.5523 2.50005 14 2.94776 14 3.50005V12.5C14 13.0523 13.5523 13.5 13 13.5H8.5Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M2.5 4.5C2.5 3.39543 3.39543 2.5 4.5 2.5H8.5C8.77614 2.5 9 2.27614 9 2C9 1.72386 8.77614 1.5 8.5 1.5H4.5C2.84315 1.5 1.5 2.84315 1.5 4.5V11.5C1.5 13.1569 2.84315 14.5 4.5 14.5H11.5C13.1569 14.5 14.5 13.1569 14.5 11.5V7.5C14.5 7.22386 14.2761 7 14 7C13.7239 7 13.5 7.22386 13.5 7.5V11.5C13.5 12.6046 12.6046 13.5 11.5 13.5H4.5C3.39543 13.5 2.5 12.6046 2.5 11.5V4.5ZM14.1255 2.58446C14.3207 2.3892 14.3207 2.07261 14.1255 1.87735C13.9302 1.68209 13.6136 1.68209 13.4184 1.87735L6.68616 8.60954C6.4909 8.8048 6.4909 9.12139 6.68616 9.31665C6.88143 9.51191 7.19801 9.51191 7.39327 9.31665L14.1255 2.58446Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\">\n    <g class=\"es-line-reload\" clip-path=\"url(#a)\">\n      <path\n        fill=\"currentColor\"\n        fill-rule=\"evenodd\"\n        d=\"M9.743 2.189a6 6 0 0 0-6.558 2.596.5.5 0 0 0 .844.535 5 5 0 0 1 9.12 1.683l-1.187-.686a.5.5 0 0 0-.5.866l2.165 1.25a.5.5 0 0 0 .683-.183l1.25-2.165a.5.5 0 0 0-.866-.5l-.603 1.044a6 6 0 0 0-4.348-4.44ZM3.356 9.024l1.189.687a.5.5 0 0 0 .5-.866L2.88 7.595a.5.5 0 0 0-.683.183L.947 9.943a.5.5 0 1 0 .866.5l.603-1.044a6 6 0 0 0 10.9 1.816.5.5 0 0 0-.844-.536 5 5 0 0 1-9.116-1.655Z\"\n        class=\"Union\"\n        clip-rule=\"evenodd\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"a\" class=\"a\">\n        <path fill=\"currentColor\" d=\"M.25 0h16v16h-16z\" />\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2.35619 8.42909C2.35644 9.77009 2.84031 11.066 3.719 12.079C4.5977 13.092 5.81226 13.7542 7.13977 13.9439C8.46729 14.1336 9.8187 13.8382 10.946 13.1119C12.0732 12.3856 12.9008 11.2771 13.2766 9.98982C13.6525 8.70258 13.5515 7.32295 12.9922 6.10414C12.4329 4.88534 11.4528 3.90914 10.2318 3.35469C9.0108 2.80025 7.63079 2.70476 6.34504 3.08576C5.0593 3.46675 3.95409 4.29867 3.23226 5.42883\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M3.21297 2V5.42886H6.64183\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"1\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"lucide lucide-arrow-down-a-z\"\n  >\n    <path d=\"m3 16 4 4 4-4\" />\n    <path d=\"M7 20V4\" />\n    <path d=\"M20 8h-5\" />\n    <path d=\"M15 10V6.5a2.5 2.5 0 0 1 5 0V10\" />\n    <path d=\"M15 14h5l-5 6h5\" />\n  </svg>\n</template>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"1\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"lucide lucide-arrow-up-z-a\"\n  >\n    <path d=\"m3 8 4-4 4 4\" />\n    <path d=\"M7 4v16\" />\n    <path d=\"M15 4h5l-5 6h5\" />\n    <path d=\"M15 20v-3.5a2.5 2.5 0 0 1 5 0V20\" />\n    <path d=\"M20 18h-5\" />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"17\"\n    viewBox=\"0 0 16 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M1.75 3.75H10.75\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M1.75 7.75H7.75\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M1.75 11.75H5.75\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M14.25 8.25L12.25 6.25L10.25 8.25\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M12.25 12.25L12.25 6.25\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n</template>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M13 6.75C12.3096 6.75 11.75 6.19036 11.75 5.5C11.75 4.80964 12.3096 4.25 13 4.25C13.6904 4.25 14.25 4.80964 14.25 5.5C14.25 6.19036 13.6904 6.75 13 6.75ZM3 6.75C2.30964 6.75 1.75 6.19036 1.75 5.5C1.75 4.80964 2.30964 4.25 3 4.25C3.69036 4.25 4.25 4.80964 4.25 5.5C4.25 6.19036 3.69036 6.75 3 6.75ZM6.75 5.5C6.75 6.19036 7.30964 6.75 8 6.75C8.69036 6.75 9.25 6.19036 9.25 5.5C9.25 4.80964 8.69036 4.25 8 4.25C7.30964 4.25 6.75 4.80964 6.75 5.5ZM13 11.75C12.3096 11.75 11.75 11.1904 11.75 10.5C11.75 9.80964 12.3096 9.25 13 9.25C13.6904 9.25 14.25 9.80964 14.25 10.5C14.25 11.1904 13.6904 11.75 13 11.75ZM1.75 10.5C1.75 11.1904 2.30964 11.75 3 11.75C3.69036 11.75 4.25 11.1904 4.25 10.5C4.25 9.80964 3.69036 9.25 3 9.25C2.30964 9.25 1.75 9.80964 1.75 10.5ZM8 11.75C7.30964 11.75 6.75 11.1904 6.75 10.5C6.75 9.80964 7.30964 9.25 8 9.25C8.69036 9.25 9.25 9.80964 9.25 10.5C9.25 11.1904 8.69036 11.75 8 11.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <Popover v-slot=\"{ open }\">\n    <PopoverButton\n      ref=\"reference\"\n      v-slot=\"{ open: o }\"\n      as=\"div\"\n      @click=\"updatePosition\"\n      @focusin=\"updatePosition\"\n      @keydown=\"updatePosition\"\n    >\n      <slot name=\"target\" :open=\"o\" />\n    </PopoverButton>\n    <div v-show=\"open\">\n      <PopoverPanel\n        v-slot=\"{ open: o, close }\"\n        ref=\"popover\"\n        static\n        class=\"z-[100]\"\n      >\n        <slot name=\"body\" :open=\"o\" :close=\"close\" />\n      </PopoverPanel>\n    </div>\n  </Popover>\n</template>\n\n<script setup>\nimport { nextTick, ref, onBeforeUnmount } from \"vue\";\nimport { Popover, PopoverButton, PopoverPanel } from \"@headlessui/vue\";\nimport { createPopper } from \"@popperjs/core\";\n\nconst props = defineProps({\n  placement: {\n    type: String,\n    default: \"bottom-start\",\n  },\n});\n\nconst reference = ref(null);\nconst popover = ref(null);\n\nlet popper = ref(null);\n\nfunction setupPopper() {\n  if (!popper.value) {\n    popper.value = createPopper(reference.value.el, popover.value.el, {\n      placement: props.placement,\n    });\n  } else {\n    popper.value.update();\n  }\n}\n\nfunction updatePosition() {\n  nextTick(() => setupPopper());\n}\n\nonBeforeUnmount(() => {\n  popper.value?.destroy();\n});\n</script>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"17\"\n    viewBox=\"0 0 16 17\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 4.5H14\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M4 8.5H12\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M6.5 12.5H9.5\"\n      stroke=\"currentColor\"\n      stroke-miterlimit=\"10\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n</template>\n","<template>\n  <NestedPopover>\n    <template #target>\n      <div class=\"flex items-center w-fit\">\n        <Button\n          :label=\"'Filter'\"\n          :class=\"filters?.size ? 'rounded-r-none' : ''\"\n        >\n          <template #prefix><FilterIcon class=\"h-4\" /></template>\n          <template v-if=\"filters?.size\" #suffix>\n            <span\n              class=\"flex h-5 w-5 items-center justify-center rounded-[5px] bg-surface-white pt-px text-xs font-medium text-ink-gray-8 shadow-sm\"\n            >\n              {{ filters.size }}\n            </span>\n          </template>\n        </Button>\n        <Tooltip v-if=\"filters?.size\" :text=\"'Clear all Filter'\">\n          <div>\n            <Button\n              class=\"rounded-l-none border-l\"\n              icon=\"x\"\n              @click.stop=\"clearfilter(false)\"\n            />\n          </div>\n        </Tooltip>\n      </div>\n    </template>\n    <template #body=\"{ close }\">\n      <div class=\"my-2 rounded-lg border border-gray-100 bg-white shadow-xl\">\n        <div class=\"min-w-72 p-2 sm:min-w-[400px]\">\n          <div\n            v-if=\"filters?.size\"\n            v-for=\"(f, i) in filters\"\n            :key=\"i\"\n            id=\"filter-list\"\n            class=\"mb-4 sm:mb-3\"\n          >\n            <div v-if=\"isMobileView\" class=\"flex flex-col gap-2\">\n              <div class=\"-mb-2 flex w-full items-center justify-between\">\n                <div class=\"text-base text-gray-600\">\n                  {{ i == 0 ? \"Where\" : \"And\" }}\n                </div>\n                <Button\n                  class=\"flex\"\n                  variant=\"ghost\"\n                  icon=\"x\"\n                  @click=\"removeFilter(i)\"\n                />\n              </div>\n              <div id=\"fieldname\" class=\"w-full\">\n                <AutocompleteNew\n                  :value=\"f.field.fieldname\"\n                  :options=\"filterableFields.data\"\n                  @change=\"(e) => updateFilter(e, i)\"\n                  :placeholder=\"'First Name'\"\n                />\n              </div>\n              <div id=\"operator\">\n                <FormControl\n                  type=\"select\"\n                  v-model=\"f.operator\"\n                  @change=\"(e) => updateOperator(e, f)\"\n                  :options=\"getOperators(f.field.fieldtype, f.field.fieldname)\"\n                  :placeholder=\"'Equals'\"\n                />\n              </div>\n              <div id=\"value\" class=\"w-full\">\n                <component\n                  :is=\"getValueControl(f)\"\n                  v-model=\"f.value\"\n                  @change.stop=\"(v) => updateValue(v, f)\"\n                  :placeholder=\"'John Doe'\"\n                />\n              </div>\n            </div>\n            <div v-else class=\"flex items-center justify-between gap-2\">\n              <div class=\"flex items-center gap-2\">\n                <div class=\"w-13 pl-2 text-end text-base text-gray-600\">\n                  {{ i == 0 ? \"Where\" : \"And\" }}\n                </div>\n                <div id=\"fieldname\" class=\"!min-w-[140px]\">\n                  <AutocompleteNew\n                    :value=\"f.field.fieldname\"\n                    :options=\"filterableFields.data\"\n                    @change=\"(e) => updateFilter(e, i)\"\n                    :placeholder=\"'First Name'\"\n                  />\n                </div>\n                <div id=\"operator\">\n                  <FormControl\n                    type=\"select\"\n                    v-model=\"f.operator\"\n                    @change=\"(e) => updateOperator(e, f)\"\n                    :options=\"\n                      getOperators(f.field.fieldtype, f.field.fieldname)\n                    \"\n                    :placeholder=\"'Equals'\"\n                  />\n                </div>\n                <div id=\"value\" class=\"!min-w-[140px]\">\n                  <component\n                    :is=\"getValueControl(f)\"\n                    v-model=\"f.value\"\n                    @change=\"(v) => updateValue(v, f)\"\n                    :placeholder=\"'John Doe'\"\n                  />\n                </div>\n              </div>\n              <Button\n                class=\"flex\"\n                variant=\"ghost\"\n                icon=\"x\"\n                @click=\"removeFilter(i)\"\n              />\n            </div>\n          </div>\n          <div\n            v-else\n            class=\"mb-3 flex h-7 items-center px-3 text-sm text-gray-600\"\n          >\n            {{ \"Empty - Choose a field to filter by\" }}\n          </div>\n          <div class=\"flex items-center justify-between gap-2\">\n            <AutocompleteNew\n              value=\"\"\n              :options=\"filterableFields.data\"\n              @change=\"(e) => setfilter(e)\"\n              :placeholder=\"'First name'\"\n            >\n              <template #target=\"{ togglePopover }\">\n                <Button\n                  class=\"!text-gray-600\"\n                  variant=\"ghost\"\n                  @click=\"togglePopover()\"\n                  :label=\"'Add Filter'\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"plus\" class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n            </AutocompleteNew>\n            <Button\n              v-if=\"filters?.size\"\n              class=\"!text-gray-600\"\n              variant=\"ghost\"\n              :label=\"'Clear all Filter'\"\n              @click=\"clearfilter(close)\"\n            />\n          </div>\n        </div>\n      </div>\n    </template>\n  </NestedPopover>\n</template>\n<script setup>\nimport { h, computed, inject } from \"vue\";\nimport {\n  FormControl,\n  Tooltip,\n  DatePicker,\n  DateTimePicker,\n  DateRangePicker,\n  NestedPopover,\n} from \"frappe-ui\";\nimport { AutocompleteNew, Link, StarRating } from \"@/components\";\nimport { useScreenSize } from \"@/composables/screen\";\nimport FilterIcon from \"@/components/icons/FilterIcon.vue\";\n\nconst props = defineProps({\n  default_filters: {\n    type: Object,\n    required: false,\n    default: {},\n  },\n});\n\nconst { isMobileView } = useScreenSize();\n\nconst typeCheck = [\"Check\"];\nconst typeLink = [\"Link\", \"Dynamic Link\"];\nconst typeNumber = [\"Float\", \"Int\", \"Currency\", \"Percent\"];\nconst typeSelect = [\"Select\"];\nconst typeString = [\"Data\", \"Long Text\", \"Small Text\", \"Text Editor\", \"Text\"];\nconst typeDate = [\"Date\", \"Datetime\"];\nconst typeRating = [\"Rating\"];\n\nconst listViewData = inject(\"listViewData\");\nconst listViewActions = inject(\"listViewActions\");\nconst { list, filterableFields } = listViewData;\n\nconst filters = computed(() => {\n  if (!list) return new Set();\n  let allFilters = list?.params?.filters || list.data?.params?.filters;\n  if (!allFilters || !filterableFields.data) return new Set();\n\n  return convertFilters(filterableFields.data, allFilters);\n});\n\nfunction convertFilters(data, allFilters) {\n  let f = [];\n  for (let [key, value] of Object.entries(allFilters)) {\n    let field = data.find((f) => f.fieldname === key);\n    if (typeof value !== \"object\" || !value) {\n      value = [\"=\", value];\n      if (field?.fieldtype === \"Check\") {\n        value = [\"equals\", value[1] ? \"Yes\" : \"No\"];\n      }\n    }\n\n    if (field) {\n      f.push({\n        field,\n        fieldname: key,\n        operator: oppositeOperatorMap[value[0]],\n        value: value[1],\n      });\n    }\n  }\n  return new Set(f);\n}\n\nfunction getOperators(fieldtype, fieldname) {\n  let options = [];\n  if (typeString.includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Equals\", value: \"equals\" },\n        { label: \"Not Equals\", value: \"not equals\" },\n        { label: \"Like\", value: \"like\" },\n        { label: \"Not Like\", value: \"not like\" },\n        { label: \"In\", value: \"in\" },\n        { label: \"Not In\", value: \"not in\" },\n        { label: \"Is\", value: \"is\" },\n      ]\n    );\n  }\n  if (fieldname === \"_assign\") {\n    // TODO: make equals and not equals work\n    options = [\n      { label: \"Like\", value: \"like\" },\n      { label: \"Not Like\", value: \"not like\" },\n      { label: \"Is\", value: \"is\" },\n    ];\n  }\n  if (typeNumber.includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Equals\", value: \"equals\" },\n        { label: \"Not Equals\", value: \"not equals\" },\n        { label: \"Like\", value: \"like\" },\n        { label: \"Not Like\", value: \"not like\" },\n        { label: \"In\", value: \"in\" },\n        { label: \"Not In\", value: \"not in\" },\n        { label: \"Is\", value: \"is\" },\n        { label: \"<\", value: \"<\" },\n        { label: \">\", value: \">\" },\n        { label: \"<=\", value: \"<=\" },\n        { label: \">=\", value: \">=\" },\n      ]\n    );\n  }\n  if (typeSelect.includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Equals\", value: \"equals\" },\n        { label: \"Not Equals\", value: \"not equals\" },\n        { label: \"In\", value: \"in\" },\n        { label: \"Not In\", value: \"not in\" },\n        { label: \"Is\", value: \"is\" },\n      ]\n    );\n  }\n  if (typeLink.includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Equals\", value: \"equals\" },\n        { label: \"Not Equals\", value: \"not equals\" },\n        { label: \"Like\", value: \"like\" },\n        { label: \"Not Like\", value: \"not like\" },\n        { label: \"In\", value: \"in\" },\n        { label: \"Not In\", value: \"not in\" },\n        { label: \"Is\", value: \"is\" },\n      ]\n    );\n  }\n  if (typeCheck.includes(fieldtype)) {\n    options.push(...[{ label: \"Equals\", value: \"equals\" }]);\n  }\n  if ([\"Duration\"].includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Like\", value: \"like\" },\n        { label: \"Not Like\", value: \"not like\" },\n        { label: \"In\", value: \"in\" },\n        { label: \"Not In\", value: \"not in\" },\n        { label: \"Is\", value: \"is\" },\n      ]\n    );\n  }\n  if (typeDate.includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Equals\", value: \"equals\" },\n        { label: \"Not Equals\", value: \"not equals\" },\n        { label: \"Is\", value: \"is\" },\n        { label: \">\", value: \">\" },\n        { label: \"<\", value: \"<\" },\n        { label: \">=\", value: \">=\" },\n        { label: \"<=\", value: \"<=\" },\n        { label: \"Between\", value: \"between\" },\n        { label: \"Timespan\", value: \"timespan\" },\n      ]\n    );\n  }\n  if (typeRating.includes(fieldtype)) {\n    options.push(\n      ...[\n        { label: \"Equals\", value: \"equals\" },\n        { label: \"Not Equals\", value: \"not equals\" },\n        { label: \"Is\", value: \"is\" },\n        { label: \">\", value: \">\" },\n        { label: \"<\", value: \"<\" },\n        { label: \">=\", value: \">=\" },\n        { label: \"<=\", value: \"<=\" },\n      ]\n    );\n  }\n  return options;\n}\n\nfunction getValueControl(f) {\n  const { field, operator } = f;\n  const { fieldtype, options } = field;\n  if (operator == \"is\") {\n    return h(FormControl, {\n      type: \"select\",\n      options: [\n        {\n          label: \"Set\",\n          value: \"set\",\n        },\n        {\n          label: \"Not Set\",\n          value: \"not set\",\n        },\n      ],\n    });\n  } else if (operator == \"timespan\") {\n    return h(FormControl, {\n      type: \"select\",\n      options: timespanOptions,\n    });\n  } else if ([\"like\", \"not like\", \"in\", \"not in\"].includes(operator)) {\n    return h(FormControl, { type: \"text\" });\n  } else if (typeSelect.includes(fieldtype) || typeCheck.includes(fieldtype)) {\n    const _options =\n      fieldtype == \"Check\" ? [\"Yes\", \"No\"] : getSelectOptions(options);\n    return h(FormControl, {\n      type: \"select\",\n      options: _options.map((o) => ({\n        label: o,\n        value: o,\n      })),\n    });\n  } else if (typeLink.includes(fieldtype)) {\n    if (fieldtype == \"Dynamic Link\") {\n      return h(FormControl, { type: \"text\" });\n    }\n    return h(Link, { class: \"form-control\", doctype: options, value: f.value });\n  } else if (typeNumber.includes(fieldtype)) {\n    return h(FormControl, { type: \"number\" });\n  } else if (typeDate.includes(fieldtype) && operator == \"between\") {\n    return h(DateRangePicker, { value: f.value, iconLeft: \"\" });\n  } else if (typeDate.includes(fieldtype)) {\n    return h(fieldtype == \"Date\" ? DatePicker : DateTimePicker, {\n      value: f.value,\n      iconLeft: \"\",\n    });\n  } else if (typeRating.includes(fieldtype)) {\n    return h(StarRating, {\n      rating: f.value || 0,\n      static: false,\n      class: \"truncate\",\n      \"onUpdate:modelValue\": (v) => updateValue(v, f),\n    });\n  } else {\n    return h(FormControl, { type: \"text\" });\n  }\n}\n\nfunction getDefaultValue(field) {\n  if (typeSelect.includes(field.fieldtype)) {\n    return getSelectOptions(field.options)[0];\n  }\n  if (typeCheck.includes(field.fieldtype)) {\n    return \"Yes\";\n  }\n  if (typeDate.includes(field.fieldtype)) {\n    return null;\n  }\n  if (typeRating.includes(field.fieldtype)) {\n    return 0;\n  }\n  return \"\";\n}\n\nfunction getDefaultOperator(fieldtype, fieldname = null) {\n  if (fieldname === \"_assign\") {\n    return \"like\";\n  }\n  if (typeSelect.includes(fieldtype)) {\n    return \"equals\";\n  }\n  if (typeCheck.includes(fieldtype) || typeNumber.includes(fieldtype)) {\n    return \"equals\";\n  }\n  if (typeDate.includes(fieldtype)) {\n    return \"between\";\n  }\n  if (typeLink.includes(fieldtype)) {\n    return \"equals\";\n  }\n  if (typeRating.includes(fieldtype)) {\n    return \"equals\";\n  }\n  return \"like\";\n}\n\nfunction getSelectOptions(options) {\n  return options.split(\"\\n\");\n}\n\nfunction setfilter(data) {\n  if (!data) return;\n  filters.value.add({\n    field: {\n      label: data.label,\n      fieldname: data.value,\n      fieldtype: data.fieldtype,\n      options: data.options,\n    },\n    fieldname: data.value,\n    operator: getDefaultOperator(data.fieldtype, data.fieldname),\n    value: getDefaultValue(data),\n  });\n  apply();\n}\n\nfunction updateFilter(data, index) {\n  filters.value.delete(Array.from(filters.value)[index]);\n  filters.value.add({\n    fieldname: data.value,\n    operator: getDefaultOperator(data.fieldtype),\n    value: getDefaultValue(data),\n    field: {\n      label: data.label,\n      fieldname: data.value,\n      fieldtype: data.fieldtype,\n      options: data.options,\n    },\n  });\n  apply();\n}\n\nfunction removeFilter(index) {\n  filters.value.delete(Array.from(filters.value)[index]);\n  apply();\n}\n\nfunction clearfilter(close) {\n  filters.value.clear();\n  apply();\n  close && close();\n}\n\nfunction updateValue(value, filter) {\n  value = value.target ? value.target.value : value;\n  if (filter.operator === \"between\") {\n    filter.value = [value.split(\",\")[0], value.split(\",\")[1]];\n  } else {\n    filter.value = value;\n  }\n  apply();\n}\n\nfunction updateOperator(event, filter) {\n  let oldOperatorValue = event.target._value;\n  let newOperatorValue = event.target.value;\n  filter.operator = event.target.value;\n  if (!isSameTypeOperator(oldOperatorValue, newOperatorValue)) {\n    filter.value = getDefaultValue(filter.field);\n  }\n  if (newOperatorValue === \"is\" || newOperatorValue === \"is not\") {\n    filter.value = \"set\";\n  }\n  apply();\n}\n\nfunction isSameTypeOperator(oldOperator, newOperator) {\n  let textOperators = [\n    \"equals\",\n    \"not equals\",\n    \"in\",\n    \"not in\",\n    \">\",\n    \"<\",\n    \">=\",\n    \"<=\",\n  ];\n  if (\n    textOperators.includes(oldOperator) &&\n    textOperators.includes(newOperator)\n  )\n    return true;\n  return false;\n}\n\nfunction apply() {\n  let _filters = [];\n  filters.value.forEach((f) => {\n    _filters.push({\n      fieldname: f.fieldname,\n      operator: f.operator,\n      value: f.value,\n    });\n  });\n  listViewActions.applyFilters(parseFilters(_filters));\n}\n\nfunction parseFilters(filters) {\n  const filtersArray = Array.from(filters);\n  const obj = filtersArray.map(transformIn).reduce((p, c) => {\n    if ([\"equals\", \"=\"].includes(c.operator)) {\n      p[c.fieldname] =\n        c.value == \"Yes\" ? true : c.value == \"No\" ? false : c.value;\n    } else {\n      p[c.fieldname] = [operatorMap[c.operator.toLowerCase()], c.value];\n    }\n    return p;\n  }, {});\n  const merged = { ...obj };\n  return merged;\n}\n\nfunction transformIn(f) {\n  if (f.operator.includes(\"like\") && !f.value.includes(\"%\")) {\n    f.value = `%${f.value}%`;\n  }\n  return f;\n}\n\nconst operatorMap = {\n  is: \"is\",\n  \"is not\": \"is not\",\n  in: \"in\",\n  \"not in\": \"not in\",\n  equals: \"=\",\n  \"not equals\": \"!=\",\n  yes: true,\n  no: false,\n  like: \"LIKE\",\n  \"not like\": \"NOT LIKE\",\n  \">\": \">\",\n  \"<\": \"<\",\n  \">=\": \">=\",\n  \"<=\": \"<=\",\n  between: \"between\",\n  timespan: \"timespan\",\n};\n\nconst oppositeOperatorMap = {\n  is: \"is\",\n  \"=\": \"equals\",\n  \"!=\": \"not equals\",\n  equals: \"equals\",\n  \"is not\": \"is not\",\n  true: \"yes\",\n  false: \"no\",\n  LIKE: \"like\",\n  \"NOT LIKE\": \"not like\",\n  in: \"in\",\n  \"not in\": \"not in\",\n  \">\": \">\",\n  \"<\": \"<\",\n  \">=\": \">=\",\n  \"<=\": \"<=\",\n  between: \"between\",\n  timespan: \"timespan\",\n};\n\nconst timespanOptions = [\n  {\n    label: \"Last Week\",\n    value: \"last week\",\n  },\n  {\n    label: \"Last Month\",\n    value: \"last month\",\n  },\n  {\n    label: \"Last Quarter\",\n    value: \"last quarter\",\n  },\n  {\n    label: \"Last 6 Months\",\n    value: \"last 6 months\",\n  },\n  {\n    label: \"Last Year\",\n    value: \"last year\",\n  },\n  {\n    label: \"Yesterday\",\n    value: \"yesterday\",\n  },\n  {\n    label: \"Today\",\n    value: \"today\",\n  },\n  {\n    label: \"Tomorrow\",\n    value: \"tomorrow\",\n  },\n  {\n    label: \"This Week\",\n    value: \"this week\",\n  },\n  {\n    label: \"This Month\",\n    value: \"this month\",\n  },\n  {\n    label: \"This Quarter\",\n    value: \"this quarter\",\n  },\n  {\n    label: \"This Year\",\n    value: \"this year\",\n  },\n  {\n    label: \"Next Week\",\n    value: \"next week\",\n  },\n  {\n    label: \"Next Month\",\n    value: \"next month\",\n  },\n  {\n    label: \"Next Quarter\",\n    value: \"next quarter\",\n  },\n  {\n    label: \"Next 6 Months\",\n    value: \"next 6 months\",\n  },\n  {\n    label: \"Next Year\",\n    value: \"next year\",\n  },\n];\n</script>\n","import { shallowRef, watchEffect, readonly, ref, watch, customRef, getCurrentScope, onScopeDispose, effectScope, getCurrentInstance, inject, provide, isRef, unref, computed, reactive, toRefs as toRefs$1, toRef as toRef$1, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue';\n\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, {\n    ...options,\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  });\n  return readonly(result);\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = typeof fn === \"function\" ? fn : fn.get;\n  const set = typeof fn === \"function\" ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get(v);\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createEventHook() {\n  const fns = /* @__PURE__ */ new Set();\n  const off = (fn) => {\n    fns.delete(fn);\n  };\n  const on = (fn) => {\n    fns.add(fn);\n    const offFn = () => off(fn);\n    tryOnScopeDispose(offFn);\n    return {\n      off: offFn\n    };\n  };\n  const trigger = (...args) => {\n    return Promise.all(Array.from(fns).map((fn) => fn(...args)));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return (...args) => {\n    if (!initialized) {\n      state = scope.run(() => stateFactory(...args));\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nconst localProvidedStateMap = /* @__PURE__ */ new WeakMap();\n\nconst injectLocal = (...args) => {\n  var _a;\n  const key = args[0];\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"injectLocal must be called in setup\");\n  if (localProvidedStateMap.has(instance) && key in localProvidedStateMap.get(instance))\n    return localProvidedStateMap.get(instance)[key];\n  return inject(...args);\n};\n\nconst provideLocal = (key, value) => {\n  var _a;\n  const instance = (_a = getCurrentInstance()) == null ? void 0 : _a.proxy;\n  if (instance == null)\n    throw new Error(\"provideLocal must be called in setup\");\n  if (!localProvidedStateMap.has(instance))\n    localProvidedStateMap.set(instance, /* @__PURE__ */ Object.create(null));\n  const localProvidedState = localProvidedStateMap.get(instance);\n  localProvidedState[key] = value;\n  provide(key, value);\n};\n\nfunction createInjectionState(composable, options) {\n  const key = (options == null ? void 0 : options.injectionKey) || Symbol(composable.name || \"InjectionState\");\n  const defaultValue = options == null ? void 0 : options.defaultValue;\n  const useProvidingState = (...args) => {\n    const state = composable(...args);\n    provideLocal(key, state);\n    return state;\n  };\n  const useInjectedState = () => injectLocal(key, defaultValue);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!scope) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = { ...obj };\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction toValue(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nconst resolveUnref = toValue;\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(\n    keys.map((key) => {\n      const value = obj[key];\n      return [\n        key,\n        typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n      ];\n    })\n  );\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0]))));\n}\n\nconst isClient = typeof window !== \"undefined\" && typeof document !== \"undefined\";\nconst isWorker = typeof WorkerGlobalScope !== \"undefined\" && globalThis instanceof WorkerGlobalScope;\nconst isDef = (val) => typeof val !== \"undefined\";\nconst notNullish = (val) => val != null;\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\nconst isIOS = /* @__PURE__ */ getIsIOS();\nfunction getIsIOS() {\n  var _a, _b;\n  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((_b = window == null ? void 0 : window.navigator) == null ? void 0 : _b.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\n    });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  let lastRejector = noop;\n  const _clearTimeout = (timer2) => {\n    clearTimeout(timer2);\n    lastRejector();\n    lastRejector = noop;\n  };\n  const filter = (invoke) => {\n    const duration = toValue(ms);\n    const maxDuration = toValue(options.maxWait);\n    if (timer)\n      _clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return Promise.resolve(invoke());\n    }\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve;\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer)\n            _clearTimeout(timer);\n          maxTimer = null;\n          resolve(invoke());\n        }, maxDuration);\n      }\n      timer = setTimeout(() => {\n        if (maxTimer)\n          _clearTimeout(maxTimer);\n        maxTimer = null;\n        resolve(invoke());\n      }, duration);\n    });\n  };\n  return filter;\n}\nfunction throttleFilter(...args) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  let lastRejector = noop;\n  let lastValue;\n  let ms;\n  let trailing;\n  let leading;\n  let rejectOnCancel;\n  if (!isRef(args[0]) && typeof args[0] === \"object\")\n    ({ delay: ms, trailing = true, leading = true, rejectOnCancel = false } = args[0]);\n  else\n    [ms, trailing = true, leading = true, rejectOnCancel = false] = args;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n      lastRejector();\n      lastRejector = noop;\n    }\n  };\n  const filter = (_invoke) => {\n    const duration = toValue(ms);\n    const elapsed = Date.now() - lastExec;\n    const invoke = () => {\n      return lastValue = _invoke();\n    };\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      lastValue = new Promise((resolve, reject) => {\n        lastRejector = rejectOnCancel ? reject : resolve;\n        timer = setTimeout(() => {\n          lastExec = Date.now();\n          isLeading = true;\n          resolve(invoke());\n          clear();\n        }, Math.max(0, duration - elapsed));\n      });\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n    return lastValue;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\n}\n\nfunction cacheStringFunction(fn) {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, \"-$1\").toLowerCase());\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?\\d+\\.?\\d*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = Number.parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction objectOmit(obj, keys, omitUndefined = false) {\n  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {\n    return (!omitUndefined || value !== void 0) && !keys.includes(key);\n  }));\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\nfunction getLifeCycleTarget(target) {\n  return target || getCurrentInstance();\n}\n\nfunction toRef(...args) {\n  if (args.length !== 1)\n    return toRef$1(...args);\n  const r = args[0];\n  return typeof r === \"function\" ? readonly(customRef(() => ({ get: r, set: noop }))) : ref(r);\n}\nconst resolveRef = toRef;\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = toValue(defaultValue);\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = toValue(defaultValue);\n      trigger();\n    }, toValue(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(\n    debounceFilter(ms, options),\n    fn\n  );\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\n  return createFilterWrapper(\n    throttleFilter(ms, trailing, leading, rejectOnCancel),\n    fn\n  );\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(\n    ref,\n    {\n      get,\n      set,\n      untrackedGet,\n      silentSet,\n      peek,\n      lay\n    },\n    { enumerable: true }\n  );\n}\nconst controlledRef = refWithControl;\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    const [target, key, value] = args;\n    target[key] = value;\n  }\n}\n\nfunction watchWithFilter(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  return watch(\n    source,\n    createFilterWrapper(\n      eventFilter,\n      cb\n    ),\n    watchOptions\n  );\n}\n\nfunction watchPausable(source, cb, options = {}) {\n  const {\n    eventFilter: filter,\n    ...watchOptions\n  } = options;\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter\n    }\n  );\n  return { stop, pause, resume, isActive };\n}\n\nfunction syncRef(left, right, ...[options]) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options || {};\n  const watchers = [];\n  const transformLTR = \"ltr\" in transform && transform.ltr || ((v) => v);\n  const transformRTL = \"rtl\" in transform && transform.rtl || ((v) => v);\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchers.push(watchPausable(\n      left,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        right.value = transformLTR(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchers.push(watchPausable(\n      right,\n      (newValue) => {\n        watchers.forEach((w) => w.pause());\n        left.value = transformRTL(newValue);\n        watchers.forEach((w) => w.resume());\n      },\n      { flush, deep, immediate }\n    ));\n  }\n  const stop = () => {\n    watchers.forEach((w) => w.stop());\n  };\n  return stop;\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(\n    source,\n    (newValue) => targets.forEach((target) => target.value = newValue),\n    { flush, deep, immediate }\n  );\n}\n\nfunction toRefs(objectRef, options = {}) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? Array.from({ length: objectRef.value.length }) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        var _a;\n        const replaceRef = (_a = toValue(options.replaceRef)) != null ? _a : true;\n        if (replaceRef) {\n          if (Array.isArray(objectRef.value)) {\n            const copy = [...objectRef.value];\n            copy[key] = v;\n            objectRef.value = copy;\n          } else {\n            const newObject = { ...objectRef.value, [key]: v };\n            Object.setPrototypeOf(newObject, Object.getPrototypeOf(objectRef.value));\n            objectRef.value = newObject;\n          }\n        } else {\n          objectRef.value[key] = v;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeMount(fn, sync = true, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeMount(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onBeforeUnmount(fn, target);\n}\n\nfunction tryOnMounted(fn, sync = true, target) {\n  const instance = getLifeCycleTarget();\n  if (instance)\n    onMounted(fn, target);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn, target) {\n  const instance = getLifeCycleTarget(target);\n  if (instance)\n    onUnmounted(fn, target);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        r,\n        (v) => {\n          if (condition(v) !== isNot) {\n            if (stop)\n              stop();\n            else\n              nextTick(() => stop == null ? void 0 : stop());\n            resolve(v);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => stop == null ? void 0 : stop())\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        [r, value],\n        ([v1, v2]) => {\n          if (isNot !== (v1 === v2)) {\n            if (stop)\n              stop();\n            else\n              nextTick(() => stop == null ? void 0 : stop());\n            resolve(v1);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => {\n          stop == null ? void 0 : stop();\n          return toValue(r);\n        })\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(toValue(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(toValue(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction defaultComparator(value, othVal) {\n  return value === othVal;\n}\nfunction useArrayDifference(...args) {\n  var _a;\n  const list = args[0];\n  const values = args[1];\n  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;\n  if (typeof compareFn === \"string\") {\n    const key = compareFn;\n    compareFn = (value, othVal) => value[key] === othVal[key];\n  }\n  return computed(() => toValue(list).filter((x) => toValue(values).findIndex((y) => compareFn(x, y)) === -1));\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => toValue(list).every((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(() => toValue(\n    toValue(list).find((element, index, array) => fn(toValue(element), index, array))\n  ));\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => toValue(list).findIndex((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction findLast(arr, cb) {\n  let index = arr.length;\n  while (index-- > 0) {\n    if (cb(arr[index], index, arr))\n      return arr[index];\n  }\n  return void 0;\n}\nfunction useArrayFindLast(list, fn) {\n  return computed(() => toValue(\n    !Array.prototype.findLast ? findLast(toValue(list), (element, index, array) => fn(toValue(element), index, array)) : toValue(list).findLast((element, index, array) => fn(toValue(element), index, array))\n  ));\n}\n\nfunction isArrayIncludesOptions(obj) {\n  return isObject(obj) && containsProp(obj, \"formIndex\", \"comparator\");\n}\nfunction useArrayIncludes(...args) {\n  var _a;\n  const list = args[0];\n  const value = args[1];\n  let comparator = args[2];\n  let formIndex = 0;\n  if (isArrayIncludesOptions(comparator)) {\n    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;\n    comparator = comparator.comparator;\n  }\n  if (typeof comparator === \"string\") {\n    const key = comparator;\n    comparator = (element, value2) => element[key] === toValue(value2);\n  }\n  comparator = comparator != null ? comparator : (element, value2) => element === toValue(value2);\n  return computed(() => toValue(list).slice(formIndex).some((element, index, array) => comparator(\n    toValue(element),\n    toValue(value),\n    index,\n    toValue(array)\n  )));\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => toValue(list).map((i) => toValue(i)).join(toValue(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(toValue(sum), toValue(value), index);\n  return computed(() => {\n    const resolved = toValue(list);\n    return args.length ? resolved.reduce(reduceCallback, typeof args[0] === \"function\" ? toValue(args[0]()) : toValue(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => toValue(list).some((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction uniqueElementsBy(array, fn) {\n  return array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x, array)))\n      acc.push(v);\n    return acc;\n  }, []);\n}\nfunction useArrayUnique(list, compareFn) {\n  return computed(() => {\n    const resolvedList = toValue(list).map((element) => toValue(element));\n    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);\n  });\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  let _initialValue = unref(initialValue);\n  const count = ref(initialValue);\n  const {\n    max = Number.POSITIVE_INFINITY,\n    min = Number.NEGATIVE_INFINITY\n  } = options;\n  const inc = (delta = 1) => count.value = Math.max(Math.min(max, count.value + delta), min);\n  const dec = (delta = 1) => count.value = Math.min(Math.max(min, count.value - delta), max);\n  const get = () => count.value;\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\n  const reset = (val = _initialValue) => {\n    _initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[T\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/i;\nconst REGEX_FORMAT = /[YMDHhms]o|\\[([^\\]]+)\\]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\nfunction defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n}\nfunction formatOrdinal(num) {\n  const suffixes = [\"th\", \"st\", \"nd\", \"rd\"];\n  const v = num % 100;\n  return num + (suffixes[(v - 20) % 10] || suffixes[v] || suffixes[0]);\n}\nfunction formatDate(date, formatStr, options = {}) {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const matches = {\n    Yo: () => formatOrdinal(years),\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    Mo: () => formatOrdinal(month + 1),\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(toValue(options.locales), { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(toValue(options.locales), { month: \"long\" }),\n    D: () => String(days),\n    Do: () => formatOrdinal(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    Ho: () => formatOrdinal(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    ho: () => formatOrdinal(hours % 12 || 12),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mo: () => formatOrdinal(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    so: () => formatOrdinal(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(toValue(options.locales), { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(toValue(options.locales), { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(toValue(options.locales), { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true)\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => {\n    var _a2, _b;\n    return (_b = $1 != null ? $1 : (_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) != null ? _b : match;\n  });\n}\nfunction normalizeDate(date) {\n  if (date === null)\n    return new Date(Number.NaN);\n  if (date === void 0)\n    return /* @__PURE__ */ new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n}\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(toValue(date)), toValue(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    const intervalValue = toValue(interval);\n    if (intervalValue <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    if (isActive.value)\n      timer = setInterval(cb, intervalValue);\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval) || typeof interval === \"function\") {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = ref(0);\n  const update = () => counter.value += 1;\n  const reset = () => {\n    counter.value = 0;\n  };\n  const controls = useIntervalFn(\n    callback ? () => {\n      update();\n      callback(counter.value);\n    } : update,\n    interval,\n    { immediate }\n  );\n  if (exposeControls) {\n    return {\n      counter,\n      reset,\n      ...controls\n    };\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(\n    source,\n    () => ms.value = timestamp(),\n    options\n  );\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, toValue(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending: readonly(isPending),\n    start,\n    stop\n  };\n}\n\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(\n    callback != null ? callback : noop,\n    interval,\n    options\n  );\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return {\n      ready,\n      ...controls\n    };\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = toValue(value);\n    if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && Number.isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${toValue(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = ref(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = toValue(truthyValue);\n      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [...source instanceof Function ? source() : Array.isArray(source) ? source : toValue(source)];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = Array.from({ length: oldList.length });\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nfunction watchAtMost(source, cb, options) {\n  const {\n    count,\n    ...watchOptions\n  } = options;\n  const current = ref(0);\n  const stop = watchWithFilter(\n    source,\n    (...args) => {\n      current.value += 1;\n      if (current.value >= toValue(count))\n        nextTick(() => stop());\n      cb(...args);\n    },\n    watchOptions\n  );\n  return { count: current, stop };\n}\n\nfunction watchDebounced(source, cb, options = {}) {\n  const {\n    debounce = 0,\n    maxWait = void 0,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: debounceFilter(debounce, { maxWait })\n    }\n  );\n}\n\nfunction watchDeep(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      deep: true\n    }\n  );\n}\n\nfunction watchIgnorable(source, cb, options = {}) {\n  const {\n    eventFilter = bypassFilter,\n    ...watchOptions\n  } = options;\n  const filteredCb = createFilterWrapper(\n    eventFilter,\n    cb\n  );\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(\n      source,\n      (...args) => {\n        if (!ignore.value)\n          filteredCb(...args);\n      },\n      watchOptions\n    );\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(\n      watch(\n        source,\n        () => {\n          syncCounter.value++;\n        },\n        { ...watchOptions, flush: \"sync\" }\n      )\n    );\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(\n      watch(\n        source,\n        (...args) => {\n          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n          ignoreCounter.value = 0;\n          syncCounter.value = 0;\n          if (ignore)\n            return;\n          filteredCb(...args);\n        },\n        watchOptions\n      )\n    );\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction watchImmediate(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    {\n      ...options,\n      immediate: true\n    }\n  );\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n  return stop;\n}\n\nfunction watchThrottled(source, cb, options = {}) {\n  const {\n    throttle = 0,\n    trailing = true,\n    leading = true,\n    ...watchOptions\n  } = options;\n  return watchWithFilter(\n    source,\n    cb,\n    {\n      ...watchOptions,\n      eventFilter: throttleFilter(throttle, trailing, leading)\n    }\n  );\n}\n\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return {\n    ...res,\n    trigger\n  };\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => toValue(item));\n  return toValue(sources);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  const stop = watch(\n    source,\n    (v, ov, onInvalidate) => {\n      if (v) {\n        if (options == null ? void 0 : options.once)\n          nextTick(() => stop());\n        cb(v, ov, onInvalidate);\n      }\n    },\n    {\n      ...options,\n      once: false\n    }\n  );\n  return stop;\n}\n\nexport { assert, refAutoReset as autoResetRef, bypassFilter, camelize, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, computedEager as eagerComputed, extendRef, formatDate, get, getLifeCycleTarget, hasOwn, hyphenate, identity, watchIgnorable as ignorableWatch, increaseWithUnit, injectLocal, invoke, isClient, isDef, isDefined, isIOS, isObject, isWorker, makeDestructurable, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, provideLocal, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","import { noop, makeDestructurable, camelize, toValue, isClient, isObject, tryOnScopeDispose, isIOS, tryOnMounted, notNullish, objectOmit, promiseTimeout, until, increaseWithUnit, objectEntries, createSingletonPromise, useTimeoutFn, pausableWatch, toRef, createEventHook, computedWithControl, timestamp, pausableFilter, watchIgnorable, debounceFilter, createFilterWrapper, bypassFilter, toRefs, useIntervalFn, containsProp, hasOwn, throttleFilter, useDebounceFn, useThrottleFn, tryOnUnmounted, clamp, syncRef, objectPick, watchWithFilter, tryOnBeforeUnmount, identity, isDef, whenever, isWorker } from '@vueuse/shared';\nexport * from '@vueuse/shared';\nimport { isRef, ref, shallowRef, watchEffect, computed, inject, defineComponent, h, TransitionGroup, shallowReactive, Fragment, watch, getCurrentInstance, customRef, onUpdated, onMounted, readonly, reactive, toRaw, nextTick, markRaw, unref, getCurrentScope, isReadonly, onBeforeUpdate } from 'vue';\n\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\n  let options;\n  if (isRef(optionsOrRef)) {\n    options = {\n      evaluating: optionsOrRef\n    };\n  } else {\n    options = optionsOrRef || {};\n  }\n  const {\n    lazy = false,\n    evaluating = void 0,\n    shallow = true,\n    onError = noop\n  } = options;\n  const started = ref(!lazy);\n  const current = shallow ? shallowRef(initialState) : ref(initialState);\n  let counter = 0;\n  watchEffect(async (onInvalidate) => {\n    if (!started.value)\n      return;\n    counter++;\n    const counterAtBeginning = counter;\n    let hasFinished = false;\n    if (evaluating) {\n      Promise.resolve().then(() => {\n        evaluating.value = true;\n      });\n    }\n    try {\n      const result = await evaluationCallback((cancelCallback) => {\n        onInvalidate(() => {\n          if (evaluating)\n            evaluating.value = false;\n          if (!hasFinished)\n            cancelCallback();\n        });\n      });\n      if (counterAtBeginning === counter)\n        current.value = result;\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (evaluating && counterAtBeginning === counter)\n        evaluating.value = false;\n      hasFinished = true;\n    }\n  });\n  if (lazy) {\n    return computed(() => {\n      started.value = true;\n      return current.value;\n    });\n  } else {\n    return current;\n  }\n}\n\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\n  let source = inject(key);\n  if (defaultSource)\n    source = inject(key, defaultSource);\n  if (treatDefaultAsFactory)\n    source = inject(key, defaultSource, treatDefaultAsFactory);\n  if (typeof options === \"function\") {\n    return computed((ctx) => options(source, ctx));\n  } else {\n    return computed({\n      get: (ctx) => options.get(source, ctx),\n      set: options.set\n    });\n  }\n}\n\nfunction createReusableTemplate(options = {}) {\n  const {\n    inheritAttrs = true\n  } = options;\n  const render = shallowRef();\n  const define = /* #__PURE__ */ defineComponent({\n    setup(_, { slots }) {\n      return () => {\n        render.value = slots.default;\n      };\n    }\n  });\n  const reuse = /* #__PURE__ */ defineComponent({\n    inheritAttrs,\n    setup(_, { attrs, slots }) {\n      return () => {\n        var _a;\n        if (!render.value && process.env.NODE_ENV !== \"production\")\n          throw new Error(\"[VueUse] Failed to find the definition of reusable template\");\n        const vnode = (_a = render.value) == null ? void 0 : _a.call(render, { ...keysToCamelKebabCase(attrs), $slots: slots });\n        return inheritAttrs && (vnode == null ? void 0 : vnode.length) === 1 ? vnode[0] : vnode;\n      };\n    }\n  });\n  return makeDestructurable(\n    { define, reuse },\n    [define, reuse]\n  );\n}\nfunction keysToCamelKebabCase(obj) {\n  const newObj = {};\n  for (const key in obj)\n    newObj[camelize(key)] = obj[key];\n  return newObj;\n}\n\nfunction createTemplatePromise(options = {}) {\n  let index = 0;\n  const instances = ref([]);\n  function create(...args) {\n    const props = shallowReactive({\n      key: index++,\n      args,\n      promise: void 0,\n      resolve: () => {\n      },\n      reject: () => {\n      },\n      isResolving: false,\n      options\n    });\n    instances.value.push(props);\n    props.promise = new Promise((_resolve, _reject) => {\n      props.resolve = (v) => {\n        props.isResolving = true;\n        return _resolve(v);\n      };\n      props.reject = _reject;\n    }).finally(() => {\n      props.promise = void 0;\n      const index2 = instances.value.indexOf(props);\n      if (index2 !== -1)\n        instances.value.splice(index2, 1);\n    });\n    return props.promise;\n  }\n  function start(...args) {\n    if (options.singleton && instances.value.length > 0)\n      return instances.value[0].promise;\n    return create(...args);\n  }\n  const component = /* #__PURE__ */ defineComponent((_, { slots }) => {\n    const renderList = () => instances.value.map((props) => {\n      var _a;\n      return h(Fragment, { key: props.key }, (_a = slots.default) == null ? void 0 : _a.call(slots, props));\n    });\n    if (options.transition)\n      return () => h(TransitionGroup, options.transition, renderList);\n    return renderList;\n  });\n  component.start = start;\n  return component;\n}\n\nfunction createUnrefFn(fn) {\n  return function(...args) {\n    return fn.apply(this, args.map((i) => toValue(i)));\n  };\n}\n\nconst defaultWindow = isClient ? window : void 0;\nconst defaultDocument = isClient ? window.document : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nconst defaultLocation = isClient ? window.location : void 0;\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = toValue(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nfunction useEventListener(...args) {\n  let target;\n  let events;\n  let listeners;\n  let options;\n  if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n    [events, listeners, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, events, listeners, options] = args;\n  }\n  if (!target)\n    return noop;\n  if (!Array.isArray(events))\n    events = [events];\n  if (!Array.isArray(listeners))\n    listeners = [listeners];\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.forEach((fn) => fn());\n    cleanups.length = 0;\n  };\n  const register = (el, event, listener, options2) => {\n    el.addEventListener(event, listener, options2);\n    return () => el.removeEventListener(event, listener, options2);\n  };\n  const stopWatch = watch(\n    () => [unrefElement(target), toValue(options)],\n    ([el, options2]) => {\n      cleanup();\n      if (!el)\n        return;\n      const optionsClone = isObject(options2) ? { ...options2 } : options2;\n      cleanups.push(\n        ...events.flatMap((event) => {\n          return listeners.map((listener) => register(el, event, listener, optionsClone));\n        })\n      );\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\n\nlet _iOSWorkaround = false;\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;\n  if (!window)\n    return noop;\n  if (isIOS && !_iOSWorkaround) {\n    _iOSWorkaround = true;\n    Array.from(window.document.body.children).forEach((el) => el.addEventListener(\"click\", noop));\n    window.document.documentElement.addEventListener(\"click\", noop);\n  }\n  let shouldListen = true;\n  const shouldIgnore = (event) => {\n    return toValue(ignore).some((target2) => {\n      if (typeof target2 === \"string\") {\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\n      } else {\n        const el = unrefElement(target2);\n        return el && (event.target === el || event.composedPath().includes(el));\n      }\n    });\n  };\n  function hasMultipleRoots(target2) {\n    const vm = toValue(target2);\n    return vm && vm.$.subTree.shapeFlag === 16;\n  }\n  function checkMultipleRoots(target2, event) {\n    const vm = toValue(target2);\n    const children = vm.$.subTree && vm.$.subTree.children;\n    if (children == null || !Array.isArray(children))\n      return false;\n    return children.some((child) => child.el === event.target || event.composedPath().includes(child.el));\n  }\n  const listener = (event) => {\n    const el = unrefElement(target);\n    if (event.target == null)\n      return;\n    if (!(el instanceof Element) && hasMultipleRoots(target) && checkMultipleRoots(target, event))\n      return;\n    if (!el || el === event.target || event.composedPath().includes(el))\n      return;\n    if (event.detail === 0)\n      shouldListen = !shouldIgnore(event);\n    if (!shouldListen) {\n      shouldListen = true;\n      return;\n    }\n    handler(event);\n  };\n  let isProcessingClick = false;\n  const cleanup = [\n    useEventListener(window, \"click\", (event) => {\n      if (!isProcessingClick) {\n        isProcessingClick = true;\n        setTimeout(() => {\n          isProcessingClick = false;\n        }, 0);\n        listener(event);\n      }\n    }, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      shouldListen = !shouldIgnore(e) && !!(el && !e.composedPath().includes(el));\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      setTimeout(() => {\n        var _a;\n        const el = unrefElement(target);\n        if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement))) {\n          handler(event);\n        }\n      }, 0);\n    })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nfunction createKeyPredicate(keyFilter) {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n}\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const {\n    target = defaultWindow,\n    eventName = \"keydown\",\n    passive = false,\n    dedupe = false\n  } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (e.repeat && toValue(dedupe))\n      return;\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keydown\" });\n}\nfunction onKeyPressed(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keypress\" });\n}\nfunction onKeyUp(key, handler, options = {}) {\n  return onKeyStroke(key, handler, { ...options, eventName: \"keyup\" });\n}\n\nconst DEFAULT_DELAY = 500;\nconst DEFAULT_THRESHOLD = 10;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  let posStart;\n  let startTimestamp;\n  let hasLongPressed = false;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n    posStart = void 0;\n    startTimestamp = void 0;\n    hasLongPressed = false;\n  }\n  function onRelease(ev) {\n    var _a2, _b2, _c;\n    const [_startTimestamp, _posStart, _hasLongPressed] = [startTimestamp, posStart, hasLongPressed];\n    clear();\n    if (!(options == null ? void 0 : options.onMouseUp) || !_posStart || !_startTimestamp)\n      return;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - _posStart.x;\n    const dy = ev.y - _posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    options.onMouseUp(ev.timeStamp - _startTimestamp, distance, _hasLongPressed);\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    posStart = {\n      x: ev.x,\n      y: ev.y\n    };\n    startTimestamp = ev.timeStamp;\n    timeout = setTimeout(\n      () => {\n        hasLongPressed = true;\n        handler(ev);\n      },\n      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY\n    );\n  }\n  function onMove(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    if (!posStart || (options == null ? void 0 : options.distanceThreshold) === false)\n      return;\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    const dx = ev.x - posStart.x;\n    const dy = ev.y - posStart.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance >= ((_d = options == null ? void 0 : options.distanceThreshold) != null ? _d : DEFAULT_THRESHOLD))\n      clear();\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  const cleanup = [\n    useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions),\n    useEventListener(elementRef, \"pointermove\", onMove, listenerOptions),\n    useEventListener(elementRef, [\"pointerup\", \"pointerleave\"], onRelease, listenerOptions)\n  ];\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nfunction isFocusedElementEditable() {\n  const { activeElement, body } = document;\n  if (!activeElement)\n    return false;\n  if (activeElement === body)\n    return false;\n  switch (activeElement.tagName) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      return true;\n  }\n  return activeElement.hasAttribute(\"contenteditable\");\n}\nfunction isTypedCharValid({\n  keyCode,\n  metaKey,\n  ctrlKey,\n  altKey\n}) {\n  if (metaKey || ctrlKey || altKey)\n    return false;\n  if (keyCode >= 48 && keyCode <= 57)\n    return true;\n  if (keyCode >= 65 && keyCode <= 90)\n    return true;\n  if (keyCode >= 97 && keyCode <= 122)\n    return true;\n  return false;\n}\nfunction onStartTyping(callback, options = {}) {\n  const { document: document2 = defaultDocument } = options;\n  const keydown = (event) => {\n    if (!isFocusedElementEditable() && isTypedCharValid(event)) {\n      callback(event);\n    }\n  };\n  if (document2)\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\n}\n\nfunction templateRef(key, initialValue = null) {\n  const instance = getCurrentInstance();\n  let _trigger = () => {\n  };\n  const element = customRef((track, trigger) => {\n    _trigger = trigger;\n    return {\n      get() {\n        var _a, _b;\n        track();\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\n      },\n      set() {\n      }\n    };\n  });\n  tryOnMounted(_trigger);\n  onUpdated(_trigger);\n  return element;\n}\n\nfunction useMounted() {\n  const isMounted = ref(false);\n  const instance = getCurrentInstance();\n  if (instance) {\n    onMounted(() => {\n      isMounted.value = true;\n    }, instance);\n  }\n  return isMounted;\n}\n\nfunction useSupported(callback) {\n  const isMounted = useMounted();\n  return computed(() => {\n    isMounted.value;\n    return Boolean(callback());\n  });\n}\n\nfunction useMutationObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...mutationOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => {\n    const value = toValue(target);\n    const items = (Array.isArray(value) ? value : [value]).map(unrefElement).filter(notNullish);\n    return new Set(items);\n  });\n  const stopWatch = watch(\n    () => targets.value,\n    (targets2) => {\n      cleanup();\n      if (isSupported.value && targets2.size) {\n        observer = new MutationObserver(callback);\n        targets2.forEach((el) => observer.observe(el, mutationOptions));\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const takeRecords = () => {\n    return observer == null ? void 0 : observer.takeRecords();\n  };\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop,\n    takeRecords\n  };\n}\n\nfunction useActiveElement(options = {}) {\n  var _a;\n  const {\n    window = defaultWindow,\n    deep = true,\n    triggerOnRemoval = false\n  } = options;\n  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;\n  const getDeepActiveElement = () => {\n    var _a2;\n    let element = document == null ? void 0 : document.activeElement;\n    if (deep) {\n      while (element == null ? void 0 : element.shadowRoot)\n        element = (_a2 = element == null ? void 0 : element.shadowRoot) == null ? void 0 : _a2.activeElement;\n    }\n    return element;\n  };\n  const activeElement = ref();\n  const trigger = () => {\n    activeElement.value = getDeepActiveElement();\n  };\n  if (window) {\n    useEventListener(window, \"blur\", (event) => {\n      if (event.relatedTarget !== null)\n        return;\n      trigger();\n    }, true);\n    useEventListener(window, \"focus\", trigger, true);\n  }\n  if (triggerOnRemoval) {\n    useMutationObserver(document, (mutations) => {\n      mutations.filter((m) => m.removedNodes.length).map((n) => Array.from(n.removedNodes)).flat().forEach((node) => {\n        if (node === activeElement.value)\n          trigger();\n      });\n    }, {\n      childList: true,\n      subtree: true\n    });\n  }\n  trigger();\n  return activeElement;\n}\n\nfunction useRafFn(fn, options = {}) {\n  const {\n    immediate = true,\n    fpsLimit = void 0,\n    window = defaultWindow\n  } = options;\n  const isActive = ref(false);\n  const intervalLimit = fpsLimit ? 1e3 / fpsLimit : null;\n  let previousFrameTimestamp = 0;\n  let rafId = null;\n  function loop(timestamp) {\n    if (!isActive.value || !window)\n      return;\n    if (!previousFrameTimestamp)\n      previousFrameTimestamp = timestamp;\n    const delta = timestamp - previousFrameTimestamp;\n    if (intervalLimit && delta < intervalLimit) {\n      rafId = window.requestAnimationFrame(loop);\n      return;\n    }\n    previousFrameTimestamp = timestamp;\n    fn({ delta, timestamp });\n    rafId = window.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window) {\n      isActive.value = true;\n      previousFrameTimestamp = 0;\n      rafId = window.requestAnimationFrame(loop);\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window) {\n      window.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive: readonly(isActive),\n    pause,\n    resume\n  };\n}\n\nfunction useAnimate(target, keyframes, options) {\n  let config;\n  let animateOptions;\n  if (isObject(options)) {\n    config = options;\n    animateOptions = objectOmit(options, [\"window\", \"immediate\", \"commitStyles\", \"persist\", \"onReady\", \"onError\"]);\n  } else {\n    config = { duration: options };\n    animateOptions = options;\n  }\n  const {\n    window = defaultWindow,\n    immediate = true,\n    commitStyles,\n    persist,\n    playbackRate: _playbackRate = 1,\n    onReady,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = config;\n  const isSupported = useSupported(() => window && HTMLElement && \"animate\" in HTMLElement.prototype);\n  const animate = shallowRef(void 0);\n  const store = shallowReactive({\n    startTime: null,\n    currentTime: null,\n    timeline: null,\n    playbackRate: _playbackRate,\n    pending: false,\n    playState: immediate ? \"idle\" : \"paused\",\n    replaceState: \"active\"\n  });\n  const pending = computed(() => store.pending);\n  const playState = computed(() => store.playState);\n  const replaceState = computed(() => store.replaceState);\n  const startTime = computed({\n    get() {\n      return store.startTime;\n    },\n    set(value) {\n      store.startTime = value;\n      if (animate.value)\n        animate.value.startTime = value;\n    }\n  });\n  const currentTime = computed({\n    get() {\n      return store.currentTime;\n    },\n    set(value) {\n      store.currentTime = value;\n      if (animate.value) {\n        animate.value.currentTime = value;\n        syncResume();\n      }\n    }\n  });\n  const timeline = computed({\n    get() {\n      return store.timeline;\n    },\n    set(value) {\n      store.timeline = value;\n      if (animate.value)\n        animate.value.timeline = value;\n    }\n  });\n  const playbackRate = computed({\n    get() {\n      return store.playbackRate;\n    },\n    set(value) {\n      store.playbackRate = value;\n      if (animate.value)\n        animate.value.playbackRate = value;\n    }\n  });\n  const play = () => {\n    if (animate.value) {\n      try {\n        animate.value.play();\n        syncResume();\n      } catch (e) {\n        syncPause();\n        onError(e);\n      }\n    } else {\n      update();\n    }\n  };\n  const pause = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.pause();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const reverse = () => {\n    var _a;\n    if (!animate.value)\n      update();\n    try {\n      (_a = animate.value) == null ? void 0 : _a.reverse();\n      syncResume();\n    } catch (e) {\n      syncPause();\n      onError(e);\n    }\n  };\n  const finish = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.finish();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const cancel = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.cancel();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  watch(() => unrefElement(target), (el) => {\n    if (el)\n      update();\n  });\n  watch(() => keyframes, (value) => {\n    if (animate.value)\n      update();\n    if (!unrefElement(target) && animate.value) {\n      animate.value.effect = new KeyframeEffect(\n        unrefElement(target),\n        toValue(value),\n        animateOptions\n      );\n    }\n  }, { deep: true });\n  tryOnMounted(() => update(true), false);\n  tryOnScopeDispose(cancel);\n  function update(init) {\n    const el = unrefElement(target);\n    if (!isSupported.value || !el)\n      return;\n    if (!animate.value)\n      animate.value = el.animate(toValue(keyframes), animateOptions);\n    if (persist)\n      animate.value.persist();\n    if (_playbackRate !== 1)\n      animate.value.playbackRate = _playbackRate;\n    if (init && !immediate)\n      animate.value.pause();\n    else\n      syncResume();\n    onReady == null ? void 0 : onReady(animate.value);\n  }\n  useEventListener(animate, [\"cancel\", \"finish\", \"remove\"], syncPause);\n  useEventListener(animate, \"finish\", () => {\n    var _a;\n    if (commitStyles)\n      (_a = animate.value) == null ? void 0 : _a.commitStyles();\n  });\n  const { resume: resumeRef, pause: pauseRef } = useRafFn(() => {\n    if (!animate.value)\n      return;\n    store.pending = animate.value.pending;\n    store.playState = animate.value.playState;\n    store.replaceState = animate.value.replaceState;\n    store.startTime = animate.value.startTime;\n    store.currentTime = animate.value.currentTime;\n    store.timeline = animate.value.timeline;\n    store.playbackRate = animate.value.playbackRate;\n  }, { immediate: false });\n  function syncResume() {\n    if (isSupported.value)\n      resumeRef();\n  }\n  function syncPause() {\n    if (isSupported.value && window)\n      window.requestAnimationFrame(pauseRef);\n  }\n  return {\n    isSupported,\n    animate,\n    // actions\n    play,\n    pause,\n    reverse,\n    finish,\n    cancel,\n    // state\n    pending,\n    playState,\n    replaceState,\n    startTime,\n    currentTime,\n    timeline,\n    playbackRate\n  };\n}\n\nfunction useAsyncQueue(tasks, options) {\n  const {\n    interrupt = true,\n    onError = noop,\n    onFinished = noop,\n    signal\n  } = options || {};\n  const promiseState = {\n    aborted: \"aborted\",\n    fulfilled: \"fulfilled\",\n    pending: \"pending\",\n    rejected: \"rejected\"\n  };\n  const initialResult = Array.from(Array.from({ length: tasks.length }), () => ({ state: promiseState.pending, data: null }));\n  const result = reactive(initialResult);\n  const activeIndex = ref(-1);\n  if (!tasks || tasks.length === 0) {\n    onFinished();\n    return {\n      activeIndex,\n      result\n    };\n  }\n  function updateResult(state, res) {\n    activeIndex.value++;\n    result[activeIndex.value].data = res;\n    result[activeIndex.value].state = state;\n  }\n  tasks.reduce((prev, curr) => {\n    return prev.then((prevRes) => {\n      var _a;\n      if (signal == null ? void 0 : signal.aborted) {\n        updateResult(promiseState.aborted, new Error(\"aborted\"));\n        return;\n      }\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\n        onFinished();\n        return;\n      }\n      const done = curr(prevRes).then((currentRes) => {\n        updateResult(promiseState.fulfilled, currentRes);\n        if (activeIndex.value === tasks.length - 1)\n          onFinished();\n        return currentRes;\n      });\n      if (!signal)\n        return done;\n      return Promise.race([done, whenAborted(signal)]);\n    }).catch((e) => {\n      if (signal == null ? void 0 : signal.aborted) {\n        updateResult(promiseState.aborted, e);\n        return e;\n      }\n      updateResult(promiseState.rejected, e);\n      onError();\n      return e;\n    });\n  }, Promise.resolve());\n  return {\n    activeIndex,\n    result\n  };\n}\nfunction whenAborted(signal) {\n  return new Promise((resolve, reject) => {\n    const error = new Error(\"aborted\");\n    if (signal.aborted)\n      reject(error);\n    else\n      signal.addEventListener(\"abort\", () => reject(error), { once: true });\n  });\n}\n\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    onSuccess = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = ref(false);\n  const isLoading = ref(false);\n  const error = shallowRef(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n      onSuccess(data);\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw e;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate)\n    execute(delay);\n  const shell = {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n  function waitUntilIsLoaded() {\n    return new Promise((resolve, reject) => {\n      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilIsLoaded().then(onFulfilled, onRejected);\n    }\n  };\n}\n\nconst defaults = {\n  array: (v) => JSON.stringify(v),\n  object: (v) => JSON.stringify(v),\n  set: (v) => JSON.stringify(Array.from(v)),\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\n  null: () => \"\"\n};\nfunction getDefaultSerialization(target) {\n  if (!target)\n    return defaults.null;\n  if (target instanceof Map)\n    return defaults.map;\n  else if (target instanceof Set)\n    return defaults.set;\n  else if (Array.isArray(target))\n    return defaults.array;\n  else\n    return defaults.object;\n}\n\nfunction useBase64(target, options) {\n  const base64 = ref(\"\");\n  const promise = ref();\n  function execute() {\n    if (!isClient)\n      return;\n    promise.value = new Promise((resolve, reject) => {\n      try {\n        const _target = toValue(target);\n        if (_target == null) {\n          resolve(\"\");\n        } else if (typeof _target === \"string\") {\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\n        } else if (_target instanceof Blob) {\n          resolve(blobToBase64(_target));\n        } else if (_target instanceof ArrayBuffer) {\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\n        } else if (_target instanceof HTMLCanvasElement) {\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n        } else if (_target instanceof HTMLImageElement) {\n          const img = _target.cloneNode(false);\n          img.crossOrigin = \"Anonymous\";\n          imgLoaded(img).then(() => {\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n          }).catch(reject);\n        } else if (typeof _target === \"object\") {\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\n          const serialized = _serializeFn(_target);\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\n        } else {\n          reject(new Error(\"target is unsupported types\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n    promise.value.then((res) => base64.value = res);\n    return promise.value;\n  }\n  if (isRef(target) || typeof target === \"function\")\n    watch(target, execute, { immediate: true });\n  else\n    execute();\n  return {\n    base64,\n    promise,\n    execute\n  };\n}\nfunction imgLoaded(img) {\n  return new Promise((resolve, reject) => {\n    if (!img.complete) {\n      img.onload = () => {\n        resolve();\n      };\n      img.onerror = reject;\n    } else {\n      resolve();\n    }\n  });\n}\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      resolve(e.target.result);\n    };\n    fr.onerror = reject;\n    fr.readAsDataURL(blob);\n  });\n}\n\nfunction useBattery(options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator && typeof navigator.getBattery === \"function\");\n  const charging = ref(false);\n  const chargingTime = ref(0);\n  const dischargingTime = ref(0);\n  const level = ref(1);\n  let battery;\n  function updateBatteryInfo() {\n    charging.value = this.charging;\n    chargingTime.value = this.chargingTime || 0;\n    dischargingTime.value = this.dischargingTime || 0;\n    level.value = this.level;\n  }\n  if (isSupported.value) {\n    navigator.getBattery().then((_battery) => {\n      battery = _battery;\n      updateBatteryInfo.call(battery);\n      useEventListener(battery, events, updateBatteryInfo, { passive: true });\n    });\n  }\n  return {\n    isSupported,\n    charging,\n    chargingTime,\n    dischargingTime,\n    level\n  };\n}\n\nfunction useBluetooth(options) {\n  let {\n    acceptAllDevices = false\n  } = options || {};\n  const {\n    filters = void 0,\n    optionalServices = void 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\n  const device = shallowRef(void 0);\n  const error = shallowRef(null);\n  watch(device, () => {\n    connectToBluetoothGATTServer();\n  });\n  async function requestDevice() {\n    if (!isSupported.value)\n      return;\n    error.value = null;\n    if (filters && filters.length > 0)\n      acceptAllDevices = false;\n    try {\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\n        acceptAllDevices,\n        filters,\n        optionalServices\n      }));\n    } catch (err) {\n      error.value = err;\n    }\n  }\n  const server = ref();\n  const isConnected = computed(() => {\n    var _a;\n    return ((_a = server.value) == null ? void 0 : _a.connected) || false;\n  });\n  async function connectToBluetoothGATTServer() {\n    error.value = null;\n    if (device.value && device.value.gatt) {\n      device.value.addEventListener(\"gattserverdisconnected\", () => {\n      });\n      try {\n        server.value = await device.value.gatt.connect();\n      } catch (err) {\n        error.value = err;\n      }\n    }\n  }\n  tryOnMounted(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\n  });\n  tryOnScopeDispose(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\n  });\n  return {\n    isSupported,\n    isConnected,\n    // Device:\n    device,\n    requestDevice,\n    // Server:\n    server,\n    // Errors:\n    error\n  };\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  let mediaQuery;\n  const matches = ref(false);\n  const handler = (event) => {\n    matches.value = event.matches;\n  };\n  const cleanup = () => {\n    if (!mediaQuery)\n      return;\n    if (\"removeEventListener\" in mediaQuery)\n      mediaQuery.removeEventListener(\"change\", handler);\n    else\n      mediaQuery.removeListener(handler);\n  };\n  const stopWatch = watchEffect(() => {\n    if (!isSupported.value)\n      return;\n    cleanup();\n    mediaQuery = window.matchMedia(toValue(query));\n    if (\"addEventListener\" in mediaQuery)\n      mediaQuery.addEventListener(\"change\", handler);\n    else\n      mediaQuery.addListener(handler);\n    matches.value = mediaQuery.matches;\n  });\n  tryOnScopeDispose(() => {\n    stopWatch();\n    cleanup();\n    mediaQuery = void 0;\n  });\n  return matches;\n}\n\nconst breakpointsTailwind = {\n  \"sm\": 640,\n  \"md\": 768,\n  \"lg\": 1024,\n  \"xl\": 1280,\n  \"2xl\": 1536\n};\nconst breakpointsBootstrapV5 = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\nconst breakpointsVuetifyV2 = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1264,\n  xl: 1904\n};\nconst breakpointsVuetifyV3 = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n  xxl: 2560\n};\nconst breakpointsVuetify = breakpointsVuetifyV2;\nconst breakpointsAntDesign = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nconst breakpointsQuasar = {\n  xs: 0,\n  sm: 600,\n  md: 1024,\n  lg: 1440,\n  xl: 1920\n};\nconst breakpointsSematic = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\nconst breakpointsMasterCss = {\n  \"3xs\": 360,\n  \"2xs\": 480,\n  \"xs\": 600,\n  \"sm\": 768,\n  \"md\": 1024,\n  \"lg\": 1280,\n  \"xl\": 1440,\n  \"2xl\": 1600,\n  \"3xl\": 1920,\n  \"4xl\": 2560\n};\nconst breakpointsPrimeFlex = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\nconst breakpointsElement = {\n  xs: 0,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1920\n};\n\nfunction useBreakpoints(breakpoints, options = {}) {\n  function getValue(k, delta) {\n    let v = toValue(breakpoints[toValue(k)]);\n    if (delta != null)\n      v = increaseWithUnit(v, delta);\n    if (typeof v === \"number\")\n      v = `${v}px`;\n    return v;\n  }\n  const { window = defaultWindow, strategy = \"min-width\" } = options;\n  function match(query) {\n    if (!window)\n      return false;\n    return window.matchMedia(query).matches;\n  }\n  const greaterOrEqual = (k) => {\n    return useMediaQuery(() => `(min-width: ${getValue(k)})`, options);\n  };\n  const smallerOrEqual = (k) => {\n    return useMediaQuery(() => `(max-width: ${getValue(k)})`, options);\n  };\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\n    Object.defineProperty(shortcuts, k, {\n      get: () => strategy === \"min-width\" ? greaterOrEqual(k) : smallerOrEqual(k),\n      enumerable: true,\n      configurable: true\n    });\n    return shortcuts;\n  }, {});\n  function current() {\n    const points = Object.keys(breakpoints).map((i) => [i, greaterOrEqual(i)]);\n    return computed(() => points.filter(([, v]) => v.value).map(([k]) => k));\n  }\n  return Object.assign(shortcutMethods, {\n    greaterOrEqual,\n    smallerOrEqual,\n    greater(k) {\n      return useMediaQuery(() => `(min-width: ${getValue(k, 0.1)})`, options);\n    },\n    smaller(k) {\n      return useMediaQuery(() => `(max-width: ${getValue(k, -0.1)})`, options);\n    },\n    between(a, b) {\n      return useMediaQuery(() => `(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\n    },\n    isGreater(k) {\n      return match(`(min-width: ${getValue(k, 0.1)})`);\n    },\n    isGreaterOrEqual(k) {\n      return match(`(min-width: ${getValue(k)})`);\n    },\n    isSmaller(k) {\n      return match(`(max-width: ${getValue(k, -0.1)})`);\n    },\n    isSmallerOrEqual(k) {\n      return match(`(max-width: ${getValue(k)})`);\n    },\n    isInBetween(a, b) {\n      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\n    },\n    current,\n    active() {\n      const bps = current();\n      return computed(() => bps.value.length === 0 ? \"\" : bps.value.at(-1));\n    }\n  });\n}\n\nfunction useBroadcastChannel(options) {\n  const {\n    name,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\n  const isClosed = ref(false);\n  const channel = ref();\n  const data = ref();\n  const error = shallowRef(null);\n  const post = (data2) => {\n    if (channel.value)\n      channel.value.postMessage(data2);\n  };\n  const close = () => {\n    if (channel.value)\n      channel.value.close();\n    isClosed.value = true;\n  };\n  if (isSupported.value) {\n    tryOnMounted(() => {\n      error.value = null;\n      channel.value = new BroadcastChannel(name);\n      channel.value.addEventListener(\"message\", (e) => {\n        data.value = e.data;\n      }, { passive: true });\n      channel.value.addEventListener(\"messageerror\", (e) => {\n        error.value = e;\n      }, { passive: true });\n      channel.value.addEventListener(\"close\", () => {\n        isClosed.value = true;\n      });\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    isSupported,\n    channel,\n    data,\n    post,\n    close,\n    error,\n    isClosed\n  };\n}\n\nconst WRITABLE_PROPERTIES = [\n  \"hash\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"search\"\n];\nfunction useBrowserLocation(options = {}) {\n  const { window = defaultWindow } = options;\n  const refs = Object.fromEntries(\n    WRITABLE_PROPERTIES.map((key) => [key, ref()])\n  );\n  for (const [key, ref2] of objectEntries(refs)) {\n    watch(ref2, (value) => {\n      if (!(window == null ? void 0 : window.location) || window.location[key] === value)\n        return;\n      window.location[key] = value;\n    });\n  }\n  const buildState = (trigger) => {\n    var _a;\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\n    const { origin } = (window == null ? void 0 : window.location) || {};\n    for (const key of WRITABLE_PROPERTIES)\n      refs[key].value = (_a = window == null ? void 0 : window.location) == null ? void 0 : _a[key];\n    return reactive({\n      trigger,\n      state: state2,\n      length,\n      origin,\n      ...refs\n    });\n  };\n  const state = ref(buildState(\"load\"));\n  if (window) {\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), { passive: true });\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), { passive: true });\n  }\n  return state;\n}\n\nfunction useCached(refValue, comparator = (a, b) => a === b, watchOptions) {\n  const cachedValue = ref(refValue.value);\n  watch(() => refValue.value, (value) => {\n    if (!comparator(value, cachedValue.value))\n      cachedValue.value = value;\n  }, watchOptions);\n  return cachedValue;\n}\n\nfunction usePermission(permissionDesc, options = {}) {\n  const {\n    controls = false,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\n  const permissionStatus = shallowRef();\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = shallowRef();\n  const update = () => {\n    var _a, _b;\n    state.value = (_b = (_a = permissionStatus.value) == null ? void 0 : _a.state) != null ? _b : \"prompt\";\n  };\n  useEventListener(permissionStatus, \"change\", update);\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus.value) {\n      try {\n        permissionStatus.value = await navigator.permissions.query(desc);\n      } catch (e) {\n        permissionStatus.value = void 0;\n      } finally {\n        update();\n      }\n    }\n    if (controls)\n      return toRaw(permissionStatus.value);\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction useClipboard(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500,\n    legacy = false\n  } = options;\n  const isClipboardApiSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const permissionRead = usePermission(\"clipboard-read\");\n  const permissionWrite = usePermission(\"clipboard-write\");\n  const isSupported = computed(() => isClipboardApiSupported.value || legacy);\n  const text = ref(\"\");\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateText() {\n    if (isClipboardApiSupported.value && isAllowed(permissionRead.value)) {\n      navigator.clipboard.readText().then((value) => {\n        text.value = value;\n      });\n    } else {\n      text.value = legacyRead();\n    }\n  }\n  if (isSupported.value && read)\n    useEventListener([\"copy\", \"cut\"], updateText);\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      if (isClipboardApiSupported.value && isAllowed(permissionWrite.value))\n        await navigator.clipboard.writeText(value);\n      else\n        legacyCopy(value);\n      text.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  function legacyCopy(value) {\n    const ta = document.createElement(\"textarea\");\n    ta.value = value != null ? value : \"\";\n    ta.style.position = \"absolute\";\n    ta.style.opacity = \"0\";\n    document.body.appendChild(ta);\n    ta.select();\n    document.execCommand(\"copy\");\n    ta.remove();\n  }\n  function legacyRead() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : \"\";\n  }\n  function isAllowed(status) {\n    return status === \"granted\" || status === \"prompt\";\n  }\n  return {\n    isSupported,\n    text,\n    copied,\n    copy\n  };\n}\n\nfunction useClipboardItems(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500\n  } = options;\n  const isSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const content = ref([]);\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateContent() {\n    if (isSupported.value) {\n      navigator.clipboard.read().then((items) => {\n        content.value = items;\n      });\n    }\n  }\n  if (isSupported.value && read)\n    useEventListener([\"copy\", \"cut\"], updateContent);\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      await navigator.clipboard.write(value);\n      content.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  return {\n    isSupported,\n    content,\n    copied,\n    copy\n  };\n}\n\nfunction cloneFnJSON(source) {\n  return JSON.parse(JSON.stringify(source));\n}\nfunction useCloned(source, options = {}) {\n  const cloned = ref({});\n  const {\n    manual,\n    clone = cloneFnJSON,\n    // watch options\n    deep = true,\n    immediate = true\n  } = options;\n  function sync() {\n    cloned.value = clone(toValue(source));\n  }\n  if (!manual && (isRef(source) || typeof source === \"function\")) {\n    watch(source, sync, {\n      ...options,\n      deep,\n      immediate\n    });\n  } else {\n    sync();\n  }\n  return { cloned, sync };\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\nconst handlers = /* @__PURE__ */ getHandlers();\nfunction getHandlers() {\n  if (!(globalKey in _global))\n    _global[globalKey] = _global[globalKey] || {};\n  return _global[globalKey];\n}\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction setSSRHandler(key, fn) {\n  handlers[key] = fn;\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nconst customStorageEventName = \"vueuse-storage\";\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    },\n    initOnMounted\n  } = options;\n  const data = (shallow ? shallowRef : ref)(typeof defaults === \"function\" ? defaults() : defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = toValue(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(\n    data,\n    () => write(data.value),\n    { flush, deep, eventFilter }\n  );\n  if (window && listenToStorageChanges) {\n    tryOnMounted(() => {\n      if (storage instanceof Storage)\n        useEventListener(window, \"storage\", update);\n      else\n        useEventListener(window, customStorageEventName, updateFromCustomEvent);\n      if (initOnMounted)\n        update();\n    });\n  }\n  if (!initOnMounted)\n    update();\n  function dispatchWriteEvent(oldValue, newValue) {\n    if (window) {\n      const payload = {\n        key,\n        oldValue,\n        newValue,\n        storageArea: storage\n      };\n      window.dispatchEvent(storage instanceof Storage ? new StorageEvent(\"storage\", payload) : new CustomEvent(customStorageEventName, {\n        detail: payload\n      }));\n    }\n  }\n  function write(v) {\n    try {\n      const oldValue = storage.getItem(key);\n      if (v == null) {\n        dispatchWriteEvent(oldValue, null);\n        storage.removeItem(key);\n      } else {\n        const serialized = serializer.write(v);\n        if (oldValue !== serialized) {\n          storage.setItem(key, serialized);\n          dispatchWriteEvent(oldValue, serialized);\n        }\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    const rawValue = event ? event.newValue : storage.getItem(key);\n    if (rawValue == null) {\n      if (writeDefaults && rawInit != null)\n        storage.setItem(key, serializer.write(rawInit));\n      return rawInit;\n    } else if (!event && mergeDefaults) {\n      const value = serializer.read(rawValue);\n      if (typeof mergeDefaults === \"function\")\n        return mergeDefaults(value, rawInit);\n      else if (type === \"object\" && !Array.isArray(value))\n        return { ...rawInit, ...value };\n      return value;\n    } else if (typeof rawValue !== \"string\") {\n      return rawValue;\n    } else {\n      return serializer.read(rawValue);\n    }\n  }\n  function update(event) {\n    if (event && event.storageArea !== storage)\n      return;\n    if (event && event.key == null) {\n      data.value = rawInit;\n      return;\n    }\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      if ((event == null ? void 0 : event.newValue) !== serializer.write(data.value))\n        data.value = read(event);\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (event)\n        nextTick(resumeWatch);\n      else\n        resumeWatch();\n    }\n  }\n  function updateFromCustomEvent(event) {\n    update(event.detail);\n  }\n  return data;\n}\n\nconst CSS_DISABLE_TRANS = \"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\";\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto,\n    disableTransition = true\n  } = options;\n  const modes = {\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\",\n    ...options.modes || {}\n  };\n  const preferredDark = usePreferredDark({ window });\n  const system = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? toRef(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed(() => store.value === \"auto\" ? system.value : store.value);\n  const updateHTMLAttrs = getSSRHandler(\n    \"updateHTMLAttrs\",\n    (selector2, attribute2, value) => {\n      const el = typeof selector2 === \"string\" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);\n      if (!el)\n        return;\n      const classesToAdd = /* @__PURE__ */ new Set();\n      const classesToRemove = /* @__PURE__ */ new Set();\n      let attributeToChange = null;\n      if (attribute2 === \"class\") {\n        const current = value.split(/\\s/g);\n        Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n          if (current.includes(v))\n            classesToAdd.add(v);\n          else\n            classesToRemove.add(v);\n        });\n      } else {\n        attributeToChange = { key: attribute2, value };\n      }\n      if (classesToAdd.size === 0 && classesToRemove.size === 0 && attributeToChange === null)\n        return;\n      let style;\n      if (disableTransition) {\n        style = window.document.createElement(\"style\");\n        style.appendChild(document.createTextNode(CSS_DISABLE_TRANS));\n        window.document.head.appendChild(style);\n      }\n      for (const c of classesToAdd) {\n        el.classList.add(c);\n      }\n      for (const c of classesToRemove) {\n        el.classList.remove(c);\n      }\n      if (attributeToChange) {\n        el.setAttribute(attributeToChange.key, attributeToChange.value);\n      }\n      if (disableTransition) {\n        window.getComputedStyle(style).opacity;\n        document.head.removeChild(style);\n      }\n    }\n  );\n  function defaultOnChanged(mode) {\n    var _a;\n    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  tryOnMounted(() => onChanged(state.value));\n  const auto = computed({\n    get() {\n      return emitAuto ? store.value : state.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  return Object.assign(auto, { store, system, state });\n}\n\nfunction useConfirmDialog(revealed = ref(false)) {\n  const confirmHook = createEventHook();\n  const cancelHook = createEventHook();\n  const revealHook = createEventHook();\n  let _resolve = noop;\n  const reveal = (data) => {\n    revealHook.trigger(data);\n    revealed.value = true;\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  };\n  const confirm = (data) => {\n    revealed.value = false;\n    confirmHook.trigger(data);\n    _resolve({ data, isCanceled: false });\n  };\n  const cancel = (data) => {\n    revealed.value = false;\n    cancelHook.trigger(data);\n    _resolve({ data, isCanceled: true });\n  };\n  return {\n    isRevealed: computed(() => revealed.value),\n    reveal,\n    confirm,\n    cancel,\n    onReveal: revealHook.on,\n    onConfirm: confirmHook.on,\n    onCancel: cancelHook.on\n  };\n}\n\nfunction useCssVar(prop, target, options = {}) {\n  const { window = defaultWindow, initialValue, observe = false } = options;\n  const variable = ref(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  function updateCssVar() {\n    var _a;\n    const key = toValue(prop);\n    const el = toValue(elRef);\n    if (el && window && key) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();\n      variable.value = value || initialValue;\n    }\n  }\n  if (observe) {\n    useMutationObserver(elRef, updateCssVar, {\n      attributeFilter: [\"style\", \"class\"],\n      window\n    });\n  }\n  watch(\n    [elRef, () => toValue(prop)],\n    (_, old) => {\n      if (old[0] && old[1])\n        old[0].style.removeProperty(old[1]);\n      updateCssVar();\n    },\n    { immediate: true }\n  );\n  watch(\n    variable,\n    (val) => {\n      var _a;\n      const raw_prop = toValue(prop);\n      if (((_a = elRef.value) == null ? void 0 : _a.style) && raw_prop) {\n        if (val == null)\n          elRef.value.style.removeProperty(raw_prop);\n        else\n          elRef.value.style.setProperty(raw_prop, val);\n      }\n    }\n  );\n  return variable;\n}\n\nfunction useCurrentElement(rootComponent) {\n  const vm = getCurrentInstance();\n  const currentElement = computedWithControl(\n    () => null,\n    () => rootComponent ? unrefElement(rootComponent) : vm.proxy.$el\n  );\n  onUpdated(currentElement.trigger);\n  onMounted(currentElement.trigger);\n  return currentElement;\n}\n\nfunction useCycleList(list, options) {\n  const state = shallowRef(getInitialValue());\n  const listRef = toRef(list);\n  const index = computed({\n    get() {\n      var _a;\n      const targetList = listRef.value;\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, targetList) : targetList.indexOf(state.value);\n      if (index2 < 0)\n        index2 = (_a = options == null ? void 0 : options.fallbackIndex) != null ? _a : 0;\n      return index2;\n    },\n    set(v) {\n      set(v);\n    }\n  });\n  function set(i) {\n    const targetList = listRef.value;\n    const length = targetList.length;\n    const index2 = (i % length + length) % length;\n    const value = targetList[index2];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index.value + delta);\n  }\n  function next(n = 1) {\n    return shift(n);\n  }\n  function prev(n = 1) {\n    return shift(-n);\n  }\n  function getInitialValue() {\n    var _a, _b;\n    return (_b = toValue((_a = options == null ? void 0 : options.initialValue) != null ? _a : toValue(list)[0])) != null ? _b : void 0;\n  }\n  watch(listRef, () => set(index.value));\n  return {\n    state,\n    index,\n    next,\n    prev,\n    go: set\n  };\n}\n\nfunction useDark(options = {}) {\n  const {\n    valueDark = \"dark\",\n    valueLight = \"\"\n  } = options;\n  const mode = useColorMode({\n    ...options,\n    onChanged: (mode2, defaultHandler) => {\n      var _a;\n      if (options.onChanged)\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\", defaultHandler, mode2);\n      else\n        defaultHandler(mode2);\n    },\n    modes: {\n      dark: valueDark,\n      light: valueLight\n    }\n  });\n  const system = computed(() => mode.system.value);\n  const isDark = computed({\n    get() {\n      return mode.value === \"dark\";\n    },\n    set(v) {\n      const modeVal = v ? \"dark\" : \"light\";\n      if (system.value === modeVal)\n        mode.value = \"auto\";\n      else\n        mode.value = modeVal;\n    }\n  });\n  return isDark;\n}\n\nfunction fnBypass(v) {\n  return v;\n}\nfunction fnSetSource(source, value) {\n  return source.value = value;\n}\nfunction defaultDump(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction defaultParse(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction useManualRefHistory(source, options = {}) {\n  const {\n    clone = false,\n    dump = defaultDump(clone),\n    parse = defaultParse(clone),\n    setSource = fnSetSource\n  } = options;\n  function _createHistoryRecord() {\n    return markRaw({\n      snapshot: dump(source.value),\n      timestamp: timestamp()\n    });\n  }\n  const last = ref(_createHistoryRecord());\n  const undoStack = ref([]);\n  const redoStack = ref([]);\n  const _setSource = (record) => {\n    setSource(source, parse(record.snapshot));\n    last.value = record;\n  };\n  const commit = () => {\n    undoStack.value.unshift(last.value);\n    last.value = _createHistoryRecord();\n    if (options.capacity && undoStack.value.length > options.capacity)\n      undoStack.value.splice(options.capacity, Number.POSITIVE_INFINITY);\n    if (redoStack.value.length)\n      redoStack.value.splice(0, redoStack.value.length);\n  };\n  const clear = () => {\n    undoStack.value.splice(0, undoStack.value.length);\n    redoStack.value.splice(0, redoStack.value.length);\n  };\n  const undo = () => {\n    const state = undoStack.value.shift();\n    if (state) {\n      redoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const redo = () => {\n    const state = redoStack.value.shift();\n    if (state) {\n      undoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const reset = () => {\n    _setSource(last.value);\n  };\n  const history = computed(() => [last.value, ...undoStack.value]);\n  const canUndo = computed(() => undoStack.value.length > 0);\n  const canRedo = computed(() => redoStack.value.length > 0);\n  return {\n    source,\n    undoStack,\n    redoStack,\n    last,\n    history,\n    canUndo,\n    canRedo,\n    clear,\n    commit,\n    reset,\n    undo,\n    redo\n  };\n}\n\nfunction useRefHistory(source, options = {}) {\n  const {\n    deep = false,\n    flush = \"pre\",\n    eventFilter\n  } = options;\n  const {\n    eventFilter: composedFilter,\n    pause,\n    resume: resumeTracking,\n    isActive: isTracking\n  } = pausableFilter(eventFilter);\n  const {\n    ignoreUpdates,\n    ignorePrevAsyncUpdates,\n    stop\n  } = watchIgnorable(\n    source,\n    commit,\n    { deep, flush, eventFilter: composedFilter }\n  );\n  function setSource(source2, value) {\n    ignorePrevAsyncUpdates();\n    ignoreUpdates(() => {\n      source2.value = value;\n    });\n  }\n  const manualHistory = useManualRefHistory(source, { ...options, clone: options.clone || deep, setSource });\n  const { clear, commit: manualCommit } = manualHistory;\n  function commit() {\n    ignorePrevAsyncUpdates();\n    manualCommit();\n  }\n  function resume(commitNow) {\n    resumeTracking();\n    if (commitNow)\n      commit();\n  }\n  function batch(fn) {\n    let canceled = false;\n    const cancel = () => canceled = true;\n    ignoreUpdates(() => {\n      fn(cancel);\n    });\n    if (!canceled)\n      commit();\n  }\n  function dispose() {\n    stop();\n    clear();\n  }\n  return {\n    ...manualHistory,\n    isTracking,\n    pause,\n    resume,\n    commit,\n    batch,\n    dispose\n  };\n}\n\nfunction useDebouncedRefHistory(source, options = {}) {\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\n  return {\n    ...history\n  };\n}\n\nfunction useDeviceMotion(options = {}) {\n  const {\n    window = defaultWindow,\n    eventFilter = bypassFilter\n  } = options;\n  const acceleration = ref({ x: null, y: null, z: null });\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\n  const interval = ref(0);\n  const accelerationIncludingGravity = ref({\n    x: null,\n    y: null,\n    z: null\n  });\n  if (window) {\n    const onDeviceMotion = createFilterWrapper(\n      eventFilter,\n      (event) => {\n        acceleration.value = event.acceleration;\n        accelerationIncludingGravity.value = event.accelerationIncludingGravity;\n        rotationRate.value = event.rotationRate;\n        interval.value = event.interval;\n      }\n    );\n    useEventListener(window, \"devicemotion\", onDeviceMotion);\n  }\n  return {\n    acceleration,\n    accelerationIncludingGravity,\n    rotationRate,\n    interval\n  };\n}\n\nfunction useDeviceOrientation(options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\n  const isAbsolute = ref(false);\n  const alpha = ref(null);\n  const beta = ref(null);\n  const gamma = ref(null);\n  if (window && isSupported.value) {\n    useEventListener(window, \"deviceorientation\", (event) => {\n      isAbsolute.value = event.absolute;\n      alpha.value = event.alpha;\n      beta.value = event.beta;\n      gamma.value = event.gamma;\n    });\n  }\n  return {\n    isSupported,\n    isAbsolute,\n    alpha,\n    beta,\n    gamma\n  };\n}\n\nfunction useDevicePixelRatio(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const pixelRatio = ref(1);\n  if (window) {\n    let observe2 = function() {\n      pixelRatio.value = window.devicePixelRatio;\n      cleanup2();\n      media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);\n      media.addEventListener(\"change\", observe2, { once: true });\n    }, cleanup2 = function() {\n      media == null ? void 0 : media.removeEventListener(\"change\", observe2);\n    };\n    let media;\n    observe2();\n    tryOnScopeDispose(cleanup2);\n  }\n  return { pixelRatio };\n}\n\nfunction useDevicesList(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options;\n  const devices = ref([]);\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n  const permissionGranted = ref(false);\n  let stream;\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices.value = await navigator.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices.value);\n    if (stream) {\n      stream.getTracks().forEach((t) => t.stop());\n      stream = null;\n    }\n  }\n  async function ensurePermissions() {\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(\"camera\", { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      let granted = true;\n      try {\n        stream = await navigator.mediaDevices.getUserMedia(constraints);\n      } catch (e) {\n        stream = null;\n        granted = false;\n      }\n      update();\n      permissionGranted.value = granted;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator.mediaDevices, \"devicechange\", update);\n    update();\n  }\n  return {\n    devices,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\n\nfunction useDisplayMedia(options = {}) {\n  var _a;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const video = options.video;\n  const audio = options.audio;\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\n  });\n  const constraint = { audio, video };\n  const stream = shallowRef();\n  async function _start() {\n    var _a2;\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.addEventListener(\"ended\", stop));\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else\n        _stop();\n    },\n    { immediate: true }\n  );\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    enabled\n  };\n}\n\nfunction useDocumentVisibility(options = {}) {\n  const { document = defaultDocument } = options;\n  if (!document)\n    return ref(\"visible\");\n  const visibility = ref(document.visibilityState);\n  useEventListener(document, \"visibilitychange\", () => {\n    visibility.value = document.visibilityState;\n  });\n  return visibility;\n}\n\nfunction useDraggable(target, options = {}) {\n  var _a, _b;\n  const {\n    pointerTypes,\n    preventDefault,\n    stopPropagation,\n    exact,\n    onMove,\n    onEnd,\n    onStart,\n    initialValue,\n    axis = \"both\",\n    draggingElement = defaultWindow,\n    containerElement,\n    handle: draggingHandle = target,\n    buttons = [0]\n  } = options;\n  const position = ref(\n    (_a = toValue(initialValue)) != null ? _a : { x: 0, y: 0 }\n  );\n  const pressedDelta = ref();\n  const filterEvent = (e) => {\n    if (pointerTypes)\n      return pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const handleEvent = (e) => {\n    if (toValue(preventDefault))\n      e.preventDefault();\n    if (toValue(stopPropagation))\n      e.stopPropagation();\n  };\n  const start = (e) => {\n    var _a2;\n    if (!toValue(buttons).includes(e.button))\n      return;\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (toValue(exact) && e.target !== toValue(target))\n      return;\n    const container = toValue(containerElement);\n    const containerRect = (_a2 = container == null ? void 0 : container.getBoundingClientRect) == null ? void 0 : _a2.call(container);\n    const targetRect = toValue(target).getBoundingClientRect();\n    const pos = {\n      x: e.clientX - (container ? targetRect.left - containerRect.left + container.scrollLeft : targetRect.left),\n      y: e.clientY - (container ? targetRect.top - containerRect.top + container.scrollTop : targetRect.top)\n    };\n    if ((onStart == null ? void 0 : onStart(pos, e)) === false)\n      return;\n    pressedDelta.value = pos;\n    handleEvent(e);\n  };\n  const move = (e) => {\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    const container = toValue(containerElement);\n    const targetRect = toValue(target).getBoundingClientRect();\n    let { x, y } = position.value;\n    if (axis === \"x\" || axis === \"both\") {\n      x = e.clientX - pressedDelta.value.x;\n      if (container)\n        x = Math.min(Math.max(0, x), container.scrollWidth - targetRect.width);\n    }\n    if (axis === \"y\" || axis === \"both\") {\n      y = e.clientY - pressedDelta.value.y;\n      if (container)\n        y = Math.min(Math.max(0, y), container.scrollHeight - targetRect.height);\n    }\n    position.value = {\n      x,\n      y\n    };\n    onMove == null ? void 0 : onMove(position.value, e);\n    handleEvent(e);\n  };\n  const end = (e) => {\n    if (toValue(options.disabled) || !filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    pressedDelta.value = void 0;\n    onEnd == null ? void 0 : onEnd(position.value, e);\n    handleEvent(e);\n  };\n  if (isClient) {\n    const config = { capture: (_b = options.capture) != null ? _b : true };\n    useEventListener(draggingHandle, \"pointerdown\", start, config);\n    useEventListener(draggingElement, \"pointermove\", move, config);\n    useEventListener(draggingElement, \"pointerup\", end, config);\n  }\n  return {\n    ...toRefs(position),\n    position,\n    isDragging: computed(() => !!pressedDelta.value),\n    style: computed(\n      () => `left:${position.value.x}px;top:${position.value.y}px;`\n    )\n  };\n}\n\nfunction useDropZone(target, options = {}) {\n  var _a, _b;\n  const isOverDropZone = ref(false);\n  const files = shallowRef(null);\n  let counter = 0;\n  let isValid = true;\n  if (isClient) {\n    const _options = typeof options === \"function\" ? { onDrop: options } : options;\n    const multiple = (_a = _options.multiple) != null ? _a : true;\n    const preventDefaultForUnhandled = (_b = _options.preventDefaultForUnhandled) != null ? _b : false;\n    const getFiles = (event) => {\n      var _a2, _b2;\n      const list = Array.from((_b2 = (_a2 = event.dataTransfer) == null ? void 0 : _a2.files) != null ? _b2 : []);\n      return list.length === 0 ? null : multiple ? list : [list[0]];\n    };\n    const checkDataTypes = (types) => {\n      if (_options.dataTypes) {\n        const dataTypes = unref(_options.dataTypes);\n        return typeof dataTypes === \"function\" ? dataTypes(types) : dataTypes ? dataTypes.some((item) => types.includes(item)) : true;\n      }\n      return true;\n    };\n    const checkValidity = (event) => {\n      var _a2, _b2;\n      const items = Array.from((_b2 = (_a2 = event.dataTransfer) == null ? void 0 : _a2.items) != null ? _b2 : []);\n      const types = items.map((item) => item.type);\n      const dataTypesValid = checkDataTypes(types);\n      const multipleFilesValid = multiple || items.length <= 1;\n      return dataTypesValid && multipleFilesValid;\n    };\n    const handleDragEvent = (event, eventType) => {\n      var _a2, _b2, _c, _d;\n      isValid = checkValidity(event);\n      if (!isValid) {\n        if (preventDefaultForUnhandled) {\n          event.preventDefault();\n        }\n        if (event.dataTransfer) {\n          event.dataTransfer.dropEffect = \"none\";\n        }\n        return;\n      }\n      event.preventDefault();\n      if (event.dataTransfer) {\n        event.dataTransfer.dropEffect = \"copy\";\n      }\n      const currentFiles = getFiles(event);\n      switch (eventType) {\n        case \"enter\":\n          counter += 1;\n          isOverDropZone.value = true;\n          (_a2 = _options.onEnter) == null ? void 0 : _a2.call(_options, null, event);\n          break;\n        case \"over\":\n          (_b2 = _options.onOver) == null ? void 0 : _b2.call(_options, null, event);\n          break;\n        case \"leave\":\n          counter -= 1;\n          if (counter === 0)\n            isOverDropZone.value = false;\n          (_c = _options.onLeave) == null ? void 0 : _c.call(_options, null, event);\n          break;\n        case \"drop\":\n          counter = 0;\n          isOverDropZone.value = false;\n          if (isValid) {\n            files.value = currentFiles;\n            (_d = _options.onDrop) == null ? void 0 : _d.call(_options, currentFiles, event);\n          }\n          break;\n      }\n    };\n    useEventListener(target, \"dragenter\", (event) => handleDragEvent(event, \"enter\"));\n    useEventListener(target, \"dragover\", (event) => handleDragEvent(event, \"over\"));\n    useEventListener(target, \"dragleave\", (event) => handleDragEvent(event, \"leave\"));\n    useEventListener(target, \"drop\", (event) => handleDragEvent(event, \"drop\"));\n  }\n  return {\n    files,\n    isOverDropZone\n  };\n}\n\nfunction useResizeObserver(target, callback, options = {}) {\n  const { window = defaultWindow, ...observerOptions } = options;\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(() => {\n    const _targets = toValue(target);\n    return Array.isArray(_targets) ? _targets.map((el) => unrefElement(el)) : [unrefElement(_targets)];\n  });\n  const stopWatch = watch(\n    targets,\n    (els) => {\n      cleanup();\n      if (isSupported.value && window) {\n        observer = new ResizeObserver(callback);\n        for (const _el of els) {\n          if (_el)\n            observer.observe(_el, observerOptions);\n        }\n      }\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementBounding(target, options = {}) {\n  const {\n    reset = true,\n    windowResize = true,\n    windowScroll = true,\n    immediate = true,\n    updateTiming = \"sync\"\n  } = options;\n  const height = ref(0);\n  const bottom = ref(0);\n  const left = ref(0);\n  const right = ref(0);\n  const top = ref(0);\n  const width = ref(0);\n  const x = ref(0);\n  const y = ref(0);\n  function recalculate() {\n    const el = unrefElement(target);\n    if (!el) {\n      if (reset) {\n        height.value = 0;\n        bottom.value = 0;\n        left.value = 0;\n        right.value = 0;\n        top.value = 0;\n        width.value = 0;\n        x.value = 0;\n        y.value = 0;\n      }\n      return;\n    }\n    const rect = el.getBoundingClientRect();\n    height.value = rect.height;\n    bottom.value = rect.bottom;\n    left.value = rect.left;\n    right.value = rect.right;\n    top.value = rect.top;\n    width.value = rect.width;\n    x.value = rect.x;\n    y.value = rect.y;\n  }\n  function update() {\n    if (updateTiming === \"sync\")\n      recalculate();\n    else if (updateTiming === \"next-frame\")\n      requestAnimationFrame(() => recalculate());\n  }\n  useResizeObserver(target, update);\n  watch(() => unrefElement(target), (ele) => !ele && update());\n  useMutationObserver(target, update, {\n    attributeFilter: [\"style\", \"class\"]\n  });\n  if (windowScroll)\n    useEventListener(\"scroll\", update, { capture: true, passive: true });\n  if (windowResize)\n    useEventListener(\"resize\", update, { passive: true });\n  tryOnMounted(() => {\n    if (immediate)\n      update();\n  });\n  return {\n    height,\n    bottom,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y,\n    update\n  };\n}\n\nfunction useElementByPoint(options) {\n  const {\n    x,\n    y,\n    document = defaultDocument,\n    multiple,\n    interval = \"requestAnimationFrame\",\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => {\n    if (toValue(multiple))\n      return document && \"elementsFromPoint\" in document;\n    return document && \"elementFromPoint\" in document;\n  });\n  const element = ref(null);\n  const cb = () => {\n    var _a, _b;\n    element.value = toValue(multiple) ? (_a = document == null ? void 0 : document.elementsFromPoint(toValue(x), toValue(y))) != null ? _a : [] : (_b = document == null ? void 0 : document.elementFromPoint(toValue(x), toValue(y))) != null ? _b : null;\n  };\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  return {\n    isSupported,\n    element,\n    ...controls\n  };\n}\n\nfunction useElementHover(el, options = {}) {\n  const {\n    delayEnter = 0,\n    delayLeave = 0,\n    window = defaultWindow\n  } = options;\n  const isHovered = ref(false);\n  let timer;\n  const toggle = (entering) => {\n    const delay = entering ? delayEnter : delayLeave;\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n    if (delay)\n      timer = setTimeout(() => isHovered.value = entering, delay);\n    else\n      isHovered.value = entering;\n  };\n  if (!window)\n    return isHovered;\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\n  return isHovered;\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { window = defaultWindow, box = \"content-box\" } = options;\n  const isSVG = computed(() => {\n    var _a, _b;\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\n  });\n  const width = ref(initialSize.width);\n  const height = ref(initialSize.height);\n  const { stop: stop1 } = useResizeObserver(\n    target,\n    ([entry]) => {\n      const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n      if (window && isSVG.value) {\n        const $elem = unrefElement(target);\n        if ($elem) {\n          const rect = $elem.getBoundingClientRect();\n          width.value = rect.width;\n          height.value = rect.height;\n        }\n      } else {\n        if (boxSize) {\n          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];\n          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n        } else {\n          width.value = entry.contentRect.width;\n          height.value = entry.contentRect.height;\n        }\n      }\n    },\n    options\n  );\n  tryOnMounted(() => {\n    const ele = unrefElement(target);\n    if (ele) {\n      width.value = \"offsetWidth\" in ele ? ele.offsetWidth : initialSize.width;\n      height.value = \"offsetHeight\" in ele ? ele.offsetHeight : initialSize.height;\n    }\n  });\n  const stop2 = watch(\n    () => unrefElement(target),\n    (ele) => {\n      width.value = ele ? initialSize.width : 0;\n      height.value = ele ? initialSize.height : 0;\n    }\n  );\n  function stop() {\n    stop1();\n    stop2();\n  }\n  return {\n    width,\n    height,\n    stop\n  };\n}\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0,\n    window = defaultWindow,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  const targets = computed(() => {\n    const _target = toValue(target);\n    return (Array.isArray(_target) ? _target : [_target]).map(unrefElement).filter(notNullish);\n  });\n  let cleanup = noop;\n  const isActive = ref(immediate);\n  const stopWatch = isSupported.value ? watch(\n    () => [targets.value, unrefElement(root), isActive.value],\n    ([targets2, root2]) => {\n      cleanup();\n      if (!isActive.value)\n        return;\n      if (!targets2.length)\n        return;\n      const observer = new IntersectionObserver(\n        callback,\n        {\n          root: unrefElement(root2),\n          rootMargin,\n          threshold\n        }\n      );\n      targets2.forEach((el) => el && observer.observe(el));\n      cleanup = () => {\n        observer.disconnect();\n        cleanup = noop;\n      };\n    },\n    { immediate, flush: \"post\" }\n  ) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n    isActive.value = false;\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    isActive,\n    pause() {\n      cleanup();\n      isActive.value = false;\n    },\n    resume() {\n      isActive.value = true;\n    },\n    stop\n  };\n}\n\nfunction useElementVisibility(element, options = {}) {\n  const { window = defaultWindow, scrollTarget, threshold = 0 } = options;\n  const elementIsVisible = ref(false);\n  useIntersectionObserver(\n    element,\n    (intersectionObserverEntries) => {\n      let isIntersecting = elementIsVisible.value;\n      let latestTime = 0;\n      for (const entry of intersectionObserverEntries) {\n        if (entry.time >= latestTime) {\n          latestTime = entry.time;\n          isIntersecting = entry.isIntersecting;\n        }\n      }\n      elementIsVisible.value = isIntersecting;\n    },\n    {\n      root: scrollTarget,\n      window,\n      threshold\n    }\n  );\n  return elementIsVisible;\n}\n\nconst events = /* @__PURE__ */ new Map();\n\nfunction useEventBus(key) {\n  const scope = getCurrentScope();\n  function on(listener) {\n    var _a;\n    const listeners = events.get(key) || /* @__PURE__ */ new Set();\n    listeners.add(listener);\n    events.set(key, listeners);\n    const _off = () => off(listener);\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\n    return _off;\n  }\n  function once(listener) {\n    function _listener(...args) {\n      off(_listener);\n      listener(...args);\n    }\n    return on(_listener);\n  }\n  function off(listener) {\n    const listeners = events.get(key);\n    if (!listeners)\n      return;\n    listeners.delete(listener);\n    if (!listeners.size)\n      reset();\n  }\n  function reset() {\n    events.delete(key);\n  }\n  function emit(event, payload) {\n    var _a;\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\n  }\n  return { on, once, off, emit, reset };\n}\n\nfunction resolveNestedOptions$1(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useEventSource(url, events = [], options = {}) {\n  const event = ref(null);\n  const data = ref(null);\n  const status = ref(\"CONNECTING\");\n  const eventSource = ref(null);\n  const error = shallowRef(null);\n  const urlRef = toRef(url);\n  const lastEventId = shallowRef(null);\n  let explicitlyClosed = false;\n  let retried = 0;\n  const {\n    withCredentials = false,\n    immediate = true\n  } = options;\n  const close = () => {\n    if (isClient && eventSource.value) {\n      eventSource.value.close();\n      eventSource.value = null;\n      status.value = \"CLOSED\";\n      explicitlyClosed = true;\n    }\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const es = new EventSource(urlRef.value, { withCredentials });\n    status.value = \"CONNECTING\";\n    eventSource.value = es;\n    es.onopen = () => {\n      status.value = \"OPEN\";\n      error.value = null;\n    };\n    es.onerror = (e) => {\n      status.value = \"CLOSED\";\n      error.value = e;\n      if (es.readyState === 2 && !explicitlyClosed && options.autoReconnect) {\n        es.close();\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions$1(options.autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    es.onmessage = (e) => {\n      event.value = null;\n      data.value = e.data;\n      lastEventId.value = e.lastEventId;\n    };\n    for (const event_name of events) {\n      useEventListener(es, event_name, (e) => {\n        event.value = event_name;\n        data.value = e.data || null;\n      });\n    }\n  };\n  const open = () => {\n    if (!isClient)\n      return;\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    watch(urlRef, open, { immediate: true });\n  tryOnScopeDispose(close);\n  return {\n    eventSource,\n    event,\n    data,\n    status,\n    error,\n    open,\n    close,\n    lastEventId\n  };\n}\n\nfunction useEyeDropper(options = {}) {\n  const { initialValue = \"\" } = options;\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  const sRGBHex = ref(initialValue);\n  async function open(openOptions) {\n    if (!isSupported.value)\n      return;\n    const eyeDropper = new window.EyeDropper();\n    const result = await eyeDropper.open(openOptions);\n    sRGBHex.value = result.sRGBHex;\n    return result;\n  }\n  return { isSupported, sRGBHex, open };\n}\n\nfunction useFavicon(newIcon = null, options = {}) {\n  const {\n    baseUrl = \"\",\n    rel = \"icon\",\n    document = defaultDocument\n  } = options;\n  const favicon = toRef(newIcon);\n  const applyIcon = (icon) => {\n    const elements = document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`);\n    if (!elements || elements.length === 0) {\n      const link = document == null ? void 0 : document.createElement(\"link\");\n      if (link) {\n        link.rel = rel;\n        link.href = `${baseUrl}${icon}`;\n        link.type = `image/${icon.split(\".\").pop()}`;\n        document == null ? void 0 : document.head.append(link);\n      }\n      return;\n    }\n    elements == null ? void 0 : elements.forEach((el) => el.href = `${baseUrl}${icon}`);\n  };\n  watch(\n    favicon,\n    (i, o) => {\n      if (typeof i === \"string\" && i !== o)\n        applyIcon(i);\n    },\n    { immediate: true }\n  );\n  return favicon;\n}\n\nconst payloadMapping = {\n  json: \"application/json\",\n  text: \"text/plain\"\n};\nfunction isFetchOptions(obj) {\n  return obj && containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\", \"updateDataOnError\");\n}\nconst reAbsolute = /^(?:[a-z][a-z\\d+\\-.]*:)?\\/\\//i;\nfunction isAbsoluteURL(url) {\n  return reAbsolute.test(url);\n}\nfunction headersToObject(headers) {\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\n    return Object.fromEntries(headers.entries());\n  return headers;\n}\nfunction combineCallbacks(combination, ...callbacks) {\n  if (combination === \"overwrite\") {\n    return async (ctx) => {\n      const callback = callbacks[callbacks.length - 1];\n      if (callback)\n        return { ...ctx, ...await callback(ctx) };\n      return ctx;\n    };\n  } else {\n    return async (ctx) => {\n      for (const callback of callbacks) {\n        if (callback)\n          ctx = { ...ctx, ...await callback(ctx) };\n      }\n      return ctx;\n    };\n  }\n}\nfunction createFetch(config = {}) {\n  const _combination = config.combination || \"chain\";\n  const _options = config.options || {};\n  const _fetchOptions = config.fetchOptions || {};\n  function useFactoryFetch(url, ...args) {\n    const computedUrl = computed(() => {\n      const baseUrl = toValue(config.baseUrl);\n      const targetUrl = toValue(url);\n      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;\n    });\n    let options = _options;\n    let fetchOptions = _fetchOptions;\n    if (args.length > 0) {\n      if (isFetchOptions(args[0])) {\n        options = {\n          ...options,\n          ...args[0],\n          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),\n          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),\n          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)\n        };\n      } else {\n        fetchOptions = {\n          ...fetchOptions,\n          ...args[0],\n          headers: {\n            ...headersToObject(fetchOptions.headers) || {},\n            ...headersToObject(args[0].headers) || {}\n          }\n        };\n      }\n    }\n    if (args.length > 1 && isFetchOptions(args[1])) {\n      options = {\n        ...options,\n        ...args[1],\n        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),\n        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),\n        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)\n      };\n    }\n    return useFetch(computedUrl, fetchOptions, options);\n  }\n  return useFactoryFetch;\n}\nfunction useFetch(url, ...args) {\n  var _a;\n  const supportsAbort = typeof AbortController === \"function\";\n  let fetchOptions = {};\n  let options = {\n    immediate: true,\n    refetch: false,\n    timeout: 0,\n    updateDataOnError: false\n  };\n  const config = {\n    method: \"GET\",\n    type: \"text\",\n    payload: void 0\n  };\n  if (args.length > 0) {\n    if (isFetchOptions(args[0]))\n      options = { ...options, ...args[0] };\n    else\n      fetchOptions = args[0];\n  }\n  if (args.length > 1) {\n    if (isFetchOptions(args[1]))\n      options = { ...options, ...args[1] };\n  }\n  const {\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\n    initialData,\n    timeout\n  } = options;\n  const responseEvent = createEventHook();\n  const errorEvent = createEventHook();\n  const finallyEvent = createEventHook();\n  const isFinished = ref(false);\n  const isFetching = ref(false);\n  const aborted = ref(false);\n  const statusCode = ref(null);\n  const response = shallowRef(null);\n  const error = shallowRef(null);\n  const data = shallowRef(initialData || null);\n  const canAbort = computed(() => supportsAbort && isFetching.value);\n  let controller;\n  let timer;\n  const abort = () => {\n    if (supportsAbort) {\n      controller == null ? void 0 : controller.abort();\n      controller = new AbortController();\n      controller.signal.onabort = () => aborted.value = true;\n      fetchOptions = {\n        ...fetchOptions,\n        signal: controller.signal\n      };\n    }\n  };\n  const loading = (isLoading) => {\n    isFetching.value = isLoading;\n    isFinished.value = !isLoading;\n  };\n  if (timeout)\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\n  let executeCounter = 0;\n  const execute = async (throwOnFailed = false) => {\n    var _a2, _b;\n    abort();\n    loading(true);\n    error.value = null;\n    statusCode.value = null;\n    aborted.value = false;\n    executeCounter += 1;\n    const currentExecuteCounter = executeCounter;\n    const defaultFetchOptions = {\n      method: config.method,\n      headers: {}\n    };\n    if (config.payload) {\n      const headers = headersToObject(defaultFetchOptions.headers);\n      const payload = toValue(config.payload);\n      const proto = Object.getPrototypeOf(payload);\n      if (!config.payloadType && payload && (proto === Object.prototype || Array.isArray(proto)) && !(payload instanceof FormData))\n        config.payloadType = \"json\";\n      if (config.payloadType)\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\n    }\n    let isCanceled = false;\n    const context = {\n      url: toValue(url),\n      options: {\n        ...defaultFetchOptions,\n        ...fetchOptions\n      },\n      cancel: () => {\n        isCanceled = true;\n      }\n    };\n    if (options.beforeFetch)\n      Object.assign(context, await options.beforeFetch(context));\n    if (isCanceled || !fetch) {\n      loading(false);\n      return Promise.resolve(null);\n    }\n    let responseData = null;\n    if (timer)\n      timer.start();\n    return fetch(\n      context.url,\n      {\n        ...defaultFetchOptions,\n        ...context.options,\n        headers: {\n          ...headersToObject(defaultFetchOptions.headers),\n          ...headersToObject((_b = context.options) == null ? void 0 : _b.headers)\n        }\n      }\n    ).then(async (fetchResponse) => {\n      response.value = fetchResponse;\n      statusCode.value = fetchResponse.status;\n      responseData = await fetchResponse.clone()[config.type]();\n      if (!fetchResponse.ok) {\n        data.value = initialData || null;\n        throw new Error(fetchResponse.statusText);\n      }\n      if (options.afterFetch) {\n        ({ data: responseData } = await options.afterFetch({\n          data: responseData,\n          response: fetchResponse\n        }));\n      }\n      data.value = responseData;\n      responseEvent.trigger(fetchResponse);\n      return fetchResponse;\n    }).catch(async (fetchError) => {\n      let errorData = fetchError.message || fetchError.name;\n      if (options.onFetchError) {\n        ({ error: errorData, data: responseData } = await options.onFetchError({\n          data: responseData,\n          error: fetchError,\n          response: response.value\n        }));\n      }\n      error.value = errorData;\n      if (options.updateDataOnError)\n        data.value = responseData;\n      errorEvent.trigger(fetchError);\n      if (throwOnFailed)\n        throw fetchError;\n      return null;\n    }).finally(() => {\n      if (currentExecuteCounter === executeCounter)\n        loading(false);\n      if (timer)\n        timer.stop();\n      finallyEvent.trigger(null);\n    });\n  };\n  const refetch = toRef(options.refetch);\n  watch(\n    [\n      refetch,\n      toRef(url)\n    ],\n    ([refetch2]) => refetch2 && execute(),\n    { deep: true }\n  );\n  const shell = {\n    isFinished: readonly(isFinished),\n    isFetching: readonly(isFetching),\n    statusCode,\n    response,\n    error,\n    data,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n    onFetchResponse: responseEvent.on,\n    onFetchError: errorEvent.on,\n    onFetchFinally: finallyEvent.on,\n    // method\n    get: setMethod(\"GET\"),\n    put: setMethod(\"PUT\"),\n    post: setMethod(\"POST\"),\n    delete: setMethod(\"DELETE\"),\n    patch: setMethod(\"PATCH\"),\n    head: setMethod(\"HEAD\"),\n    options: setMethod(\"OPTIONS\"),\n    // type\n    json: setType(\"json\"),\n    text: setType(\"text\"),\n    blob: setType(\"blob\"),\n    arrayBuffer: setType(\"arrayBuffer\"),\n    formData: setType(\"formData\")\n  };\n  function setMethod(method) {\n    return (payload, payloadType) => {\n      if (!isFetching.value) {\n        config.method = method;\n        config.payload = payload;\n        config.payloadType = payloadType;\n        if (isRef(config.payload)) {\n          watch(\n            [\n              refetch,\n              toRef(config.payload)\n            ],\n            ([refetch2]) => refetch2 && execute(),\n            { deep: true }\n          );\n        }\n        return {\n          ...shell,\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        };\n      }\n      return void 0;\n    };\n  }\n  function waitUntilFinished() {\n    return new Promise((resolve, reject) => {\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  function setType(type) {\n    return () => {\n      if (!isFetching.value) {\n        config.type = type;\n        return {\n          ...shell,\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        };\n      }\n      return void 0;\n    };\n  }\n  if (options.immediate)\n    Promise.resolve().then(() => execute());\n  return {\n    ...shell,\n    then(onFulfilled, onRejected) {\n      return waitUntilFinished().then(onFulfilled, onRejected);\n    }\n  };\n}\nfunction joinPaths(start, end) {\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\")) {\n    return `${start}/${end}`;\n  }\n  if (start.endsWith(\"/\") && end.startsWith(\"/\")) {\n    return `${start.slice(0, -1)}${end}`;\n  }\n  return `${start}${end}`;\n}\n\nconst DEFAULT_OPTIONS = {\n  multiple: true,\n  accept: \"*\",\n  reset: false,\n  directory: false\n};\nfunction useFileDialog(options = {}) {\n  const {\n    document = defaultDocument\n  } = options;\n  const files = ref(null);\n  const { on: onChange, trigger: changeTrigger } = createEventHook();\n  const { on: onCancel, trigger: cancelTrigger } = createEventHook();\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (event) => {\n      const result = event.target;\n      files.value = result.files;\n      changeTrigger(files.value);\n    };\n    input.oncancel = () => {\n      cancelTrigger();\n    };\n  }\n  const reset = () => {\n    files.value = null;\n    if (input && input.value) {\n      input.value = \"\";\n      changeTrigger(null);\n    }\n  };\n  const open = (localOptions) => {\n    if (!input)\n      return;\n    const _options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n      ...localOptions\n    };\n    input.multiple = _options.multiple;\n    input.accept = _options.accept;\n    input.webkitdirectory = _options.directory;\n    if (hasOwn(_options, \"capture\"))\n      input.capture = _options.capture;\n    if (_options.reset)\n      reset();\n    input.click();\n  };\n  return {\n    files: readonly(files),\n    open,\n    reset,\n    onCancel,\n    onChange\n  };\n}\n\nfunction useFileSystemAccess(options = {}) {\n  const {\n    window: _window = defaultWindow,\n    dataType = \"Text\"\n  } = options;\n  const window = _window;\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\n  const fileHandle = ref();\n  const data = ref();\n  const file = ref();\n  const fileName = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\n  });\n  const fileMIME = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\n  });\n  const fileSize = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\n  });\n  const fileLastModified = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\n  });\n  async function open(_options = {}) {\n    if (!isSupported.value)\n      return;\n    const [handle] = await window.showOpenFilePicker({ ...toValue(options), ..._options });\n    fileHandle.value = handle;\n    await updateData();\n  }\n  async function create(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\n    data.value = void 0;\n    await updateData();\n  }\n  async function save(_options = {}) {\n    if (!isSupported.value)\n      return;\n    if (!fileHandle.value)\n      return saveAs(_options);\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function saveAs(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker({ ...options, ..._options });\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function updateFile() {\n    var _a;\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\n  }\n  async function updateData() {\n    var _a, _b;\n    await updateFile();\n    const type = toValue(dataType);\n    if (type === \"Text\")\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\n    else if (type === \"ArrayBuffer\")\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\n    else if (type === \"Blob\")\n      data.value = file.value;\n  }\n  watch(() => toValue(dataType), updateData);\n  return {\n    isSupported,\n    data,\n    file,\n    fileName,\n    fileMIME,\n    fileSize,\n    fileLastModified,\n    open,\n    create,\n    save,\n    saveAs,\n    updateData\n  };\n}\n\nfunction useFocus(target, options = {}) {\n  const { initialValue = false, focusVisible = false, preventScroll = false } = options;\n  const innerFocused = ref(false);\n  const targetElement = computed(() => unrefElement(target));\n  useEventListener(targetElement, \"focus\", (event) => {\n    var _a, _b;\n    if (!focusVisible || ((_b = (_a = event.target).matches) == null ? void 0 : _b.call(_a, \":focus-visible\")))\n      innerFocused.value = true;\n  });\n  useEventListener(targetElement, \"blur\", () => innerFocused.value = false);\n  const focused = computed({\n    get: () => innerFocused.value,\n    set(value) {\n      var _a, _b;\n      if (!value && innerFocused.value)\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\n      else if (value && !innerFocused.value)\n        (_b = targetElement.value) == null ? void 0 : _b.focus({ preventScroll });\n    }\n  });\n  watch(\n    targetElement,\n    () => {\n      focused.value = initialValue;\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  return { focused };\n}\n\nconst EVENT_FOCUS_IN = \"focusin\";\nconst EVENT_FOCUS_OUT = \"focusout\";\nfunction useFocusWithin(target, options = {}) {\n  const { window = defaultWindow } = options;\n  const targetElement = computed(() => unrefElement(target));\n  const _focused = ref(false);\n  const focused = computed(() => _focused.value);\n  const activeElement = useActiveElement(options);\n  if (!window || !activeElement.value) {\n    return { focused };\n  }\n  useEventListener(targetElement, EVENT_FOCUS_IN, () => _focused.value = true);\n  useEventListener(targetElement, EVENT_FOCUS_OUT, () => _focused.value = false);\n  return { focused };\n}\n\nfunction useFps(options) {\n  var _a;\n  const fps = ref(0);\n  if (typeof performance === \"undefined\")\n    return fps;\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\n  let last = performance.now();\n  let ticks = 0;\n  useRafFn(() => {\n    ticks += 1;\n    if (ticks >= every) {\n      const now = performance.now();\n      const diff = now - last;\n      fps.value = Math.round(1e3 / (diff / ticks));\n      last = now;\n      ticks = 0;\n    }\n  });\n  return fps;\n}\n\nconst eventHandlers = [\n  \"fullscreenchange\",\n  \"webkitfullscreenchange\",\n  \"webkitendfullscreen\",\n  \"mozfullscreenchange\",\n  \"MSFullscreenChange\"\n];\nfunction useFullscreen(target, options = {}) {\n  const {\n    document = defaultDocument,\n    autoExit = false\n  } = options;\n  const targetRef = computed(() => {\n    var _a;\n    return (_a = unrefElement(target)) != null ? _a : document == null ? void 0 : document.querySelector(\"html\");\n  });\n  const isFullscreen = ref(false);\n  const requestMethod = computed(() => {\n    return [\n      \"requestFullscreen\",\n      \"webkitRequestFullscreen\",\n      \"webkitEnterFullscreen\",\n      \"webkitEnterFullScreen\",\n      \"webkitRequestFullScreen\",\n      \"mozRequestFullScreen\",\n      \"msRequestFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const exitMethod = computed(() => {\n    return [\n      \"exitFullscreen\",\n      \"webkitExitFullscreen\",\n      \"webkitExitFullScreen\",\n      \"webkitCancelFullScreen\",\n      \"mozCancelFullScreen\",\n      \"msExitFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenEnabled = computed(() => {\n    return [\n      \"fullScreen\",\n      \"webkitIsFullScreen\",\n      \"webkitDisplayingFullscreen\",\n      \"mozFullScreen\",\n      \"msFullscreenElement\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenElementMethod = [\n    \"fullscreenElement\",\n    \"webkitFullscreenElement\",\n    \"mozFullScreenElement\",\n    \"msFullscreenElement\"\n  ].find((m) => document && m in document);\n  const isSupported = useSupported(() => targetRef.value && document && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0);\n  const isCurrentElementFullScreen = () => {\n    if (fullscreenElementMethod)\n      return (document == null ? void 0 : document[fullscreenElementMethod]) === targetRef.value;\n    return false;\n  };\n  const isElementFullScreen = () => {\n    if (fullscreenEnabled.value) {\n      if (document && document[fullscreenEnabled.value] != null) {\n        return document[fullscreenEnabled.value];\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[fullscreenEnabled.value]) != null) {\n          return Boolean(target2[fullscreenEnabled.value]);\n        }\n      }\n    }\n    return false;\n  };\n  async function exit() {\n    if (!isSupported.value || !isFullscreen.value)\n      return;\n    if (exitMethod.value) {\n      if ((document == null ? void 0 : document[exitMethod.value]) != null) {\n        await document[exitMethod.value]();\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[exitMethod.value]) != null)\n          await target2[exitMethod.value]();\n      }\n    }\n    isFullscreen.value = false;\n  }\n  async function enter() {\n    if (!isSupported.value || isFullscreen.value)\n      return;\n    if (isElementFullScreen())\n      await exit();\n    const target2 = targetRef.value;\n    if (requestMethod.value && (target2 == null ? void 0 : target2[requestMethod.value]) != null) {\n      await target2[requestMethod.value]();\n      isFullscreen.value = true;\n    }\n  }\n  async function toggle() {\n    await (isFullscreen.value ? exit() : enter());\n  }\n  const handlerCallback = () => {\n    const isElementFullScreenValue = isElementFullScreen();\n    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())\n      isFullscreen.value = isElementFullScreenValue;\n  };\n  useEventListener(document, eventHandlers, handlerCallback, false);\n  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, false);\n  if (autoExit)\n    tryOnScopeDispose(exit);\n  return {\n    isSupported,\n    isFullscreen,\n    enter,\n    exit,\n    toggle\n  };\n}\n\nfunction mapGamepadToXbox360Controller(gamepad) {\n  return computed(() => {\n    if (gamepad.value) {\n      return {\n        buttons: {\n          a: gamepad.value.buttons[0],\n          b: gamepad.value.buttons[1],\n          x: gamepad.value.buttons[2],\n          y: gamepad.value.buttons[3]\n        },\n        bumper: {\n          left: gamepad.value.buttons[4],\n          right: gamepad.value.buttons[5]\n        },\n        triggers: {\n          left: gamepad.value.buttons[6],\n          right: gamepad.value.buttons[7]\n        },\n        stick: {\n          left: {\n            horizontal: gamepad.value.axes[0],\n            vertical: gamepad.value.axes[1],\n            button: gamepad.value.buttons[10]\n          },\n          right: {\n            horizontal: gamepad.value.axes[2],\n            vertical: gamepad.value.axes[3],\n            button: gamepad.value.buttons[11]\n          }\n        },\n        dpad: {\n          up: gamepad.value.buttons[12],\n          down: gamepad.value.buttons[13],\n          left: gamepad.value.buttons[14],\n          right: gamepad.value.buttons[15]\n        },\n        back: gamepad.value.buttons[8],\n        start: gamepad.value.buttons[9]\n      };\n    }\n    return null;\n  });\n}\nfunction useGamepad(options = {}) {\n  const {\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\n  const gamepads = ref([]);\n  const onConnectedHook = createEventHook();\n  const onDisconnectedHook = createEventHook();\n  const stateFromGamepad = (gamepad) => {\n    const hapticActuators = [];\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\n    if (vibrationActuator)\n      hapticActuators.push(vibrationActuator);\n    if (gamepad.hapticActuators)\n      hapticActuators.push(...gamepad.hapticActuators);\n    return {\n      id: gamepad.id,\n      index: gamepad.index,\n      connected: gamepad.connected,\n      mapping: gamepad.mapping,\n      timestamp: gamepad.timestamp,\n      vibrationActuator: gamepad.vibrationActuator,\n      hapticActuators,\n      axes: gamepad.axes.map((axes) => axes),\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))\n    };\n  };\n  const updateGamepadState = () => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (const gamepad of _gamepads) {\n      if (gamepad && gamepads.value[gamepad.index])\n        gamepads.value[gamepad.index] = stateFromGamepad(gamepad);\n    }\n  };\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\n  const onGamepadConnected = (gamepad) => {\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\n      gamepads.value.push(stateFromGamepad(gamepad));\n      onConnectedHook.trigger(gamepad.index);\n    }\n    resume();\n  };\n  const onGamepadDisconnected = (gamepad) => {\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\n    onDisconnectedHook.trigger(gamepad.index);\n  };\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad));\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad));\n  tryOnMounted(() => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (const gamepad of _gamepads) {\n      if (gamepad && gamepads.value[gamepad.index])\n        onGamepadConnected(gamepad);\n    }\n  });\n  pause();\n  return {\n    isSupported,\n    onConnected: onConnectedHook.on,\n    onDisconnected: onDisconnectedHook.on,\n    gamepads,\n    pause,\n    resume,\n    isActive\n  };\n}\n\nfunction useGeolocation(options = {}) {\n  const {\n    enableHighAccuracy = true,\n    maximumAge = 3e4,\n    timeout = 27e3,\n    navigator = defaultNavigator,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\n  const locatedAt = ref(null);\n  const error = shallowRef(null);\n  const coords = ref({\n    accuracy: 0,\n    latitude: Number.POSITIVE_INFINITY,\n    longitude: Number.POSITIVE_INFINITY,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n  function updatePosition(position) {\n    locatedAt.value = position.timestamp;\n    coords.value = position.coords;\n    error.value = null;\n  }\n  let watcher;\n  function resume() {\n    if (isSupported.value) {\n      watcher = navigator.geolocation.watchPosition(\n        updatePosition,\n        (err) => error.value = err,\n        {\n          enableHighAccuracy,\n          maximumAge,\n          timeout\n        }\n      );\n    }\n  }\n  if (immediate)\n    resume();\n  function pause() {\n    if (watcher && navigator)\n      navigator.geolocation.clearWatch(watcher);\n  }\n  tryOnScopeDispose(() => {\n    pause();\n  });\n  return {\n    isSupported,\n    coords,\n    locatedAt,\n    error,\n    resume,\n    pause\n  };\n}\n\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\nconst oneMinute = 6e4;\nfunction useIdle(timeout = oneMinute, options = {}) {\n  const {\n    initialState = false,\n    listenForVisibilityChange = true,\n    events = defaultEvents$1,\n    window = defaultWindow,\n    eventFilter = throttleFilter(50)\n  } = options;\n  const idle = ref(initialState);\n  const lastActive = ref(timestamp());\n  let timer;\n  const reset = () => {\n    idle.value = false;\n    clearTimeout(timer);\n    timer = setTimeout(() => idle.value = true, timeout);\n  };\n  const onEvent = createFilterWrapper(\n    eventFilter,\n    () => {\n      lastActive.value = timestamp();\n      reset();\n    }\n  );\n  if (window) {\n    const document = window.document;\n    for (const event of events)\n      useEventListener(window, event, onEvent, { passive: true });\n    if (listenForVisibilityChange) {\n      useEventListener(document, \"visibilitychange\", () => {\n        if (!document.hidden)\n          onEvent();\n      });\n    }\n    reset();\n  }\n  return {\n    idle,\n    lastActive,\n    reset\n  };\n}\n\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes, class: clazz, loading, crossorigin, referrerPolicy } = options;\n    img.src = src;\n    if (srcset)\n      img.srcset = srcset;\n    if (sizes)\n      img.sizes = sizes;\n    if (clazz)\n      img.className = clazz;\n    if (loading)\n      img.loading = loading;\n    if (crossorigin)\n      img.crossOrigin = crossorigin;\n    if (referrerPolicy)\n      img.referrerPolicy = referrerPolicy;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nfunction useImage(options, asyncStateOptions = {}) {\n  const state = useAsyncState(\n    () => loadImage(toValue(options)),\n    void 0,\n    {\n      resetOnExecute: true,\n      ...asyncStateOptions\n    }\n  );\n  watch(\n    () => toValue(options),\n    () => state.execute(asyncStateOptions.delay),\n    { deep: true }\n  );\n  return state;\n}\n\nfunction resolveElement(el) {\n  if (typeof Window !== \"undefined\" && el instanceof Window)\n    return el.document.documentElement;\n  if (typeof Document !== \"undefined\" && el instanceof Document)\n    return el.documentElement;\n  return el;\n}\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\",\n    window = defaultWindow,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const internalX = ref(0);\n  const internalY = ref(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c, _d;\n    if (!window)\n      return;\n    const _element = toValue(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? window.document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = toValue(_y)) != null ? _a : y.value,\n      left: (_b = toValue(_x)) != null ? _b : x.value,\n      behavior: toValue(behavior)\n    });\n    const scrollContainer = ((_d = _element == null ? void 0 : _element.document) == null ? void 0 : _d.documentElement) || (_element == null ? void 0 : _element.documentElement) || _element;\n    if (x != null)\n      internalX.value = scrollContainer.scrollLeft;\n    if (y != null)\n      internalY.value = scrollContainer.scrollTop;\n  }\n  const isScrolling = ref(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = (e) => {\n    if (!isScrolling.value)\n      return;\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  };\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\n  const setArrivedState = (target) => {\n    var _a;\n    if (!window)\n      return;\n    const el = ((_a = target == null ? void 0 : target.document) == null ? void 0 : _a.documentElement) || (target == null ? void 0 : target.documentElement) || unrefElement(target);\n    const { display, flexDirection } = getComputedStyle(el);\n    const scrollLeft = el.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalX.value;\n    const left = Math.abs(scrollLeft) <= (offset.left || 0);\n    const right = Math.abs(scrollLeft) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"row-reverse\") {\n      arrivedState.left = right;\n      arrivedState.right = left;\n    } else {\n      arrivedState.left = left;\n      arrivedState.right = right;\n    }\n    internalX.value = scrollLeft;\n    let scrollTop = el.scrollTop;\n    if (target === window.document && !scrollTop)\n      scrollTop = window.document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    const top = Math.abs(scrollTop) <= (offset.top || 0);\n    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"column-reverse\") {\n      arrivedState.top = bottom;\n      arrivedState.bottom = top;\n    } else {\n      arrivedState.top = top;\n      arrivedState.bottom = bottom;\n    }\n    internalY.value = scrollTop;\n  };\n  const onScrollHandler = (e) => {\n    var _a;\n    if (!window)\n      return;\n    const eventTarget = (_a = e.target.documentElement) != null ? _a : e.target;\n    setArrivedState(eventTarget);\n    isScrolling.value = true;\n    onScrollEndDebounced(e);\n    onScroll(e);\n  };\n  useEventListener(\n    element,\n    \"scroll\",\n    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,\n    eventListenerOptions\n  );\n  tryOnMounted(() => {\n    try {\n      const _element = toValue(element);\n      if (!_element)\n        return;\n      setArrivedState(_element);\n    } catch (e) {\n      onError(e);\n    }\n  });\n  useEventListener(\n    element,\n    \"scrollend\",\n    onScrollEnd,\n    eventListenerOptions\n  );\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions,\n    measure() {\n      const _element = toValue(element);\n      if (window && _element)\n        setArrivedState(_element);\n    }\n  };\n}\n\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a;\n  const {\n    direction = \"bottom\",\n    interval = 100,\n    canLoadMore = () => true\n  } = options;\n  const state = reactive(useScroll(\n    element,\n    {\n      ...options,\n      offset: {\n        [direction]: (_a = options.distance) != null ? _a : 0,\n        ...options.offset\n      }\n    }\n  ));\n  const promise = ref();\n  const isLoading = computed(() => !!promise.value);\n  const observedElement = computed(() => {\n    return resolveElement(toValue(element));\n  });\n  const isElementVisible = useElementVisibility(observedElement);\n  function checkAndLoad() {\n    state.measure();\n    if (!observedElement.value || !isElementVisible.value || !canLoadMore(observedElement.value))\n      return;\n    const { scrollHeight, clientHeight, scrollWidth, clientWidth } = observedElement.value;\n    const isNarrower = direction === \"bottom\" || direction === \"top\" ? scrollHeight <= clientHeight : scrollWidth <= clientWidth;\n    if (state.arrivedState[direction] || isNarrower) {\n      if (!promise.value) {\n        promise.value = Promise.all([\n          onLoadMore(state),\n          new Promise((resolve) => setTimeout(resolve, interval))\n        ]).finally(() => {\n          promise.value = null;\n          nextTick(() => checkAndLoad());\n        });\n      }\n    }\n  }\n  const stop = watch(\n    () => [state.arrivedState[direction], isElementVisible.value],\n    checkAndLoad,\n    { immediate: true }\n  );\n  tryOnUnmounted(stop);\n  return {\n    isLoading,\n    reset() {\n      nextTick(() => checkAndLoad());\n    }\n  };\n}\n\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\nfunction useKeyModifier(modifier, options = {}) {\n  const {\n    events = defaultEvents,\n    document = defaultDocument,\n    initial = null\n  } = options;\n  const state = ref(initial);\n  if (document) {\n    events.forEach((listenerEvent) => {\n      useEventListener(document, listenerEvent, (evt) => {\n        if (typeof evt.getModifierState === \"function\")\n          state.value = evt.getModifierState(modifier);\n      });\n    });\n  }\n  return state;\n}\n\nfunction useLocalStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\n}\n\nconst DefaultMagicKeysAliasMap = {\n  ctrl: \"control\",\n  command: \"meta\",\n  cmd: \"meta\",\n  option: \"alt\",\n  up: \"arrowup\",\n  down: \"arrowdown\",\n  left: \"arrowleft\",\n  right: \"arrowright\"\n};\n\nfunction useMagicKeys(options = {}) {\n  const {\n    reactive: useReactive = false,\n    target = defaultWindow,\n    aliasMap = DefaultMagicKeysAliasMap,\n    passive = true,\n    onEventFired = noop\n  } = options;\n  const current = reactive(/* @__PURE__ */ new Set());\n  const obj = {\n    toJSON() {\n      return {};\n    },\n    current\n  };\n  const refs = useReactive ? reactive(obj) : obj;\n  const metaDeps = /* @__PURE__ */ new Set();\n  const usedKeys = /* @__PURE__ */ new Set();\n  function setRefs(key, value) {\n    if (key in refs) {\n      if (useReactive)\n        refs[key] = value;\n      else\n        refs[key].value = value;\n    }\n  }\n  function reset() {\n    current.clear();\n    for (const key of usedKeys)\n      setRefs(key, false);\n  }\n  function updateRefs(e, value) {\n    var _a, _b;\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\n    const values = [code, key].filter(Boolean);\n    if (key) {\n      if (value)\n        current.add(key);\n      else\n        current.delete(key);\n    }\n    for (const key2 of values) {\n      usedKeys.add(key2);\n      setRefs(key2, value);\n    }\n    if (key === \"meta\" && !value) {\n      metaDeps.forEach((key2) => {\n        current.delete(key2);\n        setRefs(key2, false);\n      });\n      metaDeps.clear();\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\n    }\n  }\n  useEventListener(target, \"keydown\", (e) => {\n    updateRefs(e, true);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(target, \"keyup\", (e) => {\n    updateRefs(e, false);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(\"blur\", reset, { passive: true });\n  useEventListener(\"focus\", reset, { passive: true });\n  const proxy = new Proxy(\n    refs,\n    {\n      get(target2, prop, rec) {\n        if (typeof prop !== \"string\")\n          return Reflect.get(target2, prop, rec);\n        prop = prop.toLowerCase();\n        if (prop in aliasMap)\n          prop = aliasMap[prop];\n        if (!(prop in refs)) {\n          if (/[+_-]/.test(prop)) {\n            const keys = prop.split(/[+_-]/g).map((i) => i.trim());\n            refs[prop] = computed(() => keys.every((key) => toValue(proxy[key])));\n          } else {\n            refs[prop] = ref(false);\n          }\n        }\n        const r = Reflect.get(target2, prop, rec);\n        return useReactive ? toValue(r) : r;\n      }\n    }\n  );\n  return proxy;\n}\n\nfunction usingElRef(source, cb) {\n  if (toValue(source))\n    cb(toValue(source));\n}\nfunction timeRangeToArray(timeRanges) {\n  let ranges = [];\n  for (let i = 0; i < timeRanges.length; ++i)\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\n  return ranges;\n}\nfunction tracksToArray(tracks) {\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\n}\nconst defaultOptions = {\n  src: \"\",\n  tracks: []\n};\nfunction useMediaControls(target, options = {}) {\n  target = toRef(target);\n  options = {\n    ...defaultOptions,\n    ...options\n  };\n  const {\n    document = defaultDocument\n  } = options;\n  const currentTime = ref(0);\n  const duration = ref(0);\n  const seeking = ref(false);\n  const volume = ref(1);\n  const waiting = ref(false);\n  const ended = ref(false);\n  const playing = ref(false);\n  const rate = ref(1);\n  const stalled = ref(false);\n  const buffered = ref([]);\n  const tracks = ref([]);\n  const selectedTrack = ref(-1);\n  const isPictureInPicture = ref(false);\n  const muted = ref(false);\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\n  const sourceErrorEvent = createEventHook();\n  const playbackErrorEvent = createEventHook();\n  const disableTrack = (track) => {\n    usingElRef(target, (el) => {\n      if (track) {\n        const id = typeof track === \"number\" ? track : track.id;\n        el.textTracks[id].mode = \"disabled\";\n      } else {\n        for (let i = 0; i < el.textTracks.length; ++i)\n          el.textTracks[i].mode = \"disabled\";\n      }\n      selectedTrack.value = -1;\n    });\n  };\n  const enableTrack = (track, disableTracks = true) => {\n    usingElRef(target, (el) => {\n      const id = typeof track === \"number\" ? track : track.id;\n      if (disableTracks)\n        disableTrack();\n      el.textTracks[id].mode = \"showing\";\n      selectedTrack.value = id;\n    });\n  };\n  const togglePictureInPicture = () => {\n    return new Promise((resolve, reject) => {\n      usingElRef(target, async (el) => {\n        if (supportsPictureInPicture) {\n          if (!isPictureInPicture.value) {\n            el.requestPictureInPicture().then(resolve).catch(reject);\n          } else {\n            document.exitPictureInPicture().then(resolve).catch(reject);\n          }\n        }\n      });\n    });\n  };\n  watchEffect(() => {\n    if (!document)\n      return;\n    const el = toValue(target);\n    if (!el)\n      return;\n    const src = toValue(options.src);\n    let sources = [];\n    if (!src)\n      return;\n    if (typeof src === \"string\")\n      sources = [{ src }];\n    else if (Array.isArray(src))\n      sources = src;\n    else if (isObject(src))\n      sources = [src];\n    el.querySelectorAll(\"source\").forEach((e) => {\n      e.removeEventListener(\"error\", sourceErrorEvent.trigger);\n      e.remove();\n    });\n    sources.forEach(({ src: src2, type }) => {\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", src2);\n      source.setAttribute(\"type\", type || \"\");\n      source.addEventListener(\"error\", sourceErrorEvent.trigger);\n      el.appendChild(source);\n    });\n    el.load();\n  });\n  tryOnScopeDispose(() => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.querySelectorAll(\"source\").forEach((e) => e.removeEventListener(\"error\", sourceErrorEvent.trigger));\n  });\n  watch([target, volume], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.volume = volume.value;\n  });\n  watch([target, muted], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.muted = muted.value;\n  });\n  watch([target, rate], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.playbackRate = rate.value;\n  });\n  watchEffect(() => {\n    if (!document)\n      return;\n    const textTracks = toValue(options.tracks);\n    const el = toValue(target);\n    if (!textTracks || !textTracks.length || !el)\n      return;\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\n      const track = document.createElement(\"track\");\n      track.default = isDefault || false;\n      track.kind = kind;\n      track.label = label;\n      track.src = src;\n      track.srclang = srcLang;\n      if (track.default)\n        selectedTrack.value = i;\n      el.appendChild(track);\n    });\n  });\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.currentTime = time;\n  });\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    if (isPlaying) {\n      el.play().catch((e) => {\n        playbackErrorEvent.trigger(e);\n        throw e;\n      });\n    } else {\n      el.pause();\n    }\n  });\n  useEventListener(target, \"timeupdate\", () => ignoreCurrentTimeUpdates(() => currentTime.value = toValue(target).currentTime));\n  useEventListener(target, \"durationchange\", () => duration.value = toValue(target).duration);\n  useEventListener(target, \"progress\", () => buffered.value = timeRangeToArray(toValue(target).buffered));\n  useEventListener(target, \"seeking\", () => seeking.value = true);\n  useEventListener(target, \"seeked\", () => seeking.value = false);\n  useEventListener(target, [\"waiting\", \"loadstart\"], () => {\n    waiting.value = true;\n    ignorePlayingUpdates(() => playing.value = false);\n  });\n  useEventListener(target, \"loadeddata\", () => waiting.value = false);\n  useEventListener(target, \"playing\", () => {\n    waiting.value = false;\n    ended.value = false;\n    ignorePlayingUpdates(() => playing.value = true);\n  });\n  useEventListener(target, \"ratechange\", () => rate.value = toValue(target).playbackRate);\n  useEventListener(target, \"stalled\", () => stalled.value = true);\n  useEventListener(target, \"ended\", () => ended.value = true);\n  useEventListener(target, \"pause\", () => ignorePlayingUpdates(() => playing.value = false));\n  useEventListener(target, \"play\", () => ignorePlayingUpdates(() => playing.value = true));\n  useEventListener(target, \"enterpictureinpicture\", () => isPictureInPicture.value = true);\n  useEventListener(target, \"leavepictureinpicture\", () => isPictureInPicture.value = false);\n  useEventListener(target, \"volumechange\", () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    volume.value = el.volume;\n    muted.value = el.muted;\n  });\n  const listeners = [];\n  const stop = watch([target], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    stop();\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks));\n  });\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\n  return {\n    currentTime,\n    duration,\n    waiting,\n    seeking,\n    ended,\n    stalled,\n    buffered,\n    playing,\n    rate,\n    // Volume\n    volume,\n    muted,\n    // Tracks\n    tracks,\n    selectedTrack,\n    enableTrack,\n    disableTrack,\n    // Picture in Picture\n    supportsPictureInPicture,\n    togglePictureInPicture,\n    isPictureInPicture,\n    // Events\n    onSourceError: sourceErrorEvent.on,\n    onPlaybackError: playbackErrorEvent.on\n  };\n}\n\nfunction useMemoize(resolver, options) {\n  const initCache = () => {\n    if (options == null ? void 0 : options.cache)\n      return shallowReactive(options.cache);\n    return shallowReactive(/* @__PURE__ */ new Map());\n  };\n  const cache = initCache();\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\n  const _loadData = (key, ...args) => {\n    cache.set(key, resolver(...args));\n    return cache.get(key);\n  };\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\n  const deleteData = (...args) => {\n    cache.delete(generateKey(...args));\n  };\n  const clearData = () => {\n    cache.clear();\n  };\n  const memoized = (...args) => {\n    const key = generateKey(...args);\n    if (cache.has(key))\n      return cache.get(key);\n    return _loadData(key, ...args);\n  };\n  memoized.load = loadData;\n  memoized.delete = deleteData;\n  memoized.clear = clearData;\n  memoized.generateKey = generateKey;\n  memoized.cache = cache;\n  return memoized;\n}\n\nfunction useMemory(options = {}) {\n  const memory = ref();\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\n  if (isSupported.value) {\n    const { interval = 1e3 } = options;\n    useIntervalFn(() => {\n      memory.value = performance.memory;\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\n  }\n  return { isSupported, memory };\n}\n\nconst UseMouseBuiltinExtractors = {\n  page: (event) => [event.pageX, event.pageY],\n  client: (event) => [event.clientX, event.clientY],\n  screen: (event) => [event.screenX, event.screenY],\n  movement: (event) => event instanceof Touch ? null : [event.movementX, event.movementY]\n};\nfunction useMouse(options = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window = defaultWindow,\n    target = window,\n    scroll = true,\n    eventFilter\n  } = options;\n  let _prevMouseEvent = null;\n  let _prevScrollX = 0;\n  let _prevScrollY = 0;\n  const x = ref(initialValue.x);\n  const y = ref(initialValue.y);\n  const sourceType = ref(null);\n  const extractor = typeof type === \"function\" ? type : UseMouseBuiltinExtractors[type];\n  const mouseHandler = (event) => {\n    const result = extractor(event);\n    _prevMouseEvent = event;\n    if (result) {\n      [x.value, y.value] = result;\n      sourceType.value = \"mouse\";\n    }\n    if (window) {\n      _prevScrollX = window.scrollX;\n      _prevScrollY = window.scrollY;\n    }\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const result = extractor(event.touches[0]);\n      if (result) {\n        [x.value, y.value] = result;\n        sourceType.value = \"touch\";\n      }\n    }\n  };\n  const scrollHandler = () => {\n    if (!_prevMouseEvent || !window)\n      return;\n    const pos = extractor(_prevMouseEvent);\n    if (_prevMouseEvent instanceof MouseEvent && pos) {\n      x.value = pos[0] + window.scrollX - _prevScrollX;\n      y.value = pos[1] + window.scrollY - _prevScrollY;\n    }\n  };\n  const reset = () => {\n    x.value = initialValue.x;\n    y.value = initialValue.y;\n  };\n  const mouseHandlerWrapper = eventFilter ? (event) => eventFilter(() => mouseHandler(event), {}) : (event) => mouseHandler(event);\n  const touchHandlerWrapper = eventFilter ? (event) => eventFilter(() => touchHandler(event), {}) : (event) => touchHandler(event);\n  const scrollHandlerWrapper = eventFilter ? () => eventFilter(() => scrollHandler(), {}) : () => scrollHandler();\n  if (target) {\n    const listenerOptions = { passive: true };\n    useEventListener(target, [\"mousemove\", \"dragover\"], mouseHandlerWrapper, listenerOptions);\n    if (touch && type !== \"movement\") {\n      useEventListener(target, [\"touchstart\", \"touchmove\"], touchHandlerWrapper, listenerOptions);\n      if (resetOnTouchEnds)\n        useEventListener(target, \"touchend\", reset, listenerOptions);\n    }\n    if (scroll && type === \"page\")\n      useEventListener(window, \"scroll\", scrollHandlerWrapper, { passive: true });\n  }\n  return {\n    x,\n    y,\n    sourceType\n  };\n}\n\nfunction useMouseInElement(target, options = {}) {\n  const {\n    handleOutside = true,\n    window = defaultWindow\n  } = options;\n  const type = options.type || \"page\";\n  const { x, y, sourceType } = useMouse(options);\n  const targetRef = ref(target != null ? target : window == null ? void 0 : window.document.body);\n  const elementX = ref(0);\n  const elementY = ref(0);\n  const elementPositionX = ref(0);\n  const elementPositionY = ref(0);\n  const elementHeight = ref(0);\n  const elementWidth = ref(0);\n  const isOutside = ref(true);\n  let stop = () => {\n  };\n  if (window) {\n    stop = watch(\n      [targetRef, x, y],\n      () => {\n        const el = unrefElement(targetRef);\n        if (!el || !(el instanceof Element))\n          return;\n        const {\n          left,\n          top,\n          width,\n          height\n        } = el.getBoundingClientRect();\n        elementPositionX.value = left + (type === \"page\" ? window.pageXOffset : 0);\n        elementPositionY.value = top + (type === \"page\" ? window.pageYOffset : 0);\n        elementHeight.value = height;\n        elementWidth.value = width;\n        const elX = x.value - elementPositionX.value;\n        const elY = y.value - elementPositionY.value;\n        isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n        if (handleOutside || !isOutside.value) {\n          elementX.value = elX;\n          elementY.value = elY;\n        }\n      },\n      { immediate: true }\n    );\n    useEventListener(document, \"mouseleave\", () => {\n      isOutside.value = true;\n    });\n  }\n  return {\n    x,\n    y,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\n\nfunction useMousePressed(options = {}) {\n  const {\n    touch = true,\n    drag = true,\n    capture = false,\n    initialValue = false,\n    window = defaultWindow\n  } = options;\n  const pressed = ref(initialValue);\n  const sourceType = ref(null);\n  if (!window) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => () => {\n    pressed.value = true;\n    sourceType.value = srcType;\n  };\n  const onReleased = () => {\n    pressed.value = false;\n    sourceType.value = null;\n  };\n  const target = computed(() => unrefElement(options.target) || window);\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true, capture });\n  useEventListener(window, \"mouseleave\", onReleased, { passive: true, capture });\n  useEventListener(window, \"mouseup\", onReleased, { passive: true, capture });\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true, capture });\n    useEventListener(window, \"drop\", onReleased, { passive: true, capture });\n    useEventListener(window, \"dragend\", onReleased, { passive: true, capture });\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true, capture });\n    useEventListener(window, \"touchend\", onReleased, { passive: true, capture });\n    useEventListener(window, \"touchcancel\", onReleased, { passive: true, capture });\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\n\nfunction useNavigatorLanguage(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\n  const language = ref(navigator == null ? void 0 : navigator.language);\n  useEventListener(window, \"languagechange\", () => {\n    if (navigator)\n      language.value = navigator.language;\n  });\n  return {\n    isSupported,\n    language\n  };\n}\n\nfunction useNetwork(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\n  const isOnline = ref(true);\n  const saveData = ref(false);\n  const offlineAt = ref(void 0);\n  const onlineAt = ref(void 0);\n  const downlink = ref(void 0);\n  const downlinkMax = ref(void 0);\n  const rtt = ref(void 0);\n  const effectiveType = ref(void 0);\n  const type = ref(\"unknown\");\n  const connection = isSupported.value && navigator.connection;\n  function updateNetworkInformation() {\n    if (!navigator)\n      return;\n    isOnline.value = navigator.onLine;\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\n    if (connection) {\n      downlink.value = connection.downlink;\n      downlinkMax.value = connection.downlinkMax;\n      effectiveType.value = connection.effectiveType;\n      rtt.value = connection.rtt;\n      saveData.value = connection.saveData;\n      type.value = connection.type;\n    }\n  }\n  if (window) {\n    useEventListener(window, \"offline\", () => {\n      isOnline.value = false;\n      offlineAt.value = Date.now();\n    });\n    useEventListener(window, \"online\", () => {\n      isOnline.value = true;\n      onlineAt.value = Date.now();\n    });\n  }\n  if (connection)\n    useEventListener(connection, \"change\", updateNetworkInformation, false);\n  updateNetworkInformation();\n  return {\n    isSupported: readonly(isSupported),\n    isOnline: readonly(isOnline),\n    saveData: readonly(saveData),\n    offlineAt: readonly(offlineAt),\n    onlineAt: readonly(onlineAt),\n    downlink: readonly(downlink),\n    downlinkMax: readonly(downlinkMax),\n    effectiveType: readonly(effectiveType),\n    rtt: readonly(rtt),\n    type: readonly(type)\n  };\n}\n\nfunction useNow(options = {}) {\n  const {\n    controls: exposeControls = false,\n    interval = \"requestAnimationFrame\"\n  } = options;\n  const now = ref(/* @__PURE__ */ new Date());\n  const update = () => now.value = /* @__PURE__ */ new Date();\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\n  if (exposeControls) {\n    return {\n      now,\n      ...controls\n    };\n  } else {\n    return now;\n  }\n}\n\nfunction useObjectUrl(object) {\n  const url = ref();\n  const release = () => {\n    if (url.value)\n      URL.revokeObjectURL(url.value);\n    url.value = void 0;\n  };\n  watch(\n    () => toValue(object),\n    (newObject) => {\n      release();\n      if (newObject)\n        url.value = URL.createObjectURL(newObject);\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(release);\n  return readonly(url);\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useOffsetPagination(options) {\n  const {\n    total = Number.POSITIVE_INFINITY,\n    pageSize = 10,\n    page = 1,\n    onPageChange = noop,\n    onPageSizeChange = noop,\n    onPageCountChange = noop\n  } = options;\n  const currentPageSize = useClamp(pageSize, 1, Number.POSITIVE_INFINITY);\n  const pageCount = computed(() => Math.max(\n    1,\n    Math.ceil(toValue(total) / toValue(currentPageSize))\n  ));\n  const currentPage = useClamp(page, 1, pageCount);\n  const isFirstPage = computed(() => currentPage.value === 1);\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\n  if (isRef(page)) {\n    syncRef(page, currentPage, {\n      direction: isReadonly(page) ? \"ltr\" : \"both\"\n    });\n  }\n  if (isRef(pageSize)) {\n    syncRef(pageSize, currentPageSize, {\n      direction: isReadonly(pageSize) ? \"ltr\" : \"both\"\n    });\n  }\n  function prev() {\n    currentPage.value--;\n  }\n  function next() {\n    currentPage.value++;\n  }\n  const returnValue = {\n    currentPage,\n    currentPageSize,\n    pageCount,\n    isFirstPage,\n    isLastPage,\n    prev,\n    next\n  };\n  watch(currentPage, () => {\n    onPageChange(reactive(returnValue));\n  });\n  watch(currentPageSize, () => {\n    onPageSizeChange(reactive(returnValue));\n  });\n  watch(pageCount, () => {\n    onPageCountChange(reactive(returnValue));\n  });\n  return returnValue;\n}\n\nfunction useOnline(options = {}) {\n  const { isOnline } = useNetwork(options);\n  return isOnline;\n}\n\nfunction usePageLeave(options = {}) {\n  const { window = defaultWindow } = options;\n  const isLeft = ref(false);\n  const handler = (event) => {\n    if (!window)\n      return;\n    event = event || window.event;\n    const from = event.relatedTarget || event.toElement;\n    isLeft.value = !from;\n  };\n  if (window) {\n    useEventListener(window, \"mouseout\", handler, { passive: true });\n    useEventListener(window.document, \"mouseleave\", handler, { passive: true });\n    useEventListener(window.document, \"mouseenter\", handler, { passive: true });\n  }\n  return isLeft;\n}\n\nfunction useScreenOrientation(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\n  const orientation = ref(screenOrientation.type);\n  const angle = ref(screenOrientation.angle || 0);\n  if (isSupported.value) {\n    useEventListener(window, \"orientationchange\", () => {\n      orientation.value = screenOrientation.type;\n      angle.value = screenOrientation.angle;\n    });\n  }\n  const lockOrientation = (type) => {\n    if (isSupported.value && typeof screenOrientation.lock === \"function\")\n      return screenOrientation.lock(type);\n    return Promise.reject(new Error(\"Not supported\"));\n  };\n  const unlockOrientation = () => {\n    if (isSupported.value && typeof screenOrientation.unlock === \"function\")\n      screenOrientation.unlock();\n  };\n  return {\n    isSupported,\n    orientation,\n    angle,\n    lockOrientation,\n    unlockOrientation\n  };\n}\n\nfunction useParallax(target, options = {}) {\n  const {\n    deviceOrientationTiltAdjust = (i) => i,\n    deviceOrientationRollAdjust = (i) => i,\n    mouseTiltAdjust = (i) => i,\n    mouseRollAdjust = (i) => i,\n    window = defaultWindow\n  } = options;\n  const orientation = reactive(useDeviceOrientation({ window }));\n  const screenOrientation = reactive(useScreenOrientation({ window }));\n  const {\n    elementX: x,\n    elementY: y,\n    elementWidth: width,\n    elementHeight: height\n  } = useMouseInElement(target, { handleOutside: false, window });\n  const source = computed(() => {\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0)) {\n      return \"deviceOrientation\";\n    }\n    return \"mouse\";\n  });\n  const roll = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      let value;\n      switch (screenOrientation.orientation) {\n        case \"landscape-primary\":\n          value = orientation.gamma / 90;\n          break;\n        case \"landscape-secondary\":\n          value = -orientation.gamma / 90;\n          break;\n        case \"portrait-primary\":\n          value = -orientation.beta / 90;\n          break;\n        case \"portrait-secondary\":\n          value = orientation.beta / 90;\n          break;\n        default:\n          value = -orientation.beta / 90;\n      }\n      return deviceOrientationRollAdjust(value);\n    } else {\n      const value = -(y.value - height.value / 2) / height.value;\n      return mouseRollAdjust(value);\n    }\n  });\n  const tilt = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      let value;\n      switch (screenOrientation.orientation) {\n        case \"landscape-primary\":\n          value = orientation.beta / 90;\n          break;\n        case \"landscape-secondary\":\n          value = -orientation.beta / 90;\n          break;\n        case \"portrait-primary\":\n          value = orientation.gamma / 90;\n          break;\n        case \"portrait-secondary\":\n          value = -orientation.gamma / 90;\n          break;\n        default:\n          value = orientation.gamma / 90;\n      }\n      return deviceOrientationTiltAdjust(value);\n    } else {\n      const value = (x.value - width.value / 2) / width.value;\n      return mouseTiltAdjust(value);\n    }\n  });\n  return { roll, tilt, source };\n}\n\nfunction useParentElement(element = useCurrentElement()) {\n  const parentElement = shallowRef();\n  const update = () => {\n    const el = unrefElement(element);\n    if (el)\n      parentElement.value = el.parentElement;\n  };\n  tryOnMounted(update);\n  watch(() => toValue(element), update);\n  return parentElement;\n}\n\nfunction usePerformanceObserver(options, callback) {\n  const {\n    window = defaultWindow,\n    immediate = true,\n    ...performanceOptions\n  } = options;\n  const isSupported = useSupported(() => window && \"PerformanceObserver\" in window);\n  let observer;\n  const stop = () => {\n    observer == null ? void 0 : observer.disconnect();\n  };\n  const start = () => {\n    if (isSupported.value) {\n      stop();\n      observer = new PerformanceObserver(callback);\n      observer.observe(performanceOptions);\n    }\n  };\n  tryOnScopeDispose(stop);\n  if (immediate)\n    start();\n  return {\n    isSupported,\n    start,\n    stop\n  };\n}\n\nconst defaultState = {\n  x: 0,\n  y: 0,\n  pointerId: 0,\n  pressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  width: 0,\n  height: 0,\n  twist: 0,\n  pointerType: null\n};\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\nfunction usePointer(options = {}) {\n  const {\n    target = defaultWindow\n  } = options;\n  const isInside = ref(false);\n  const state = ref(options.initialValue || {});\n  Object.assign(state.value, defaultState, state.value);\n  const handler = (event) => {\n    isInside.value = true;\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\n      return;\n    state.value = objectPick(event, keys, false);\n  };\n  if (target) {\n    const listenerOptions = { passive: true };\n    useEventListener(target, [\"pointerdown\", \"pointermove\", \"pointerup\"], handler, listenerOptions);\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, listenerOptions);\n  }\n  return {\n    ...toRefs(state),\n    isInside\n  };\n}\n\nfunction usePointerLock(target, options = {}) {\n  const { document = defaultDocument } = options;\n  const isSupported = useSupported(() => document && \"pointerLockElement\" in document);\n  const element = ref();\n  const triggerElement = ref();\n  let targetElement;\n  if (isSupported.value) {\n    useEventListener(document, \"pointerlockchange\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        element.value = document.pointerLockElement;\n        if (!element.value)\n          targetElement = triggerElement.value = null;\n      }\n    });\n    useEventListener(document, \"pointerlockerror\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        const action = document.pointerLockElement ? \"release\" : \"acquire\";\n        throw new Error(`Failed to ${action} pointer lock.`);\n      }\n    });\n  }\n  async function lock(e) {\n    var _a;\n    if (!isSupported.value)\n      throw new Error(\"Pointer Lock API is not supported by your browser.\");\n    triggerElement.value = e instanceof Event ? e.currentTarget : null;\n    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);\n    if (!targetElement)\n      throw new Error(\"Target element undefined.\");\n    targetElement.requestPointerLock();\n    return await until(element).toBe(targetElement);\n  }\n  async function unlock() {\n    if (!element.value)\n      return false;\n    document.exitPointerLock();\n    await until(element).toBeNull();\n    return true;\n  }\n  return {\n    isSupported,\n    element,\n    triggerElement,\n    lock,\n    unlock\n  };\n}\n\nfunction usePointerSwipe(target, options = {}) {\n  const targetRef = toRef(target);\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    disableTextSelect = false\n  } = options;\n  const posStart = reactive({ x: 0, y: 0 });\n  const updatePosStart = (x, y) => {\n    posStart.x = x;\n    posStart.y = y;\n  };\n  const posEnd = reactive({ x: 0, y: 0 });\n  const updatePosEnd = (x, y) => {\n    posEnd.x = x;\n    posEnd.y = y;\n  };\n  const distanceX = computed(() => posStart.x - posEnd.x);\n  const distanceY = computed(() => posStart.y - posEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const isPointerDown = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(distanceX.value) > abs(distanceY.value)) {\n      return distanceX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return distanceY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const eventIsAllowed = (e) => {\n    var _a, _b, _c;\n    const isReleasingButton = e.buttons === 0;\n    const isPrimaryButton = e.buttons === 1;\n    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;\n  };\n  const stops = [\n    useEventListener(target, \"pointerdown\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      isPointerDown.value = true;\n      const eventTarget = e.target;\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\n      const { clientX: x, clientY: y } = e;\n      updatePosStart(x, y);\n      updatePosEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }),\n    useEventListener(target, \"pointermove\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (!isPointerDown.value)\n        return;\n      const { clientX: x, clientY: y } = e;\n      updatePosEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }),\n    useEventListener(target, \"pointerup\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (isSwiping.value)\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n      isPointerDown.value = false;\n      isSwiping.value = false;\n    })\n  ];\n  tryOnMounted(() => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\n    if (disableTextSelect) {\n      (_d = (_c = targetRef.value) == null ? void 0 : _c.style) == null ? void 0 : _d.setProperty(\"-webkit-user-select\", \"none\");\n      (_f = (_e = targetRef.value) == null ? void 0 : _e.style) == null ? void 0 : _f.setProperty(\"-ms-user-select\", \"none\");\n      (_h = (_g = targetRef.value) == null ? void 0 : _g.style) == null ? void 0 : _h.setProperty(\"user-select\", \"none\");\n    }\n  });\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping: readonly(isSwiping),\n    direction: readonly(direction),\n    posStart: readonly(posStart),\n    posEnd: readonly(posEnd),\n    distanceX,\n    distanceY,\n    stop\n  };\n}\n\nfunction usePreferredColorScheme(options) {\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n  return computed(() => {\n    if (isDark.value)\n      return \"dark\";\n    if (isLight.value)\n      return \"light\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredContrast(options) {\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\n  return computed(() => {\n    if (isMore.value)\n      return \"more\";\n    if (isLess.value)\n      return \"less\";\n    if (isCustom.value)\n      return \"custom\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredLanguages(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref([\"en\"]);\n  const navigator = window.navigator;\n  const value = ref(navigator.languages);\n  useEventListener(window, \"languagechange\", () => {\n    value.value = navigator.languages;\n  });\n  return value;\n}\n\nfunction usePreferredReducedMotion(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePrevious(value, initialValue) {\n  const previous = shallowRef(initialValue);\n  watch(\n    toRef(value),\n    (_, oldValue) => {\n      previous.value = oldValue;\n    },\n    { flush: \"sync\" }\n  );\n  return readonly(previous);\n}\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = ref(\"\");\n  const right = ref(\"\");\n  const bottom = ref(\"\");\n  const left = ref(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update));\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\n  const {\n    immediate = true,\n    manual = false,\n    type = \"text/javascript\",\n    async = true,\n    crossOrigin,\n    referrerPolicy,\n    noModule,\n    defer,\n    document = defaultDocument,\n    attrs = {}\n  } = options;\n  const scriptTag = ref(null);\n  let _promise = null;\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\n    const resolveWithElement = (el2) => {\n      scriptTag.value = el2;\n      resolve(el2);\n      return el2;\n    };\n    if (!document) {\n      resolve(false);\n      return;\n    }\n    let shouldAppend = false;\n    let el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (!el) {\n      el = document.createElement(\"script\");\n      el.type = type;\n      el.async = async;\n      el.src = toValue(src);\n      if (defer)\n        el.defer = defer;\n      if (crossOrigin)\n        el.crossOrigin = crossOrigin;\n      if (noModule)\n        el.noModule = noModule;\n      if (referrerPolicy)\n        el.referrerPolicy = referrerPolicy;\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\n      shouldAppend = true;\n    } else if (el.hasAttribute(\"data-loaded\")) {\n      resolveWithElement(el);\n    }\n    el.addEventListener(\"error\", (event) => reject(event));\n    el.addEventListener(\"abort\", (event) => reject(event));\n    el.addEventListener(\"load\", () => {\n      el.setAttribute(\"data-loaded\", \"true\");\n      onLoaded(el);\n      resolveWithElement(el);\n    });\n    if (shouldAppend)\n      el = document.head.appendChild(el);\n    if (!waitForScriptLoad)\n      resolveWithElement(el);\n  });\n  const load = (waitForScriptLoad = true) => {\n    if (!_promise)\n      _promise = loadScript(waitForScriptLoad);\n    return _promise;\n  };\n  const unload = () => {\n    if (!document)\n      return;\n    _promise = null;\n    if (scriptTag.value)\n      scriptTag.value = null;\n    const el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (el)\n      document.head.removeChild(el);\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnUnmounted(unload);\n  return { scriptTag, load, unload };\n}\n\nfunction checkOverflowScroll(ele) {\n  const style = window.getComputedStyle(ele);\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientWidth < ele.scrollWidth || style.overflowY === \"auto\" && ele.clientHeight < ele.scrollHeight) {\n    return true;\n  } else {\n    const parent = ele.parentNode;\n    if (!parent || parent.tagName === \"BODY\")\n      return false;\n    return checkOverflowScroll(parent);\n  }\n}\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  const _target = e.target;\n  if (checkOverflowScroll(_target))\n    return false;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nconst elInitialOverflow = /* @__PURE__ */ new WeakMap();\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = ref(initialState);\n  let stopTouchMoveListener = null;\n  let initialOverflow = \"\";\n  watch(toRef(element), (el) => {\n    const target = resolveElement(toValue(el));\n    if (target) {\n      const ele = target;\n      if (!elInitialOverflow.get(ele))\n        elInitialOverflow.set(ele, ele.style.overflow);\n      if (ele.style.overflow !== \"hidden\")\n        initialOverflow = ele.style.overflow;\n      if (ele.style.overflow === \"hidden\")\n        return isLocked.value = true;\n      if (isLocked.value)\n        return ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(\n        el,\n        \"touchmove\",\n        (e) => {\n          preventDefault(e);\n        },\n        { passive: false }\n      );\n    }\n    el.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    const el = resolveElement(toValue(element));\n    if (!el || !isLocked.value)\n      return;\n    if (isIOS)\n      stopTouchMoveListener == null ? void 0 : stopTouchMoveListener();\n    el.style.overflow = initialOverflow;\n    elInitialOverflow.delete(el);\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else unlock();\n    }\n  });\n}\n\nfunction useSessionStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\n}\n\nfunction useShare(shareOptions = {}, options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const _navigator = navigator;\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\n  const share = async (overrideOptions = {}) => {\n    if (isSupported.value) {\n      const data = {\n        ...toValue(shareOptions),\n        ...toValue(overrideOptions)\n      };\n      let granted = true;\n      if (data.files && _navigator.canShare)\n        granted = _navigator.canShare({ files: data.files });\n      if (granted)\n        return _navigator.share(data);\n    }\n  };\n  return {\n    isSupported,\n    share\n  };\n}\n\nconst defaultSortFn = (source, compareFn) => source.sort(compareFn);\nconst defaultCompare = (a, b) => a - b;\nfunction useSorted(...args) {\n  var _a, _b, _c, _d;\n  const [source] = args;\n  let compareFn = defaultCompare;\n  let options = {};\n  if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      options = args[1];\n      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;\n    } else {\n      compareFn = (_b = args[1]) != null ? _b : defaultCompare;\n    }\n  } else if (args.length > 2) {\n    compareFn = (_c = args[1]) != null ? _c : defaultCompare;\n    options = (_d = args[2]) != null ? _d : {};\n  }\n  const {\n    dirty = false,\n    sortFn = defaultSortFn\n  } = options;\n  if (!dirty)\n    return computed(() => sortFn([...toValue(source)], compareFn));\n  watchEffect(() => {\n    const result = sortFn(toValue(source), compareFn);\n    if (isRef(source))\n      source.value = result;\n    else\n      source.splice(0, source.length, ...result);\n  });\n  return source;\n}\n\nfunction useSpeechRecognition(options = {}) {\n  const {\n    interimResults = true,\n    continuous = true,\n    maxAlternatives = 1,\n    window = defaultWindow\n  } = options;\n  const lang = toRef(options.lang || \"en-US\");\n  const isListening = ref(false);\n  const isFinal = ref(false);\n  const result = ref(\"\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isListening.value) => {\n    isListening.value = value;\n  };\n  const start = () => {\n    isListening.value = true;\n  };\n  const stop = () => {\n    isListening.value = false;\n  };\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\n  const isSupported = useSupported(() => SpeechRecognition);\n  let recognition;\n  if (isSupported.value) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = continuous;\n    recognition.interimResults = interimResults;\n    recognition.lang = toValue(lang);\n    recognition.maxAlternatives = maxAlternatives;\n    recognition.onstart = () => {\n      isFinal.value = false;\n    };\n    watch(lang, (lang2) => {\n      if (recognition && !isListening.value)\n        recognition.lang = lang2;\n    });\n    recognition.onresult = (event) => {\n      const currentResult = event.results[event.resultIndex];\n      const { transcript } = currentResult[0];\n      isFinal.value = currentResult.isFinal;\n      result.value = transcript;\n      error.value = void 0;\n    };\n    recognition.onerror = (event) => {\n      error.value = event;\n    };\n    recognition.onend = () => {\n      isListening.value = false;\n      recognition.lang = toValue(lang);\n    };\n    watch(isListening, () => {\n      if (isListening.value)\n        recognition.start();\n      else\n        recognition.stop();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isListening.value = false;\n  });\n  return {\n    isSupported,\n    isListening,\n    isFinal,\n    recognition,\n    result,\n    error,\n    toggle,\n    start,\n    stop\n  };\n}\n\nfunction useSpeechSynthesis(text, options = {}) {\n  const {\n    pitch = 1,\n    rate = 1,\n    volume = 1,\n    window = defaultWindow\n  } = options;\n  const synth = window && window.speechSynthesis;\n  const isSupported = useSupported(() => synth);\n  const isPlaying = ref(false);\n  const status = ref(\"init\");\n  const spokenText = toRef(text || \"\");\n  const lang = toRef(options.lang || \"en-US\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isPlaying.value) => {\n    isPlaying.value = value;\n  };\n  const bindEventsForUtterance = (utterance2) => {\n    utterance2.lang = toValue(lang);\n    utterance2.voice = toValue(options.voice) || null;\n    utterance2.pitch = toValue(pitch);\n    utterance2.rate = toValue(rate);\n    utterance2.volume = volume;\n    utterance2.onstart = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onpause = () => {\n      isPlaying.value = false;\n      status.value = \"pause\";\n    };\n    utterance2.onresume = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onend = () => {\n      isPlaying.value = false;\n      status.value = \"end\";\n    };\n    utterance2.onerror = (event) => {\n      error.value = event;\n    };\n  };\n  const utterance = computed(() => {\n    isPlaying.value = false;\n    status.value = \"init\";\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\n    bindEventsForUtterance(newUtterance);\n    return newUtterance;\n  });\n  const speak = () => {\n    synth.cancel();\n    if (utterance)\n      synth.speak(utterance.value);\n  };\n  const stop = () => {\n    synth.cancel();\n    isPlaying.value = false;\n  };\n  if (isSupported.value) {\n    bindEventsForUtterance(utterance.value);\n    watch(lang, (lang2) => {\n      if (utterance.value && !isPlaying.value)\n        utterance.value.lang = lang2;\n    });\n    if (options.voice) {\n      watch(options.voice, () => {\n        synth.cancel();\n      });\n    }\n    watch(isPlaying, () => {\n      if (isPlaying.value)\n        synth.resume();\n      else\n        synth.pause();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isPlaying.value = false;\n  });\n  return {\n    isSupported,\n    isPlaying,\n    status,\n    utterance,\n    error,\n    stop,\n    toggle,\n    speak\n  };\n}\n\nfunction useStepper(steps, initialStep) {\n  const stepsRef = ref(steps);\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\n  const current = computed(() => at(index.value));\n  const isFirst = computed(() => index.value === 0);\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\n  const next = computed(() => stepNames.value[index.value + 1]);\n  const previous = computed(() => stepNames.value[index.value - 1]);\n  function at(index2) {\n    if (Array.isArray(stepsRef.value))\n      return stepsRef.value[index2];\n    return stepsRef.value[stepNames.value[index2]];\n  }\n  function get(step) {\n    if (!stepNames.value.includes(step))\n      return;\n    return at(stepNames.value.indexOf(step));\n  }\n  function goTo(step) {\n    if (stepNames.value.includes(step))\n      index.value = stepNames.value.indexOf(step);\n  }\n  function goToNext() {\n    if (isLast.value)\n      return;\n    index.value++;\n  }\n  function goToPrevious() {\n    if (isFirst.value)\n      return;\n    index.value--;\n  }\n  function goBackTo(step) {\n    if (isAfter(step))\n      goTo(step);\n  }\n  function isNext(step) {\n    return stepNames.value.indexOf(step) === index.value + 1;\n  }\n  function isPrevious(step) {\n    return stepNames.value.indexOf(step) === index.value - 1;\n  }\n  function isCurrent(step) {\n    return stepNames.value.indexOf(step) === index.value;\n  }\n  function isBefore(step) {\n    return index.value < stepNames.value.indexOf(step);\n  }\n  function isAfter(step) {\n    return index.value > stepNames.value.indexOf(step);\n  }\n  return {\n    steps: stepsRef,\n    stepNames,\n    index,\n    current,\n    next,\n    previous,\n    isFirst,\n    isLast,\n    at,\n    get,\n    goTo,\n    goToNext,\n    goToPrevious,\n    goBackTo,\n    isNext,\n    isPrevious,\n    isCurrent,\n    isBefore,\n    isAfter\n  };\n}\n\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const rawInit = toValue(initialValue);\n  const type = guessSerializerType(rawInit);\n  const data = (shallow ? shallowRef : ref)(initialValue);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorageAsync\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  async function read(event) {\n    if (!storage || event && event.key !== key)\n      return;\n    try {\n      const rawValue = event ? event.newValue : await storage.getItem(key);\n      if (rawValue == null) {\n        data.value = rawInit;\n        if (writeDefaults && rawInit !== null)\n          await storage.setItem(key, await serializer.write(rawInit));\n      } else if (mergeDefaults) {\n        const value = await serializer.read(rawValue);\n        if (typeof mergeDefaults === \"function\")\n          data.value = mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          data.value = { ...rawInit, ...value };\n        else data.value = value;\n      } else {\n        data.value = await serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  read();\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", (e) => Promise.resolve().then(() => read(e)));\n  if (storage) {\n    watchWithFilter(\n      data,\n      async () => {\n        try {\n          if (data.value == null)\n            await storage.removeItem(key);\n          else\n            await storage.setItem(key, await serializer.write(data.value));\n        } catch (e) {\n          onError(e);\n        }\n      },\n      {\n        flush,\n        deep,\n        eventFilter\n      }\n    );\n  }\n  return data;\n}\n\nlet _id = 0;\nfunction useStyleTag(css, options = {}) {\n  const isLoaded = ref(false);\n  const {\n    document = defaultDocument,\n    immediate = true,\n    manual = false,\n    id = `vueuse_styletag_${++_id}`\n  } = options;\n  const cssRef = ref(css);\n  let stop = () => {\n  };\n  const load = () => {\n    if (!document)\n      return;\n    const el = document.getElementById(id) || document.createElement(\"style\");\n    if (!el.isConnected) {\n      el.id = id;\n      if (options.media)\n        el.media = options.media;\n      document.head.appendChild(el);\n    }\n    if (isLoaded.value)\n      return;\n    stop = watch(\n      cssRef,\n      (value) => {\n        el.textContent = value;\n      },\n      { immediate: true }\n    );\n    isLoaded.value = true;\n  };\n  const unload = () => {\n    if (!document || !isLoaded.value)\n      return;\n    stop();\n    document.head.removeChild(document.getElementById(id));\n    isLoaded.value = false;\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnScopeDispose(unload);\n  return {\n    id,\n    css: cssRef,\n    unload,\n    load,\n    isLoaded: readonly(isLoaded)\n  };\n}\n\nfunction useSwipe(target, options = {}) {\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    passive = true,\n    window = defaultWindow\n  } = options;\n  const coordsStart = reactive({ x: 0, y: 0 });\n  const coordsEnd = reactive({ x: 0, y: 0 });\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return diffY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x;\n    coordsStart.y = y;\n  };\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x;\n    coordsEnd.y = y;\n  };\n  let listenerOptions;\n  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);\n  if (!passive)\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\n  else\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\n  const onTouchEnd = (e) => {\n    if (isSwiping.value)\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n    isSwiping.value = false;\n  };\n  const stops = [\n    useEventListener(target, \"touchstart\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsStart(x, y);\n      updateCoordsEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchmove\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsEnd(x, y);\n      if (listenerOptions.capture && !listenerOptions.passive && Math.abs(diffX.value) > Math.abs(diffY.value))\n        e.preventDefault();\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, [\"touchend\", \"touchcancel\"], onTouchEnd, listenerOptions)\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isPassiveEventSupported,\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop\n  };\n}\nfunction checkPassiveEventSupport(document) {\n  if (!document)\n    return false;\n  let supportsPassive = false;\n  const optionsBlock = {\n    get passive() {\n      supportsPassive = true;\n      return false;\n    }\n  };\n  document.addEventListener(\"x\", noop, optionsBlock);\n  document.removeEventListener(\"x\", noop);\n  return supportsPassive;\n}\n\nfunction useTemplateRefsList() {\n  const refs = ref([]);\n  refs.value.set = (el) => {\n    if (el)\n      refs.value.push(el);\n  };\n  onBeforeUpdate(() => {\n    refs.value.length = 0;\n  });\n  return refs;\n}\n\nfunction useTextDirection(options = {}) {\n  const {\n    document = defaultDocument,\n    selector = \"html\",\n    observe = false,\n    initialValue = \"ltr\"\n  } = options;\n  function getValue() {\n    var _a, _b;\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\n  }\n  const dir = ref(getValue());\n  tryOnMounted(() => dir.value = getValue());\n  if (observe && document) {\n    useMutationObserver(\n      document.querySelector(selector),\n      () => dir.value = getValue(),\n      { attributes: true }\n    );\n  }\n  return computed({\n    get() {\n      return dir.value;\n    },\n    set(v) {\n      var _a, _b;\n      dir.value = v;\n      if (!document)\n        return;\n      if (dir.value)\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\n      else\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\n    }\n  });\n}\n\nfunction getRangesFromSelection(selection) {\n  var _a;\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\n  return Array.from({ length: rangeCount }, (_, i) => selection.getRangeAt(i));\n}\nfunction useTextSelection(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const selection = ref(null);\n  const text = computed(() => {\n    var _a, _b;\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\n  });\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\n  function onSelectionChange() {\n    selection.value = null;\n    if (window)\n      selection.value = window.getSelection();\n  }\n  if (window)\n    useEventListener(window.document, \"selectionchange\", onSelectionChange);\n  return {\n    text,\n    rects,\n    ranges,\n    selection\n  };\n}\n\nfunction useTextareaAutosize(options) {\n  var _a;\n  const textarea = ref(options == null ? void 0 : options.element);\n  const input = ref(options == null ? void 0 : options.input);\n  const styleProp = (_a = options == null ? void 0 : options.styleProp) != null ? _a : \"height\";\n  const textareaScrollHeight = ref(1);\n  const textareaOldWidth = ref(0);\n  function triggerResize() {\n    var _a2;\n    if (!textarea.value)\n      return;\n    let height = \"\";\n    textarea.value.style[styleProp] = \"1px\";\n    textareaScrollHeight.value = (_a2 = textarea.value) == null ? void 0 : _a2.scrollHeight;\n    const _styleTarget = toValue(options == null ? void 0 : options.styleTarget);\n    if (_styleTarget)\n      _styleTarget.style[styleProp] = `${textareaScrollHeight.value}px`;\n    else\n      height = `${textareaScrollHeight.value}px`;\n    textarea.value.style[styleProp] = height;\n  }\n  watch([input, textarea], () => nextTick(triggerResize), { immediate: true });\n  watch(textareaScrollHeight, () => {\n    var _a2;\n    return (_a2 = options == null ? void 0 : options.onResize) == null ? void 0 : _a2.call(options);\n  });\n  useResizeObserver(textarea, ([{ contentRect }]) => {\n    if (textareaOldWidth.value === contentRect.width)\n      return;\n    textareaOldWidth.value = contentRect.width;\n    triggerResize();\n  });\n  if (options == null ? void 0 : options.watch)\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\n  return {\n    textarea,\n    input,\n    triggerResize\n  };\n}\n\nfunction useThrottledRefHistory(source, options = {}) {\n  const { throttle = 200, trailing = true } = options;\n  const filter = throttleFilter(throttle, trailing);\n  const history = useRefHistory(source, { ...options, eventFilter: filter });\n  return {\n    ...history\n  };\n}\n\nconst DEFAULT_UNITS = [\n  { max: 6e4, value: 1e3, name: \"second\" },\n  { max: 276e4, value: 6e4, name: \"minute\" },\n  { max: 72e6, value: 36e5, name: \"hour\" },\n  { max: 5184e5, value: 864e5, name: \"day\" },\n  { max: 24192e5, value: 6048e5, name: \"week\" },\n  { max: 28512e6, value: 2592e6, name: \"month\" },\n  { max: Number.POSITIVE_INFINITY, value: 31536e6, name: \"year\" }\n];\nconst DEFAULT_MESSAGES = {\n  justNow: \"just now\",\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`,\n  invalid: \"\"\n};\nfunction DEFAULT_FORMATTER(date) {\n  return date.toISOString().slice(0, 10);\n}\nfunction useTimeAgo(time, options = {}) {\n  const {\n    controls: exposeControls = false,\n    updateInterval = 3e4\n  } = options;\n  const { now, ...controls } = useNow({ interval: updateInterval, controls: true });\n  const timeAgo = computed(() => formatTimeAgo(new Date(toValue(time)), options, toValue(now)));\n  if (exposeControls) {\n    return {\n      timeAgo,\n      ...controls\n    };\n  } else {\n    return timeAgo;\n  }\n}\nfunction formatTimeAgo(from, options = {}, now = Date.now()) {\n  var _a;\n  const {\n    max,\n    messages = DEFAULT_MESSAGES,\n    fullDateFormatter = DEFAULT_FORMATTER,\n    units = DEFAULT_UNITS,\n    showSecond = false,\n    rounding = \"round\"\n  } = options;\n  const roundFn = typeof rounding === \"number\" ? (n) => +n.toFixed(rounding) : Math[rounding];\n  const diff = +now - +from;\n  const absDiff = Math.abs(diff);\n  function getValue(diff2, unit) {\n    return roundFn(Math.abs(diff2) / unit.value);\n  }\n  function format(diff2, unit) {\n    const val = getValue(diff2, unit);\n    const past = diff2 > 0;\n    const str = applyFormat(unit.name, val, past);\n    return applyFormat(past ? \"past\" : \"future\", str, past);\n  }\n  function applyFormat(name, val, isPast) {\n    const formatter = messages[name];\n    if (typeof formatter === \"function\")\n      return formatter(val, isPast);\n    return formatter.replace(\"{0}\", val.toString());\n  }\n  if (absDiff < 6e4 && !showSecond)\n    return messages.justNow;\n  if (typeof max === \"number\" && absDiff > max)\n    return fullDateFormatter(new Date(from));\n  if (typeof max === \"string\") {\n    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;\n    if (unitMax && absDiff > unitMax)\n      return fullDateFormatter(new Date(from));\n  }\n  for (const [idx, unit] of units.entries()) {\n    const val = getValue(diff, unit);\n    if (val <= 0 && units[idx - 1])\n      return format(diff, units[idx - 1]);\n    if (absDiff < unit.max)\n      return format(diff, unit);\n  }\n  return messages.invalid;\n}\n\nfunction useTimeoutPoll(fn, interval, timeoutPollOptions) {\n  const { start } = useTimeoutFn(loop, interval, { immediate: false });\n  const isActive = ref(false);\n  async function loop() {\n    if (!isActive.value)\n      return;\n    await fn();\n    start();\n  }\n  function resume() {\n    if (!isActive.value) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n  }\n  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nfunction useTimestamp(options = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval = \"requestAnimationFrame\",\n    callback\n  } = options;\n  const ts = ref(timestamp() + offset);\n  const update = () => ts.value = timestamp() + offset;\n  const cb = callback ? () => {\n    update();\n    callback(ts.value);\n  } : update;\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  if (exposeControls) {\n    return {\n      timestamp: ts,\n      ...controls\n    };\n  } else {\n    return ts;\n  }\n}\n\nfunction useTitle(newTitle = null, options = {}) {\n  var _a, _b, _c;\n  const {\n    document = defaultDocument,\n    restoreOnUnmount = (t) => t\n  } = options;\n  const originalTitle = (_a = document == null ? void 0 : document.title) != null ? _a : \"\";\n  const title = toRef((_b = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _b : null);\n  const isReadonly = newTitle && typeof newTitle === \"function\";\n  function format(t) {\n    if (!(\"titleTemplate\" in options))\n      return t;\n    const template = options.titleTemplate || \"%s\";\n    return typeof template === \"function\" ? template(t) : toValue(template).replace(/%s/g, t);\n  }\n  watch(\n    title,\n    (t, o) => {\n      if (t !== o && document)\n        document.title = format(typeof t === \"string\" ? t : \"\");\n    },\n    { immediate: true }\n  );\n  if (options.observe && !options.titleTemplate && document && !isReadonly) {\n    useMutationObserver(\n      (_c = document.head) == null ? void 0 : _c.querySelector(\"title\"),\n      () => {\n        if (document && document.title !== title.value)\n          title.value = format(document.title);\n      },\n      { childList: true }\n    );\n  }\n  tryOnBeforeUnmount(() => {\n    if (restoreOnUnmount) {\n      const restoredTitle = restoreOnUnmount(originalTitle, title.value || \"\");\n      if (restoredTitle != null && document)\n        document.title = restoredTitle;\n    }\n  });\n  return title;\n}\n\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\nconst TransitionPresets = /* @__PURE__ */ Object.assign({}, { linear: identity }, _TransitionPresets);\nfunction createEasingFunction([p0, p1, p2, p3]) {\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\n  const c = (a1) => 3 * a1;\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n  const getTforX = (x) => {\n    let aGuessT = x;\n    for (let i = 0; i < 4; ++i) {\n      const currentSlope = getSlope(aGuessT, p0, p2);\n      if (currentSlope === 0)\n        return aGuessT;\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\n}\nfunction lerp(a, b, alpha) {\n  return a + alpha * (b - a);\n}\nfunction toVec(t) {\n  return (typeof t === \"number\" ? [t] : t) || [];\n}\nfunction executeTransition(source, from, to, options = {}) {\n  var _a, _b;\n  const fromVal = toValue(from);\n  const toVal = toValue(to);\n  const v1 = toVec(fromVal);\n  const v2 = toVec(toVal);\n  const duration = (_a = toValue(options.duration)) != null ? _a : 1e3;\n  const startedAt = Date.now();\n  const endAt = Date.now() + duration;\n  const trans = typeof options.transition === \"function\" ? options.transition : (_b = toValue(options.transition)) != null ? _b : identity;\n  const ease = typeof trans === \"function\" ? trans : createEasingFunction(trans);\n  return new Promise((resolve) => {\n    source.value = fromVal;\n    const tick = () => {\n      var _a2;\n      if ((_a2 = options.abort) == null ? void 0 : _a2.call(options)) {\n        resolve();\n        return;\n      }\n      const now = Date.now();\n      const alpha = ease((now - startedAt) / duration);\n      const arr = toVec(source.value).map((n, i) => lerp(v1[i], v2[i], alpha));\n      if (Array.isArray(source.value))\n        source.value = arr.map((n, i) => {\n          var _a3, _b2;\n          return lerp((_a3 = v1[i]) != null ? _a3 : 0, (_b2 = v2[i]) != null ? _b2 : 0, alpha);\n        });\n      else if (typeof source.value === \"number\")\n        source.value = arr[0];\n      if (now < endAt) {\n        requestAnimationFrame(tick);\n      } else {\n        source.value = toVal;\n        resolve();\n      }\n    };\n    tick();\n  });\n}\nfunction useTransition(source, options = {}) {\n  let currentId = 0;\n  const sourceVal = () => {\n    const v = toValue(source);\n    return typeof v === \"number\" ? v : v.map(toValue);\n  };\n  const outputRef = ref(sourceVal());\n  watch(sourceVal, async (to) => {\n    var _a, _b;\n    if (toValue(options.disabled))\n      return;\n    const id = ++currentId;\n    if (options.delay)\n      await promiseTimeout(toValue(options.delay));\n    if (id !== currentId)\n      return;\n    const toVal = Array.isArray(to) ? to.map(toValue) : toValue(to);\n    (_a = options.onStarted) == null ? void 0 : _a.call(options);\n    await executeTransition(outputRef, outputRef.value, toVal, {\n      ...options,\n      abort: () => {\n        var _a2;\n        return id !== currentId || ((_a2 = options.abort) == null ? void 0 : _a2.call(options));\n      }\n    });\n    (_b = options.onFinished) == null ? void 0 : _b.call(options);\n  }, { deep: true });\n  watch(() => toValue(options.disabled), (disabled) => {\n    if (disabled) {\n      currentId++;\n      outputRef.value = sourceVal();\n    }\n  });\n  tryOnScopeDispose(() => {\n    currentId++;\n  });\n  return computed(() => toValue(options.disabled) ? sourceVal() : outputRef.value);\n}\n\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\n  const {\n    initialValue = {},\n    removeNullishValues = true,\n    removeFalsyValues = false,\n    write: enableWrite = true,\n    window = defaultWindow\n  } = options;\n  if (!window)\n    return reactive(initialValue);\n  const state = reactive({});\n  function getRawParams() {\n    if (mode === \"history\") {\n      return window.location.search || \"\";\n    } else if (mode === \"hash\") {\n      const hash = window.location.hash || \"\";\n      const index = hash.indexOf(\"?\");\n      return index > 0 ? hash.slice(index) : \"\";\n    } else {\n      return (window.location.hash || \"\").replace(/^#/, \"\");\n    }\n  }\n  function constructQuery(params) {\n    const stringified = params.toString();\n    if (mode === \"history\")\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\n    if (mode === \"hash-params\")\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\n    const hash = window.location.hash || \"#\";\n    const index = hash.indexOf(\"?\");\n    if (index > 0)\n      return `${window.location.search || \"\"}${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\n    return `${window.location.search || \"\"}${hash}${stringified ? `?${stringified}` : \"\"}`;\n  }\n  function read() {\n    return new URLSearchParams(getRawParams());\n  }\n  function updateState(params) {\n    const unusedKeys = new Set(Object.keys(state));\n    for (const key of params.keys()) {\n      const paramsForKey = params.getAll(key);\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\n      unusedKeys.delete(key);\n    }\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\n  }\n  const { pause, resume } = pausableWatch(\n    state,\n    () => {\n      const params = new URLSearchParams(\"\");\n      Object.keys(state).forEach((key) => {\n        const mapEntry = state[key];\n        if (Array.isArray(mapEntry))\n          mapEntry.forEach((value) => params.append(key, value));\n        else if (removeNullishValues && mapEntry == null)\n          params.delete(key);\n        else if (removeFalsyValues && !mapEntry)\n          params.delete(key);\n        else\n          params.set(key, mapEntry);\n      });\n      write(params);\n    },\n    { deep: true }\n  );\n  function write(params, shouldUpdate) {\n    pause();\n    if (shouldUpdate)\n      updateState(params);\n    window.history.replaceState(\n      window.history.state,\n      window.document.title,\n      window.location.pathname + constructQuery(params)\n    );\n    resume();\n  }\n  function onChanged() {\n    if (!enableWrite)\n      return;\n    write(read(), true);\n  }\n  useEventListener(window, \"popstate\", onChanged, false);\n  if (mode !== \"history\")\n    useEventListener(window, \"hashchange\", onChanged, false);\n  const initial = read();\n  if (initial.keys().next().value)\n    updateState(initial);\n  else\n    Object.assign(state, initialValue);\n  return state;\n}\n\nfunction useUserMedia(options = {}) {\n  var _a, _b;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);\n  const constraints = ref(options.constraints);\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\n  });\n  const stream = shallowRef();\n  function getDeviceOptions(type) {\n    switch (type) {\n      case \"video\": {\n        if (constraints.value)\n          return constraints.value.video || false;\n        break;\n      }\n      case \"audio\": {\n        if (constraints.value)\n          return constraints.value.audio || false;\n        break;\n      }\n    }\n  }\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getUserMedia({\n      video: getDeviceOptions(\"video\"),\n      audio: getDeviceOptions(\"audio\")\n    });\n    return stream.value;\n  }\n  function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  async function restart() {\n    _stop();\n    return await start();\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else _stop();\n    },\n    { immediate: true }\n  );\n  watch(\n    constraints,\n    () => {\n      if (autoSwitch.value && stream.value)\n        restart();\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(() => {\n    stop();\n  });\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    restart,\n    constraints,\n    enabled,\n    autoSwitch\n  };\n}\n\nfunction useVModel(props, key, emit, options = {}) {\n  var _a, _b, _c;\n  const {\n    clone = false,\n    passive = false,\n    eventName,\n    deep = false,\n    defaultValue,\n    shouldEmit\n  } = options;\n  const vm = getCurrentInstance();\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\n  let event = eventName;\n  if (!key) {\n    key = \"modelValue\";\n  }\n  event = event || `update:${key.toString()}`;\n  const cloneFn = (val) => !clone ? val : typeof clone === \"function\" ? clone(val) : cloneFnJSON(val);\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\n  const triggerEmit = (value) => {\n    if (shouldEmit) {\n      if (shouldEmit(value))\n        _emit(event, value);\n    } else {\n      _emit(event, value);\n    }\n  };\n  if (passive) {\n    const initialValue = getValue();\n    const proxy = ref(initialValue);\n    let isUpdating = false;\n    watch(\n      () => props[key],\n      (v) => {\n        if (!isUpdating) {\n          isUpdating = true;\n          proxy.value = cloneFn(v);\n          nextTick(() => isUpdating = false);\n        }\n      }\n    );\n    watch(\n      proxy,\n      (v) => {\n        if (!isUpdating && (v !== props[key] || deep))\n          triggerEmit(v);\n      },\n      { deep }\n    );\n    return proxy;\n  } else {\n    return computed({\n      get() {\n        return getValue();\n      },\n      set(value) {\n        triggerEmit(value);\n      }\n    });\n  }\n}\n\nfunction useVModels(props, emit, options = {}) {\n  const ret = {};\n  for (const key in props) {\n    ret[key] = useVModel(\n      props,\n      key,\n      emit,\n      options\n    );\n  }\n  return ret;\n}\n\nfunction useVibrate(options) {\n  const {\n    pattern = [],\n    interval = 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\n  const patternRef = toRef(pattern);\n  let intervalControls;\n  const vibrate = (pattern2 = patternRef.value) => {\n    if (isSupported.value)\n      navigator.vibrate(pattern2);\n  };\n  const stop = () => {\n    if (isSupported.value)\n      navigator.vibrate(0);\n    intervalControls == null ? void 0 : intervalControls.pause();\n  };\n  if (interval > 0) {\n    intervalControls = useIntervalFn(\n      vibrate,\n      interval,\n      {\n        immediate: false,\n        immediateCallback: false\n      }\n    );\n  }\n  return {\n    isSupported,\n    pattern,\n    intervalControls,\n    vibrate,\n    stop\n  };\n}\n\nfunction useVirtualList(list, options) {\n  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = \"itemHeight\" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);\n  return {\n    list: currentList,\n    scrollTo,\n    containerProps: {\n      ref: containerRef,\n      onScroll: () => {\n        calculateRange();\n      },\n      style: containerStyle\n    },\n    wrapperProps\n  };\n}\nfunction useVirtualListResources(list) {\n  const containerRef = ref(null);\n  const size = useElementSize(containerRef);\n  const currentList = ref([]);\n  const source = shallowRef(list);\n  const state = ref({ start: 0, end: 10 });\n  return { state, source, currentList, size, containerRef };\n}\nfunction createGetViewCapacity(state, source, itemSize) {\n  return (containerSize) => {\n    if (typeof itemSize === \"number\")\n      return Math.ceil(containerSize / itemSize);\n    const { start = 0 } = state.value;\n    let sum = 0;\n    let capacity = 0;\n    for (let i = start; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      capacity = i;\n      if (sum > containerSize)\n        break;\n    }\n    return capacity - start;\n  };\n}\nfunction createGetOffset(source, itemSize) {\n  return (scrollDirection) => {\n    if (typeof itemSize === \"number\")\n      return Math.floor(scrollDirection / itemSize) + 1;\n    let sum = 0;\n    let offset = 0;\n    for (let i = 0; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      if (sum >= scrollDirection) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n}\nfunction createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {\n  return () => {\n    const element = containerRef.value;\n    if (element) {\n      const offset = getOffset(type === \"vertical\" ? element.scrollTop : element.scrollLeft);\n      const viewCapacity = getViewCapacity(type === \"vertical\" ? element.clientHeight : element.clientWidth);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      state.value = {\n        start: from < 0 ? 0 : from,\n        end: to > source.value.length ? source.value.length : to\n      };\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\n        data: ele,\n        index: index + state.value.start\n      }));\n    }\n  };\n}\nfunction createGetDistance(itemSize, source) {\n  return (index) => {\n    if (typeof itemSize === \"number\") {\n      const size2 = index * itemSize;\n      return size2;\n    }\n    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);\n    return size;\n  };\n}\nfunction useWatchForSizes(size, list, containerRef, calculateRange) {\n  watch([size.width, size.height, list, containerRef], () => {\n    calculateRange();\n  });\n}\nfunction createComputedTotalSize(itemSize, source) {\n  return computed(() => {\n    if (typeof itemSize === \"number\")\n      return source.value.length * itemSize;\n    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);\n  });\n}\nconst scrollToDictionaryForElementScrollKey = {\n  horizontal: \"scrollLeft\",\n  vertical: \"scrollTop\"\n};\nfunction createScrollTo(type, calculateRange, getDistance, containerRef) {\n  return (index) => {\n    if (containerRef.value) {\n      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);\n      calculateRange();\n    }\n  };\n}\nfunction useHorizontalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowX: \"auto\" };\n  const { itemWidth, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);\n  const getOffset = createGetOffset(source, itemWidth);\n  const calculateRange = createCalculateRange(\"horizontal\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceLeft = createGetDistance(itemWidth, source);\n  const offsetLeft = computed(() => getDistanceLeft(state.value.start));\n  const totalWidth = createComputedTotalSize(itemWidth, source);\n  useWatchForSizes(size, list, containerRef, calculateRange);\n  const scrollTo = createScrollTo(\"horizontal\", calculateRange, getDistanceLeft, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        height: \"100%\",\n        width: `${totalWidth.value - offsetLeft.value}px`,\n        marginLeft: `${offsetLeft.value}px`,\n        display: \"flex\"\n      }\n    };\n  });\n  return {\n    scrollTo,\n    calculateRange,\n    wrapperProps,\n    containerStyle,\n    currentList,\n    containerRef\n  };\n}\nfunction useVerticalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowY: \"auto\" };\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);\n  const getOffset = createGetOffset(source, itemHeight);\n  const calculateRange = createCalculateRange(\"vertical\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceTop = createGetDistance(itemHeight, source);\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\n  const totalHeight = createComputedTotalSize(itemHeight, source);\n  useWatchForSizes(size, list, containerRef, calculateRange);\n  const scrollTo = createScrollTo(\"vertical\", calculateRange, getDistanceTop, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        width: \"100%\",\n        height: `${totalHeight.value - offsetTop.value}px`,\n        marginTop: `${offsetTop.value}px`\n      }\n    };\n  });\n  return {\n    calculateRange,\n    scrollTo,\n    containerStyle,\n    wrapperProps,\n    currentList,\n    containerRef\n  };\n}\n\nfunction useWakeLock(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    document = defaultDocument\n  } = options;\n  const requestedType = ref(false);\n  const sentinel = shallowRef(null);\n  const documentVisibility = useDocumentVisibility({ document });\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\n  const isActive = computed(() => !!sentinel.value && documentVisibility.value === \"visible\");\n  if (isSupported.value) {\n    useEventListener(sentinel, \"release\", () => {\n      var _a, _b;\n      requestedType.value = (_b = (_a = sentinel.value) == null ? void 0 : _a.type) != null ? _b : false;\n    });\n    whenever(\n      () => documentVisibility.value === \"visible\" && (document == null ? void 0 : document.visibilityState) === \"visible\" && requestedType.value,\n      (type) => {\n        requestedType.value = false;\n        forceRequest(type);\n      }\n    );\n  }\n  async function forceRequest(type) {\n    var _a;\n    await ((_a = sentinel.value) == null ? void 0 : _a.release());\n    sentinel.value = isSupported.value ? await navigator.wakeLock.request(type) : null;\n  }\n  async function request(type) {\n    if (documentVisibility.value === \"visible\")\n      await forceRequest(type);\n    else\n      requestedType.value = type;\n  }\n  async function release() {\n    requestedType.value = false;\n    const s = sentinel.value;\n    sentinel.value = null;\n    await (s == null ? void 0 : s.release());\n  }\n  return {\n    sentinel,\n    isSupported,\n    isActive,\n    request,\n    forceRequest,\n    release\n  };\n}\n\nfunction useWebNotification(options = {}) {\n  const {\n    window = defaultWindow,\n    requestPermissions: _requestForPermissions = true\n  } = options;\n  const defaultWebNotificationOptions = options;\n  const isSupported = useSupported(() => {\n    if (!window || !(\"Notification\" in window))\n      return false;\n    try {\n      new Notification(\"\");\n    } catch (e) {\n      return false;\n    }\n    return true;\n  });\n  const permissionGranted = ref(isSupported.value && \"permission\" in Notification && Notification.permission === \"granted\");\n  const notification = ref(null);\n  const ensurePermissions = async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionGranted.value && Notification.permission !== \"denied\") {\n      const result = await Notification.requestPermission();\n      if (result === \"granted\")\n        permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  };\n  const { on: onClick, trigger: clickTrigger } = createEventHook();\n  const { on: onShow, trigger: showTrigger } = createEventHook();\n  const { on: onError, trigger: errorTrigger } = createEventHook();\n  const { on: onClose, trigger: closeTrigger } = createEventHook();\n  const show = async (overrides) => {\n    if (!isSupported.value || !permissionGranted.value)\n      return;\n    const options2 = Object.assign({}, defaultWebNotificationOptions, overrides);\n    notification.value = new Notification(options2.title || \"\", options2);\n    notification.value.onclick = clickTrigger;\n    notification.value.onshow = showTrigger;\n    notification.value.onerror = errorTrigger;\n    notification.value.onclose = closeTrigger;\n    return notification.value;\n  };\n  const close = () => {\n    if (notification.value)\n      notification.value.close();\n    notification.value = null;\n  };\n  if (_requestForPermissions)\n    tryOnMounted(ensurePermissions);\n  tryOnScopeDispose(close);\n  if (isSupported.value && window) {\n    const document = window.document;\n    useEventListener(document, \"visibilitychange\", (e) => {\n      e.preventDefault();\n      if (document.visibilityState === \"visible\") {\n        close();\n      }\n    });\n  }\n  return {\n    isSupported,\n    notification,\n    ensurePermissions,\n    permissionGranted,\n    show,\n    close,\n    onClick,\n    onShow,\n    onError,\n    onClose\n  };\n}\n\nconst DEFAULT_PING_MESSAGE = \"ping\";\nfunction resolveNestedOptions(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useWebSocket(url, options = {}) {\n  const {\n    onConnected,\n    onDisconnected,\n    onError,\n    onMessage,\n    immediate = true,\n    autoClose = true,\n    protocols = []\n  } = options;\n  const data = ref(null);\n  const status = ref(\"CLOSED\");\n  const wsRef = ref();\n  const urlRef = toRef(url);\n  let heartbeatPause;\n  let heartbeatResume;\n  let explicitlyClosed = false;\n  let retried = 0;\n  let bufferedData = [];\n  let pongTimeoutWait;\n  const _sendBuffer = () => {\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\n      for (const buffer of bufferedData)\n        wsRef.value.send(buffer);\n      bufferedData = [];\n    }\n  };\n  const resetHeartbeat = () => {\n    clearTimeout(pongTimeoutWait);\n    pongTimeoutWait = void 0;\n  };\n  const close = (code = 1e3, reason) => {\n    if (!isClient || !wsRef.value)\n      return;\n    explicitlyClosed = true;\n    resetHeartbeat();\n    heartbeatPause == null ? void 0 : heartbeatPause();\n    wsRef.value.close(code, reason);\n    wsRef.value = void 0;\n  };\n  const send = (data2, useBuffer = true) => {\n    if (!wsRef.value || status.value !== \"OPEN\") {\n      if (useBuffer)\n        bufferedData.push(data2);\n      return false;\n    }\n    _sendBuffer();\n    wsRef.value.send(data2);\n    return true;\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const ws = new WebSocket(urlRef.value, protocols);\n    wsRef.value = ws;\n    status.value = \"CONNECTING\";\n    ws.onopen = () => {\n      status.value = \"OPEN\";\n      retried = 0;\n      onConnected == null ? void 0 : onConnected(ws);\n      heartbeatResume == null ? void 0 : heartbeatResume();\n      _sendBuffer();\n    };\n    ws.onclose = (ev) => {\n      status.value = \"CLOSED\";\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\n      if (!explicitlyClosed && options.autoReconnect && (wsRef.value == null || ws === wsRef.value)) {\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions(options.autoReconnect);\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries)) {\n          retried += 1;\n          setTimeout(_init, delay);\n        } else if (typeof retries === \"function\" && retries()) {\n          setTimeout(_init, delay);\n        } else {\n          onFailed == null ? void 0 : onFailed();\n        }\n      }\n    };\n    ws.onerror = (e) => {\n      onError == null ? void 0 : onError(ws, e);\n    };\n    ws.onmessage = (e) => {\n      if (options.heartbeat) {\n        resetHeartbeat();\n        const {\n          message = DEFAULT_PING_MESSAGE,\n          responseMessage = message\n        } = resolveNestedOptions(options.heartbeat);\n        if (e.data === responseMessage)\n          return;\n      }\n      data.value = e.data;\n      onMessage == null ? void 0 : onMessage(ws, e);\n    };\n  };\n  if (options.heartbeat) {\n    const {\n      message = DEFAULT_PING_MESSAGE,\n      interval = 1e3,\n      pongTimeout = 1e3\n    } = resolveNestedOptions(options.heartbeat);\n    const { pause, resume } = useIntervalFn(\n      () => {\n        send(message, false);\n        if (pongTimeoutWait != null)\n          return;\n        pongTimeoutWait = setTimeout(() => {\n          close();\n          explicitlyClosed = false;\n        }, pongTimeout);\n      },\n      interval,\n      { immediate: false }\n    );\n    heartbeatPause = pause;\n    heartbeatResume = resume;\n  }\n  if (autoClose) {\n    if (isClient)\n      useEventListener(\"beforeunload\", () => close());\n    tryOnScopeDispose(close);\n  }\n  const open = () => {\n    if (!isClient && !isWorker)\n      return;\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    open();\n  watch(urlRef, open);\n  return {\n    data,\n    status,\n    close,\n    send,\n    open,\n    ws: wsRef\n  };\n}\n\nfunction useWebWorker(arg0, workerOptions, options) {\n  const {\n    window = defaultWindow\n  } = options != null ? options : {};\n  const data = ref(null);\n  const worker = shallowRef();\n  const post = (...args) => {\n    if (!worker.value)\n      return;\n    worker.value.postMessage(...args);\n  };\n  const terminate = function terminate2() {\n    if (!worker.value)\n      return;\n    worker.value.terminate();\n  };\n  if (window) {\n    if (typeof arg0 === \"string\")\n      worker.value = new Worker(arg0, workerOptions);\n    else if (typeof arg0 === \"function\")\n      worker.value = arg0();\n    else\n      worker.value = arg0;\n    worker.value.onmessage = (e) => {\n      data.value = e.data;\n    };\n    tryOnScopeDispose(() => {\n      if (worker.value)\n        worker.value.terminate();\n    });\n  }\n  return {\n    data,\n    post,\n    terminate,\n    worker\n  };\n}\n\nfunction depsParser(deps, localDeps) {\n  if (deps.length === 0 && localDeps.length === 0)\n    return \"\";\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\n  const depsFunctionString = localDeps.filter((dep) => typeof dep === \"function\").map((fn) => {\n    const str = fn.toString();\n    if (str.trim().startsWith(\"function\")) {\n      return str;\n    } else {\n      const name = fn.name;\n      return `const ${name} = ${str}`;\n    }\n  }).join(\";\");\n  const importString = `importScripts(${depsString});`;\n  return `${depsString.trim() === \"\" ? \"\" : importString} ${depsFunctionString}`;\n}\n\nfunction jobRunner(userFunc) {\n  return (e) => {\n    const userFuncArgs = e.data[0];\n    return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\n      postMessage([\"SUCCESS\", result]);\n    }).catch((error) => {\n      postMessage([\"ERROR\", error]);\n    });\n  };\n}\n\nfunction createWorkerBlobUrl(fn, deps, localDeps) {\n  const blobCode = `${depsParser(deps, localDeps)}; onmessage=(${jobRunner})(${fn})`;\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\n  const url = URL.createObjectURL(blob);\n  return url;\n}\n\nfunction useWebWorkerFn(fn, options = {}) {\n  const {\n    dependencies = [],\n    localDependencies = [],\n    timeout,\n    window = defaultWindow\n  } = options;\n  const worker = ref();\n  const workerStatus = ref(\"PENDING\");\n  const promise = ref({});\n  const timeoutId = ref();\n  const workerTerminate = (status = \"PENDING\") => {\n    if (worker.value && worker.value._url && window) {\n      worker.value.terminate();\n      URL.revokeObjectURL(worker.value._url);\n      promise.value = {};\n      worker.value = void 0;\n      window.clearTimeout(timeoutId.value);\n      workerStatus.value = status;\n    }\n  };\n  workerTerminate();\n  tryOnScopeDispose(workerTerminate);\n  const generateWorker = () => {\n    const blobUrl = createWorkerBlobUrl(fn, dependencies, localDependencies);\n    const newWorker = new Worker(blobUrl);\n    newWorker._url = blobUrl;\n    newWorker.onmessage = (e) => {\n      const { resolve = () => {\n      }, reject = () => {\n      } } = promise.value;\n      const [status, result] = e.data;\n      switch (status) {\n        case \"SUCCESS\":\n          resolve(result);\n          workerTerminate(status);\n          break;\n        default:\n          reject(result);\n          workerTerminate(\"ERROR\");\n          break;\n      }\n    };\n    newWorker.onerror = (e) => {\n      const { reject = () => {\n      } } = promise.value;\n      e.preventDefault();\n      reject(e);\n      workerTerminate(\"ERROR\");\n    };\n    if (timeout) {\n      timeoutId.value = setTimeout(\n        () => workerTerminate(\"TIMEOUT_EXPIRED\"),\n        timeout\n      );\n    }\n    return newWorker;\n  };\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\n    var _a;\n    promise.value = {\n      resolve,\n      reject\n    };\n    (_a = worker.value) == null ? void 0 : _a.postMessage([[...fnArgs]]);\n    workerStatus.value = \"RUNNING\";\n  });\n  const workerFn = (...fnArgs) => {\n    if (workerStatus.value === \"RUNNING\") {\n      console.error(\n        \"[useWebWorkerFn] You can only run one instance of the worker at a time.\"\n      );\n      return Promise.reject();\n    }\n    worker.value = generateWorker();\n    return callWorker(...fnArgs);\n  };\n  return {\n    workerFn,\n    workerStatus,\n    workerTerminate\n  };\n}\n\nfunction useWindowFocus(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref(false);\n  const focused = ref(window.document.hasFocus());\n  useEventListener(window, \"blur\", () => {\n    focused.value = false;\n  });\n  useEventListener(window, \"focus\", () => {\n    focused.value = true;\n  });\n  return focused;\n}\n\nfunction useWindowScroll(options = {}) {\n  const { window = defaultWindow, behavior = \"auto\" } = options;\n  if (!window) {\n    return {\n      x: ref(0),\n      y: ref(0)\n    };\n  }\n  const internalX = ref(window.scrollX);\n  const internalY = ref(window.scrollY);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo({ left: x2, behavior });\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo({ top: y2, behavior });\n    }\n  });\n  useEventListener(\n    window,\n    \"scroll\",\n    () => {\n      internalX.value = window.scrollX;\n      internalY.value = window.scrollY;\n    },\n    {\n      capture: false,\n      passive: true\n    }\n  );\n  return { x, y };\n}\n\nfunction useWindowSize(options = {}) {\n  const {\n    window = defaultWindow,\n    initialWidth = Number.POSITIVE_INFINITY,\n    initialHeight = Number.POSITIVE_INFINITY,\n    listenOrientation = true,\n    includeScrollbar = true,\n    type = \"inner\"\n  } = options;\n  const width = ref(initialWidth);\n  const height = ref(initialHeight);\n  const update = () => {\n    if (window) {\n      if (type === \"outer\") {\n        width.value = window.outerWidth;\n        height.value = window.outerHeight;\n      } else if (includeScrollbar) {\n        width.value = window.innerWidth;\n        height.value = window.innerHeight;\n      } else {\n        width.value = window.document.documentElement.clientWidth;\n        height.value = window.document.documentElement.clientHeight;\n      }\n    }\n  };\n  update();\n  tryOnMounted(update);\n  useEventListener(\"resize\", update, { passive: true });\n  if (listenOrientation) {\n    const matches = useMediaQuery(\"(orientation: portrait)\");\n    watch(matches, () => update());\n  }\n  return { width, height };\n}\n\nexport { DefaultMagicKeysAliasMap, StorageSerializers, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsElement, breakpointsMasterCss, breakpointsPrimeFlex, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, breakpointsVuetifyV2, breakpointsVuetifyV3, cloneFnJSON, computedAsync, computedInject, createFetch, createReusableTemplate, createTemplatePromise, createUnrefFn, customStorageEventName, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, executeTransition, formatTimeAgo, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, setSSRHandler, templateRef, unrefElement, useActiveElement, useAnimate, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useClipboardItems, useCloned, useColorMode, useConfirmDialog, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePrevious, useRafFn, useRefHistory, useResizeObserver, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\n","import { tryOnMounted, tryOnScopeDispose, toValue, unrefElement, defaultDocument } from '@vueuse/core';\nimport Sortable from 'sortablejs';\nimport { isRef, nextTick } from 'vue';\n\nfunction useSortable(el, list, options = {}) {\n  let sortable;\n  const { document = defaultDocument, ...resetOptions } = options;\n  const defaultOptions = {\n    onUpdate: (e) => {\n      moveArrayElement(list, e.oldIndex, e.newIndex, e);\n    }\n  };\n  const start = () => {\n    const target = typeof el === \"string\" ? document == null ? void 0 : document.querySelector(el) : unrefElement(el);\n    if (!target || sortable !== void 0)\n      return;\n    sortable = new Sortable(target, { ...defaultOptions, ...resetOptions });\n  };\n  const stop = () => {\n    sortable == null ? void 0 : sortable.destroy();\n    sortable = void 0;\n  };\n  const option = (name, value) => {\n    if (value !== void 0)\n      sortable == null ? void 0 : sortable.option(name, value);\n    else\n      return sortable == null ? void 0 : sortable.option(name);\n  };\n  tryOnMounted(start);\n  tryOnScopeDispose(stop);\n  return {\n    stop,\n    start,\n    option\n  };\n}\nfunction insertNodeAt(parentElement, element, index) {\n  const refElement = parentElement.children[index];\n  parentElement.insertBefore(element, refElement);\n}\nfunction removeNode(node) {\n  if (node.parentNode)\n    node.parentNode.removeChild(node);\n}\nfunction moveArrayElement(list, from, to, e = null) {\n  if (e != null) {\n    removeNode(e.item);\n    insertNodeAt(e.from, e.item, from);\n  }\n  const _valueIsRef = isRef(list);\n  const array = _valueIsRef ? [...toValue(list)] : toValue(list);\n  if (to >= 0 && to < array.length) {\n    const element = array.splice(from, 1)[0];\n    nextTick(() => {\n      array.splice(to, 0, element);\n      if (_valueIsRef)\n        list.value = array;\n    });\n  }\n}\n\nexport { insertNodeAt, moveArrayElement, removeNode, useSortable };\n","<template>\n  <Autocomplete\n    v-if=\"!sortValues?.size\"\n    :options=\"options\"\n    value=\"\"\n    :placeholder=\"'First Name'\"\n    @change=\"(e) => setSort(e)\"\n  >\n    <template #target=\"{ togglePopover }\">\n      <Button :label=\"'Sort'\" @click=\"togglePopover()\">\n        <template v-if=\"hideLabel\">\n          <SortIcon class=\"h-4\" />\n        </template>\n        <template v-if=\"!hideLabel && !sortValues?.size\" #prefix>\n          <SortIcon class=\"h-4\" />\n        </template>\n      </Button>\n    </template>\n  </Autocomplete>\n  <NestedPopover v-else>\n    <template #target=\"{ open }\">\n      <Button v-if=\"sortValues.size > 1\" :label=\"'Sort'\">\n        <template v-if=\"hideLabel\">\n          <SortIcon class=\"h-4\" />\n        </template>\n        <template v-if=\"!hideLabel\" #prefix><SortIcon class=\"h-4\" /></template>\n        <template v-if=\"sortValues?.size\" #suffix>\n          <div\n            class=\"flex h-5 w-5 items-center justify-center rounded-[5px] bg-surface-white pt-px text-xs font-medium text-ink-gray-8 shadow-sm\"\n          >\n            {{ sortValues.size }}\n          </div>\n        </template>\n      </Button>\n      <div v-else class=\"flex items-center justify-center\">\n        <Button\n          v-if=\"sortValues.size\"\n          class=\"rounded-r-none border-r\"\n          @click.stop=\"\n            () => {\n              Array.from(sortValues)[0].direction =\n                Array.from(sortValues)[0].direction == 'asc' ? 'desc' : 'asc';\n              apply();\n            }\n          \"\n        >\n          <AscendingIcon\n            v-if=\"Array.from(sortValues)[0].direction == 'asc'\"\n            class=\"h-4\"\n          />\n          <DescendingIcon v-else class=\"h-4\" />\n        </Button>\n        <Button\n          :label=\"getSortLabel()\"\n          :class=\"sortValues.size ? 'rounded-l-none' : ''\"\n        >\n          <template v-if=\"!hideLabel && !sortValues?.size\" #prefix>\n            <SortIcon class=\"h-4\" />\n          </template>\n          <template v-if=\"sortValues?.size\" #suffix>\n            <FeatherIcon\n              :name=\"open ? 'chevron-up' : 'chevron-down'\"\n              class=\"h-4 text-gray-600\"\n            />\n          </template>\n        </Button>\n      </div>\n    </template>\n    <template #body=\"{ close }\">\n      <div class=\"my-2 rounded-lg border border-gray-100 bg-white shadow-xl\">\n        <div class=\"min-w-60 p-2\">\n          <div\n            v-if=\"sortValues?.size\"\n            id=\"sort-list\"\n            class=\"mb-3 flex flex-col gap-2\"\n          >\n            <div\n              v-for=\"(sort, i) in sortValues\"\n              :key=\"sort.fieldname\"\n              class=\"flex items-center gap-1\"\n            >\n              <div class=\"handle flex h-7 w-7 items-center justify-center\">\n                <DragIcon class=\"h-4 w-4 cursor-grab text-gray-600\" />\n              </div>\n              <div class=\"flex\">\n                <Button\n                  size=\"md\"\n                  class=\"rounded-r-none border-r\"\n                  @click=\"\n                    () => {\n                      sort.direction = sort.direction == 'asc' ? 'desc' : 'asc';\n                      apply();\n                    }\n                  \"\n                >\n                  <AscendingIcon v-if=\"sort.direction == 'asc'\" class=\"h-4\" />\n                  <DescendingIcon v-else class=\"h-4\" />\n                </Button>\n                <Autocomplete\n                  class=\"!w-32\"\n                  :value=\"sort.fieldname\"\n                  :options=\"sortOptions.data\"\n                  @change=\"(e) => updateSort(e, i)\"\n                  :placeholder=\"'First Name'\"\n                >\n                  <template\n                    #target=\"{ togglePopover, selectedValue, displayValue }\"\n                  >\n                    <Button\n                      class=\"flex w-full items-center justify-between rounded-l-none !text-gray-600 text-xs\"\n                      size=\"md\"\n                      @click=\"togglePopover()\"\n                    >\n                      {{ displayValue(selectedValue) }}\n                      <template #suffix>\n                        <FeatherIcon\n                          name=\"chevron-down\"\n                          class=\"h-4 text-gray-600\"\n                        />\n                      </template>\n                    </Button>\n                  </template>\n                </Autocomplete>\n              </div>\n              <Button variant=\"ghost\" icon=\"x\" @click=\"removeSort(i)\" />\n            </div>\n          </div>\n          <div\n            v-else\n            class=\"mb-3 flex h-7 items-center px-3 text-sm text-gray-600\"\n          >\n            {{ \"Empty - Choose a field to sort by\" }}\n          </div>\n          <div class=\"flex items-center justify-between gap-2\">\n            <Autocomplete\n              :options=\"options\"\n              value=\"\"\n              :placeholder=\"'First Name'\"\n              @change=\"(e) => setSort(e)\"\n            >\n              <template #target=\"{ togglePopover }\">\n                <Button\n                  class=\"!text-gray-600\"\n                  variant=\"ghost\"\n                  @click=\"togglePopover()\"\n                  :label=\"'Add Sort'\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"plus\" class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n            </Autocomplete>\n            <Button\n              v-if=\"sortValues?.size\"\n              class=\"!text-gray-600\"\n              variant=\"ghost\"\n              :label=\"'Clear Sort'\"\n              @click=\"clearSort(close)\"\n            />\n          </div>\n        </div>\n      </div>\n    </template>\n  </NestedPopover>\n</template>\n\n<script setup>\nimport { computed, inject } from \"vue\";\nimport { NestedPopover } from \"frappe-ui\";\nimport { useSortable } from \"@vueuse/integrations/useSortable\";\nimport Autocomplete from \"@/components/frappe-ui/Autocomplete.vue\";\nimport {\n  AscendingIcon,\n  DescendingIcon,\n  SortIcon,\n  DragIcon,\n} from \"@/components/icons\";\n\nconst props = defineProps({\n  hideLabel: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emit = defineEmits([\"update\"]);\n\nconst listViewData = inject(\"listViewData\");\nconst listViewActions = inject(\"listViewActions\");\nconst { list, sortableFields: sortOptions } = listViewData;\n\nconst sortValues = computed({\n  get: () => {\n    if (!list) return new Set();\n    let allSortValues = list.params?.order_by;\n    if (!allSortValues || !sortOptions.data) return new Set();\n    // if (allSortValues.trim() === \"modified desc\") return new Set();\n\n    allSortValues = allSortValues.split(\", \").map((sortValue) => {\n      const [fieldname, direction] = sortValue.split(\" \");\n      return { fieldname, direction };\n    });\n    // allSortValues = removeDuplicateSorts();\n    return new Set(allSortValues);\n  },\n  set: (value) => {\n    list.params.order_by = convertToString(value);\n  },\n});\n\nconst options = computed(() => {\n  if (!sortOptions.data) return [];\n  if (!sortValues.value.size) return sortOptions.data;\n  const selectedOptions = [...sortValues.value].map((sort) => sort.fieldname);\n  restartSort();\n  return sortOptions.data.filter((option) => {\n    return !selectedOptions.includes(option.value);\n  });\n});\n\nconst sortSortable = useSortable(\"#sort-list\", sortValues, {\n  handle: \".handle\",\n  animation: 200,\n  onEnd: () => apply(),\n});\n\nfunction getSortLabel() {\n  if (!sortValues.value.size) return \"Sort\";\n  let values = Array.from(sortValues.value);\n  let label = sortOptions.data?.find(\n    (option) => option.value === values[0].fieldname\n  )?.label;\n\n  return label || sort.fieldname;\n}\n\nfunction setSort(data) {\n  sortValues.value.add({ fieldname: data.value, direction: \"asc\" });\n  restartSort();\n  apply();\n}\n\nfunction updateSort(data, index) {\n  let oldSort = Array.from(sortValues.value)[index];\n  sortValues.value.delete(oldSort);\n  sortValues.value.add({\n    fieldname: data.value,\n    direction: oldSort.direction,\n  });\n  apply();\n}\n\nfunction removeSort(index) {\n  sortValues.value.delete(Array.from(sortValues.value)[index]);\n  apply();\n}\n\nfunction clearSort(close) {\n  sortValues.value.clear();\n  apply();\n  close();\n}\n\nfunction apply() {\n  listViewActions.applySort(convertToString(sortValues.value));\n}\n\nfunction convertToString(values) {\n  let _sortValues = \"\";\n  values.forEach((f) => {\n    _sortValues += `${f.fieldname} ${f.direction}, `;\n  });\n  _sortValues = _sortValues.slice(0, -2);\n  return _sortValues;\n}\n\nfunction restartSort() {\n  sortSortable.stop();\n  sortSortable.start();\n}\n</script>\n","<template>\n  <FormControl\n    v-if=\"filter.type == 'Check'\"\n    :label=\"filter.label\"\n    type=\"checkbox\"\n    v-model=\"filter.value\"\n    @change.stop=\"updateFilter(filter, $event.target.checked)\"\n  />\n  <FormControl\n    v-else-if=\"filter.type === 'Select'\"\n    class=\"form-control cursor-pointer [&_select]:cursor-pointer\"\n    type=\"select\"\n    v-model=\"filter.value\"\n    :options=\"filter.options\"\n    :placeholder=\"filter.label\"\n    @change.stop=\"updateFilter(filter, $event.target.value)\"\n  />\n  <Link\n    v-else-if=\"filter.type === 'Link'\"\n    :value=\"filter.value\"\n    :doctype=\"filter.options\"\n    :placeholder=\"filter.label\"\n    @change=\"(data) => updateFilter(filter, data)\"\n  />\n  <component\n    v-else-if=\"['Date', 'Datetime'].includes(filter.type)\"\n    class=\"border-none\"\n    :is=\"filter.type === 'Date' ? DatePicker : DateTimePicker\"\n    :value=\"filter.value\"\n    @change=\"(v) => updateFilter(filter, v)\"\n    :placeholder=\"filter.label\"\n  />\n  <TextInput\n    v-else\n    v-model=\"filter.value\"\n    type=\"text\"\n    :placeholder=\"filter.label\"\n    @input.stop=\"debouncedFn(filter, $event.target.value)\"\n  />\n</template>\n<script setup>\nimport { TextInput, FormControl, DatePicker, DateTimePicker } from \"frappe-ui\";\nimport { Link } from \"@/components\";\nimport { useDebounceFn } from \"@vueuse/core\";\n\nconst props = defineProps({\n  filter: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst emit = defineEmits([\"applyQuickFilter\"]);\n\nconst debouncedFn = useDebounceFn((f, value) => {\n  emit(\"applyQuickFilter\", f, value);\n}, 500);\n\nfunction updateFilter(f, value) {\n  emit(\"applyQuickFilter\", f, value);\n}\n</script>\n","<template>\n  <div v-if=\"!quickFilters.loading\">\n    <FadedScrollableDiv\n      class=\"flex flex-1 items-center -ml-1 flex-wrap gap-1 gap-y-2\"\n      orientation=\"horizontal\"\n    >\n      <div\n        v-for=\"filter in quickFilters.data\"\n        :key=\"filter.name\"\n        class=\"min-w-36\"\n      >\n        <QuickFilterField\n          :filter=\"filter\"\n          @applyQuickFilter=\"(f, v) => applyQuickFilter(f, v)\"\n        />\n      </div>\n    </FadedScrollableDiv>\n  </div>\n</template>\n\n<script setup>\nimport { inject } from \"vue\";\nimport { FadedScrollableDiv } from \"@/components\";\nimport QuickFilterField from \"./QuickFilterField.vue\";\n\nconst listViewData = inject(\"listViewData\");\nconst listViewActions = inject(\"listViewActions\");\nconst { list, quickFilters } = listViewData;\n\nfunction applyQuickFilter(filter, value) {\n  let filters = { ...list.params?.filters };\n\n  let field = filter.name;\n  if (value) {\n    if ([\"Check\", \"Select\", \"Link\", \"Date\", \"Datetime\"].includes(filter.type)) {\n      filters[field] = value;\n    } else {\n      filters[field] = [\"LIKE\", `%${value}%`];\n    }\n    filter[\"value\"] = value;\n  } else {\n    delete filters[field];\n    filter[\"value\"] = \"\";\n  }\n  listViewActions.applyFilters(filters);\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n  <NestedPopover>\n    <template #target>\n      <Button label=\"Columns\">\n        <template v-if=\"hideLabel\">\n          <ColumnsIcon class=\"h-4\" />\n        </template>\n        <template v-if=\"!hideLabel\" #prefix>\n          <ColumnsIcon class=\"h-4\" />\n        </template>\n      </Button>\n    </template>\n    <template #body=\"{ close }\">\n      <div\n        class=\"my-2 p-1.5 min-w-40 rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n      >\n        <div v-if=\"!edit\">\n          <Draggable\n            :list=\"columns\"\n            @end=\"apply\"\n            :delay=\"isTouchScreenDevice() ? 200 : 0\"\n            item-key=\"key\"\n            class=\"list-group\"\n          >\n            <template #item=\"{ element }\">\n              <div\n                class=\"flex cursor-grab items-center justify-between gap-6 rounded px-2 py-1.5 text-base text-ink-gray-8 hover:bg-surface-gray-2\"\n              >\n                <div class=\"flex items-center gap-2\">\n                  <DragIcon class=\"h-3.5\" />\n                  <div>{{ element.label }}</div>\n                </div>\n                <div class=\"flex cursor-pointer items-center gap-1\">\n                  <Button\n                    variant=\"ghost\"\n                    class=\"!h-5 w-5 !p-1\"\n                    @click=\"editColumn(element)\"\n                  >\n                    <EditIcon class=\"h-3.5\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    class=\"!h-5 w-5 !p-1\"\n                    @click=\"removeColumn(element)\"\n                  >\n                    <FeatherIcon name=\"x\" class=\"h-3.5\" />\n                  </Button>\n                </div>\n              </div>\n            </template>\n          </Draggable>\n          <div\n            class=\"mt-1.5 flex flex-col gap-1 border-t border-outline-gray-modals pt-1.5\"\n          >\n            <Autocomplete\n              value=\"\"\n              :options=\"fields\"\n              @change=\"(e) => addColumn(e)\"\n            >\n              <template #target=\"{ togglePopover }\">\n                <Button\n                  class=\"w-full !justify-start !text-ink-gray-5\"\n                  variant=\"ghost\"\n                  @click=\"togglePopover()\"\n                  label=\"Add Column\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"plus\" class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n            </Autocomplete>\n            <!-- <Button\n              v-if=\"columnsUpdated\"\n              class=\"w-full !justify-start !text-ink-gray-5\"\n              variant=\"ghost\"\n              @click=\"reset(close)\"\n              label=\"Reset Changes\"\n            >\n              <template #prefix>\n                <ReloadIcon class=\"h-4\" />\n              </template>\n            </Button> -->\n            <Button\n              v-if=\"!is_default\"\n              class=\"w-full !justify-start !text-ink-gray-5\"\n              variant=\"ghost\"\n              @click=\"resetToDefault(close)\"\n              label=\"Reset to Default\"\n            >\n              <template #prefix>\n                <ReloadIcon class=\"h-4\" />\n              </template>\n            </Button>\n          </div>\n        </div>\n        <div v-else>\n          <div\n            class=\"flex flex-col items-center justify-between gap-2 rounded px-2 py-1.5 text-base text-ink-gray-8\"\n          >\n            <div class=\"flex flex-col items-center gap-3\">\n              <FormControl\n                type=\"text\"\n                size=\"md\"\n                label=\"Label\"\n                v-model=\"column.label\"\n                class=\"sm:w-full w-52\"\n                placeholder=\"First Name\"\n              />\n              <FormControl\n                type=\"text\"\n                size=\"md\"\n                label=\"Width\"\n                class=\"sm:w-full w-52\"\n                v-model=\"column.width\"\n                placeholder=\"10rem\"\n                :description=\"'Width can be in number, pixel or rem (eg. 3, 30px, 10rem)'\"\n                :debounce=\"500\"\n              />\n            </div>\n            <div class=\"flex w-full gap-2 border-t pt-2\">\n              <Button\n                variant=\"subtle\"\n                label=\"Cancel\"\n                class=\"w-full flex-1\"\n                @click=\"cancelUpdate\"\n              />\n              <Button\n                variant=\"solid\"\n                label=\"Update\"\n                class=\"w-full flex-1\"\n                @click=\"updateColumn(column)\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n  </NestedPopover>\n</template>\n\n<script setup>\nimport {\n  DragIcon,\n  ReloadIcon,\n  EditIcon,\n  ColumnsIcon,\n} from \"@/components/icons\";\nimport NestedPopover from \"@/components/NestedPopover.vue\";\nimport Autocomplete from \"@/components/frappe-ui/Autocomplete.vue\";\nimport { isTouchScreenDevice } from \"@/utils\";\nimport Draggable from \"vuedraggable\";\nimport { computed, ref, inject } from \"vue\";\nimport { watchOnce } from \"@vueuse/core\";\n\nconst props = defineProps({\n  hideLabel: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst emit = defineEmits([\"update\"]);\nconst columnsUpdated = ref(false);\n\nconst oldValues = ref({\n  columns: [],\n  rows: [],\n  isDefault: false,\n});\n\nconst listViewData = inject(\"listViewData\");\nconst { list } = listViewData;\nconst listViewActions = inject(\"listViewActions\");\n\nconst edit = ref(false);\nconst column = ref({\n  old: {},\n  label: \"\",\n  key: \"\",\n  width: \"10rem\",\n});\n\nconst is_default = computed({\n  get: () => list.data?.is_default,\n  set: (val) => {\n    list.data.is_default = val;\n  },\n});\n\nconst columns = computed({\n  get: () => list.data?.columns,\n  set: (val) => {\n    list.data.columns = val;\n  },\n});\n\nconst rows = computed({\n  get: () => list.data?.rows,\n  set: (val) => {\n    list.data.rows = val;\n  },\n});\n\nconst fields = computed(() => {\n  let allFields = list.data?.fields;\n  if (!allFields) return [];\n  if (columns.value === \"\") return allFields;\n  return allFields.filter((field) => {\n    return !columns.value.find((column) => column.key === field.value);\n  });\n});\n\nfunction addColumn(c) {\n  let align = [\"Float\", \"Int\", \"Percent\", \"Currency\"].includes(c.type)\n    ? \"right\"\n    : \"left\";\n  let _column = {\n    label: c.label,\n    type: c.type,\n    key: c.value,\n    width: \"10rem\",\n    align,\n  };\n  columns.value.push(_column);\n  rows.value.push(c.value);\n  apply(true);\n}\n\nfunction removeColumn(c) {\n  if (columns.value.length === 1) {\n    return;\n  }\n  columns.value = columns.value.filter((column) => column.key !== c.key);\n  if (c.key !== \"name\") {\n    rows.value = rows.value.filter((row) => row !== c.key);\n  }\n  apply();\n}\n\nfunction editColumn(c) {\n  edit.value = true;\n  column.value = c;\n  column.value.old = { ...c };\n}\n\nfunction updateColumn(c) {\n  edit.value = false;\n  let index = columns.value.findIndex((column) => column.key === c.key);\n  columns.value[index].label = c.label;\n  columns.value[index].width = c.width;\n\n  if (columns.value[index].old) {\n    delete columns.value[index].old;\n  }\n  apply();\n}\n\nfunction cancelUpdate() {\n  edit.value = false;\n  column.value.label = column.value.old.label;\n  column.value.width = column.value.old.width;\n  delete column.value.old;\n}\n\nfunction reset(close) {\n  apply(true, false, true);\n  close();\n}\n\nfunction resetToDefault(close) {\n  apply(true, true, true);\n  close();\n}\n\nfunction apply(reload = false, isDefault = false, reset = false) {\n  is_default.value = isDefault;\n  columnsUpdated.value = true;\n  let obj = {\n    columns: reset ? oldValues.value.columns : columns.value,\n    rows: reset ? oldValues.value.rows : rows.value,\n    isDefault: reset ? oldValues.value.isDefault : isDefault,\n    reload,\n    reset,\n  };\n  listViewActions.updateColumns(obj);\n  columnsUpdated.value = !reset;\n}\n\nwatchOnce(\n  () => list.data,\n  (val) => {\n    if (!val) return;\n    oldValues.value.columns = JSON.parse(JSON.stringify(val.columns));\n    oldValues.value.rows = JSON.parse(JSON.stringify(val.rows));\n    oldValues.value.isDefault = val.is_default;\n  }\n);\n</script>\n","<template>\n  <div class=\"mx-3 h-full overflow-y-auto sm:mx-5\" v-if=\"showGroupedRows\">\n    <div v-for=\"group in groupedRows\" :key=\"group.group\">\n      <ListGroupHeader :group=\"group\">\n        <div\n          class=\"my-2 flex items-center gap-2 text-base font-medium text-ink-gray-8 justify-between w-full mr-1\"\n        >\n          <div class=\"flex items-center gap-2 w-full\">\n            <component v-if=\"group.icon\" :is=\"group.icon\" />\n            <div\n              v-if=\"group.group.label != ''\"\n              class=\"flex items-center gap-1 w-full\"\n            >\n              <span>{{ group.group.label }}</span>\n              <span class=\"text-xs text-ink-gray-5\"\n                >{{\n                  group.rows.length +\n                  \" Article\" +\n                  (group.rows.length > 1 ? \"s\" : \"\")\n                }}\n              </span>\n            </div>\n          </div>\n          <Dropdown :options=\"actions(group)\" v-if=\"groupByActions.length > 0\">\n            <Button variant=\"ghost\">\n              <template #icon>\n                <IconMoreHorizontal class=\"h-4 w-4\" />\n              </template>\n            </Button>\n          </Dropdown>\n        </div>\n      </ListGroupHeader>\n      <ListGroupRows :group=\"group\" id=\"list-rows\" class=\"!mt-0\">\n        <ListRow\n          v-for=\"row in group.rows\"\n          :key=\"row.name\"\n          v-slot=\"{ idx, column, item }\"\n          :row=\"row\"\n          class=\"truncate text-base row\"\n        >\n          <slot v-bind=\"{ idx, column, item, row }\" />\n        </ListRow>\n      </ListGroupRows>\n    </div>\n  </div>\n  <ListRows class=\"mx-3 sm:mx-5\" v-else id=\"list-rows\">\n    <ListRow\n      v-for=\"row in groupedRows\"\n      :key=\"row.name\"\n      v-slot=\"{ idx, column, item }\"\n      :row=\"row\"\n      class=\"truncate text-base\"\n    >\n      <slot v-bind=\"{ idx, column, item, row }\" />\n    </ListRow>\n  </ListRows>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from \"vue\";\nimport {\n  ListRows,\n  ListRow,\n  ListGroupHeader,\n  ListGroupRows,\n  Dropdown,\n  Button,\n} from \"frappe-ui\";\n\nimport IconMoreHorizontal from \"~icons/lucide/more-horizontal\";\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  groupByActions: {\n    type: Array,\n    default: () => [],\n  },\n});\n\nconst groupedRows = ref(props.rows);\n\nconst actions = (group) => {\n  let _actions = props.groupByActions.map((action) => {\n    return {\n      ...action,\n      onClick: () => action.onClick(group),\n    };\n  });\n  if (group.group.label == \"General\") {\n    _actions = _actions.filter((action) => action.label === \"Add New Article\");\n  }\n  return _actions;\n};\n\nwatch(\n  () => props.rows,\n  (val) => (groupedRows.value = val)\n);\n\nlet showGroupedRows = computed(() => {\n  return props.rows.every(\n    (row) => row.group && row.rows && Array.isArray(row.rows)\n  );\n});\n</script>\n\n<style></style>\n","<template>\n  <!-- View Controls -->\n  <div\n    class=\"flex items-center justify-between gap-2 px-5 pb-4 pt-3\"\n    v-if=\"showViewControls\"\n  >\n    <QuickFilters v-if=\"!isMobileView\" class=\"flex-1\" />\n    <div class=\"flex items-start gap-2 justify-end h-full\" v-if=\"!isMobileView\">\n      <Button\n        label=\"Save Changes\"\n        v-if=\"isViewUpdated && canSaveView\"\n        @click=\"handleViewUpdate\"\n      />\n      <Reload @click=\"handleReload\" :loading=\"list.loading\" />\n      <Filter :default_filters=\"defaultParams.filters\" />\n      <SortBy :hide-label=\"isMobileView\" />\n      <ColumnSettings\n        :hide-label=\"isMobileView\"\n        v-if=\"!options.hideColumnSetting\"\n      />\n    </div>\n    <div v-else class=\"flex justify-between items-center w-full\">\n      <Filter :default_filters=\"defaultParams.filters\" />\n      <div class=\"flex items-center gap-2\">\n        <Reload @click=\"handleReload\" :loading=\"list.loading\" />\n        <SortBy :hide-label=\"isMobileView\" />\n      </div>\n    </div>\n  </div>\n\n  <!-- List View -->\n  <ListView\n    v-if=\"list.data?.data.length > 0\"\n    class=\"flex-1\"\n    :columns=\"columns\"\n    :rows=\"rows\"\n    row-key=\"name\"\n    :options=\"{\n      selectable: options.selectable,\n      showTooltip: false,\n      resizeColumn: false,\n      getRowRoute: (row) => ({\n        name: options.rowRoute?.name,\n        params: { [options.rowRoute?.prop]: row.name },\n        query: { view: route.query?.view },\n      }),\n      emptyState,\n    }\"\n  >\n    <ListHeader class=\"sm:mx-5 mx-3\">\n      <ListHeaderItem\n        v-for=\"column in columns\"\n        :key=\"column.key\"\n        :item=\"column\"\n        @columnWidthUpdated=\"(width) => console.log(width)\"\n      />\n    </ListHeader>\n    <ListRows\n      :rows=\"rows\"\n      v-slot=\"{ idx, column, item, row }\"\n      :group-by-actions=\"options.groupByActions\"\n      @scrollend=\"handleListScroll\"\n      class=\"list-rows\"\n    >\n      <ListRowItem :item=\"item\" :column=\"column\" :row=\"row\">\n        <component\n          :is=\"listCell(column, row, item, idx)\"\n          :key=\"column.key\"\n          @click=\"(e) => handleFieldClick(e, column, row, item)\"\n        />\n      </ListRowItem>\n    </ListRows>\n    <ListSelectBanner v-if=\"options.showSelectBanner\">\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown :options=\"selectBannerOptions(selections, unselectAll)\">\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n\n  <!-- List Footer -->\n  <div\n    class=\"p-20 border-t sm:px-5 px-3 py-2\"\n    v-if=\"list.data?.data.length > 0\"\n  >\n    <ListFooter\n      :options=\"{\n        rowCount: list?.data?.row_count,\n        totalCount: list?.data?.total_count,\n      }\"\n      :pageLengthCount=\"defaultParams.page_length_count\"\n      @loadMore=\"handlePageLength(defaultParams.page_length_count, true)\"\n      v-model=\"defaultParams.page_length_count\"\n      @update:modelValue=\"\n        (count) => {\n          handlePageLength(count);\n        }\n      \"\n    />\n  </div>\n  <!-- Empty State -->\n  <EmptyState\n    v-else\n    :title=\"emptyState.title\"\n    :icon=\"emptyState.icon\"\n    @emptyStateAction=\"emit('emptyStateAction')\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  reactive,\n  provide,\n  computed,\n  h,\n  ref,\n  watch,\n  VNode,\n  onMounted,\n} from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport {\n  createResource,\n  ListView,\n  ListFooter,\n  ListRowItem,\n  ListHeader,\n  ListHeaderItem,\n  ListSelectBanner,\n  FeatherIcon,\n  Dropdown,\n} from \"frappe-ui\";\nimport {\n  Filter,\n  SortBy,\n  QuickFilters,\n  Reload,\n  ColumnSettings,\n} from \"@/components/view-controls\";\nimport { MultipleAvatar, StarRating } from \"@/components\";\nimport ListRows from \"./ListRows.vue\";\nimport EmptyState from \"./EmptyState.vue\";\nimport { useScreenSize } from \"@/composables/screen\";\nimport { dayjs } from \"@/dayjs\";\nimport { View, ViewType } from \"@/types\";\nimport {\n  useView,\n  views,\n  currentView as headerView,\n} from \"@/composables/useView\";\nimport { getIcon, formatTimeShort } from \"@/utils\";\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useStorage } from \"@vueuse/core\";\n\ninterface P {\n  options: {\n    doctype: string;\n    defaultFilters?: Record<string, any>;\n    columnConfig?: Record<string, any>;\n    emptyState?: {\n      // type of a h componnt\n      icon?: string | VNode;\n      title: string;\n    };\n    hideViewControls?: boolean;\n    hideColumnSetting?: boolean;\n    selectable?: boolean;\n    view?: ViewType;\n    groupByActions?: Array<any>;\n    showSelectBanner?: boolean;\n    selectBannerActions?: Record<string, any>;\n    default_page_length?: number;\n    isCustomerPortal?: boolean;\n    rowRoute?: Record<string, string>;\n  };\n}\n\ninterface E {\n  (event: \"emptyStateAction\"): void;\n  (event: \"rowClick\", row: any): void;\n}\nconst props = defineProps<P>();\nconst emit = defineEmits<E>();\nconst route = useRoute();\nconst router = useRouter();\nconst { isManager } = useAuthStore();\n\nconst defaultOptions = reactive({\n  doctype: \"\",\n  hideViewControls: false,\n  selectable: false,\n  view: {\n    view_type: \"list\",\n    group_by_field: \"owner\",\n    name: route.query.view,\n  },\n  groupByActions: [],\n  default_page_length: 20,\n  isCustomerPortal: false,\n  hideColumnSetting: true,\n  rowRoute: {\n    name: \"\",\n    prop: \"\",\n  },\n});\n\nconst options = computed(() => {\n  return {\n    ...defaultOptions,\n    ...props.options,\n  };\n});\n\nconst { isMobileView } = useScreenSize();\n\nconst defaultEmptyState = {\n  icon: \"\",\n  title: \"No Data Found\",\n};\n\nconst defaultParams = reactive({\n  doctype: options.value.doctype,\n  filters: {},\n  default_filters: options.value.defaultFilters,\n  order_by: \"modified desc\",\n  page_length: options.value.default_page_length,\n  page_length_count: options.value.default_page_length,\n  view: options.value.view,\n  columns: [],\n  rows: [],\n  show_customer_portal_fields: options.value.isCustomerPortal,\n  is_default: false,\n});\n\nconst emptyState = computed(() => {\n  return options.value?.emptyState || defaultEmptyState;\n});\n\nconst isViewUpdated = ref(false);\n\nconst list = createResource({\n  url: \"helpdesk.api.doc.get_list_data\",\n  params: defaultParams,\n  transform: (data) => {\n    data.columns.forEach((column) => {\n      handleFetchFromField(column);\n      handleColumnConfig(column);\n    });\n    if (options.value.doctype === \"HD Ticket\") {\n      data.data.forEach((row) => {\n        if (\n          defaultParams.show_customer_portal_fields &&\n          row.status === \"Replied\"\n        ) {\n          row.status = \"Awaiting Response\";\n        }\n      });\n    }\n    return data;\n  },\n  onSuccess: (data) => {\n    list.params = defaultParams;\n    columns.value = data.columns;\n  },\n});\n\nconst exposeFunctions = {\n  list,\n  reload,\n};\nfunction selectBannerOptions(selections: Set<string>, unselectAll = () => {}) {\n  exposeFunctions[\"unselectAll\"] = unselectAll;\n  return options.value.selectBannerActions.map((action) => {\n    return {\n      ...action,\n      onClick: () => action.onClick(selections),\n    };\n  });\n}\n\nconst rows = computed(() => {\n  if (!list.data?.data) return [];\n  if (list.data.view_type === \"group_by\") {\n    if (!list.data?.group_by_field?.name) return [];\n    return getGroupedByRows(list.data.data, list.data.group_by_field);\n  }\n  return list.data?.data;\n});\nconst columns = ref([]);\n\nfunction getGroupedByRows(listRows, groupByField) {\n  let groupedRows = [];\n  groupByField.options?.forEach((option) => {\n    let filteredRows = [];\n\n    if (!option.value) {\n      filteredRows = listRows.filter((row) => !row[groupByField.name]);\n    } else {\n      filteredRows = listRows.filter(\n        (row) => row[groupByField.name] == option.value\n      );\n    }\n\n    let groupDetail = {\n      group: option || \" \",\n      collapsed: false,\n      rows: filteredRows,\n      icon: h(FeatherIcon, {\n        name: \"folder\",\n        class: \"h-4 w-4 flex-shrink-0 text-ink-gray-6\",\n      }),\n    };\n    groupedRows.push(groupDetail);\n  });\n  return groupedRows || listRows;\n}\n\nfunction handleFetchFromField(column) {\n  if (!column.hasOwnProperty(\"key\")) return column;\n  const regex = /([a-zA-Z0-9_]+)\\.([a-zA-Z0-9_]+)/;\n  const isFetchFromField = column.key.match(regex);\n  column.key = isFetchFromField ? isFetchFromField[2] : column.key;\n}\n\nfunction handleColumnConfig(column) {\n  if (!options.value?.columnConfig) return column;\n  const columnConfig = options.value.columnConfig;\n  if (!columnConfig.hasOwnProperty(column.key)) return column;\n  column.prefix = columnConfig[column.key]?.prefix;\n\n  return column;\n}\n\nconst filterableFields = createResource({\n  url: \"helpdesk.api.doc.get_filterable_fields\",\n  cache: [\"DocField\", options.value.doctype],\n  auto: !options.value.hideViewControls,\n  params: {\n    doctype: options.value.doctype,\n    append_assign: true,\n    show_customer_portal_fields: defaultParams.show_customer_portal_fields,\n  },\n  transform: (data) => {\n    data = data.map((field) => {\n      return {\n        label: field.label,\n        value: field.fieldname,\n        ...field,\n      };\n    });\n    return data;\n  },\n});\n\nconst sortableFields = createResource({\n  url: \"helpdesk.api.doc.sort_options\",\n  auto: !options.value.hideViewControls,\n  params: {\n    doctype: options.value.doctype,\n    show_customer_portal_fields: defaultParams.show_customer_portal_fields,\n  },\n});\n\nconst quickFilters = createResource({\n  url: \"helpdesk.api.doc.get_quick_filters\",\n  auto: !options.value.hideViewControls,\n  params: {\n    doctype: options.value.doctype,\n    show_customer_portal_fields: defaultParams.show_customer_portal_fields,\n  },\n  transform: (data) => {\n    if (Boolean(data.length)) return;\n    data = [{ name: \"name\", label: \"Name\", fieldtype: \"Data\" }];\n    return data;\n  },\n});\n\nfunction listCell(column: any, row: any, item: any, idx: number) {\n  const columnConfig = options.value.columnConfig;\n  if (columnConfig && columnConfig[column.key]?.custom) {\n    return columnConfig[column.key]?.custom({ column, row, item, idx });\n  }\n  if (idx === 0) {\n    return h(\"span\", {\n      class: \"truncate text-base text-ink-gray-6\",\n      innerHTML: item,\n    });\n  }\n  if (column.type === \"Datetime\") {\n    return h(\"span\", {\n      class: \"text-p-xs\",\n      innerHTML: formatTimeShort(item),\n    });\n  }\n  if (column.type === \"MultipleAvatar\") {\n    return h(MultipleAvatar, {\n      avatars: item,\n      hideName: true,\n      class: \"flex items-center truncate\",\n    });\n  }\n  if (column.type === \"Rating\") {\n    return h(StarRating, {\n      rating: item || 0,\n      class: \"truncate\",\n    });\n  }\n  return h(\"span\", {\n    class: \"truncate\",\n    innerHTML: item,\n  });\n}\n\nfunction handleFieldClick(e: MouseEvent, column, row, item) {\n  const noFilterFields = [\"Data\", \"Datetime\", \"Rating\", \"Int\", \"Float\"];\n  if (noFilterFields.includes(column.type)) {\n    if (options.value.rowRoute?.name !== \"\") {\n      return;\n    }\n    emit(\"rowClick\", row.name);\n    return;\n  }\n  e.stopPropagation();\n  e.preventDefault();\n  if (item == \"Awaiting Response\") {\n    item = \"Replied\";\n  }\n\n  if (column.type === \"MultipleAvatar\") {\n    if (item.length > 1) {\n      let target = e.target as HTMLElement;\n      target = target.closest(\".user-avatar\");\n      if (target) {\n        item = target.getAttribute(\"data-name\");\n      }\n    } else {\n      item = item[0].name;\n    }\n    applyFilters({ ...defaultParams.filters, [column.key]: [\"LIKE\", item] });\n    return;\n  }\n  applyFilters({ ...defaultParams.filters, [column.key]: item });\n}\n\nconst showViewControls = computed(() => {\n  return (\n    !options.value.hideViewControls &&\n    filterableFields.data &&\n    sortableFields.data &&\n    quickFilters.data\n  );\n});\n\nconst listViewData = reactive({\n  list,\n  filterableFields,\n  quickFilters,\n  sortableFields,\n});\n\nprovide(\"listViewData\", listViewData);\n\nprovide(\"listViewActions\", {\n  applyFilters,\n  applySort,\n  updateColumns,\n  reload,\n});\n\nfunction applyFilters(filters) {\n  isViewUpdated.value = true;\n  defaultParams.filters = { ...filters };\n  list.submit({ ...defaultParams });\n\n  // automatically update filters for default view\n  if (!defaultParams.is_default) return;\n  handleViewUpdate();\n  isViewUpdated.value = false;\n}\n\nfunction applySort(order_by: string) {\n  isViewUpdated.value = true;\n  defaultParams.order_by = order_by;\n  list.submit({ ...defaultParams, order_by });\n}\n\nfunction updateColumns(obj) {\n  isViewUpdated.value = true;\n  const { columns: _columns, isDefault, rows } = obj;\n  _columns?.forEach((column) => {\n    handleFetchFromField(column);\n    handleColumnConfig(column);\n  });\n  columns.value = defaultParams.columns = isDefault ? \"\" : _columns;\n  defaultParams.rows = isDefault ? \"\" : rows;\n  list.reload({ ...defaultParams });\n}\n\nfunction reload(reset: boolean = false) {\n  if (reset) {\n    defaultParams.filters = options.value.defaultFilters || {};\n    defaultParams.order_by = \"modified desc\";\n    defaultParams.page_length = options.value.default_page_length;\n    defaultParams.page_length_count = options.value.default_page_length;\n    defaultParams.columns = [];\n    defaultParams.rows = [];\n    defaultParams.is_default = true;\n  }\n  list.reload({ ...defaultParams });\n}\n\nfunction handlePageLength(count: number, loadMore: boolean = false) {\n  defaultParams.page_length_count = count;\n  if (loadMore) {\n    defaultParams.page_length += count;\n  } else {\n    if (\n      count === defaultParams.page_length &&\n      count === defaultParams.page_length_count\n    ) {\n      return;\n    }\n    defaultParams.page_length = count;\n    defaultParams.page_length_count = count;\n  }\n  list.reload();\n}\n\nfunction handleViewUpdate() {\n  const view = {\n    filters: JSON.stringify(defaultParams.filters),\n    columns: JSON.stringify(defaultParams.columns),\n    rows: JSON.stringify(defaultParams.rows),\n    order_by: defaultParams.order_by,\n    name: (route.query.view as string) || \"default\",\n    dt: options.value.doctype,\n    route_name: route.name,\n    is_customer_portal: options.value.isCustomerPortal,\n  };\n  updateView(view, () => {\n    isViewUpdated.value = false;\n  });\n}\n\nconst { findView, updateView, defaultView } = useView(options.value.doctype);\n\nconst canSaveView = computed(() => {\n  let currentView: View = findView(route.query.view as string).value;\n  if (!currentView || !currentView.public) return true;\n  if (currentView.public && isManager) {\n    return true;\n  }\n  return false;\n});\n\nfunction handleReload() {\n  handleViewChanges();\n  isViewUpdated.value = false;\n}\n\nfunction handleViewChanges() {\n  let currentView: View = findCurrentView();\n  if (!currentView) {\n    router.push({ name: route.name });\n    reload(true);\n    return;\n  }\n  defaultParams.filters = currentView.filters;\n  defaultParams.order_by = currentView.order_by || \"modified desc\";\n  defaultParams.columns = currentView.columns;\n  defaultParams.rows = currentView.rows;\n\n  list.submit({ ...defaultParams });\n}\n\nfunction findCurrentView() {\n  let currentView: View;\n  if (route.query.view) {\n    currentView = findView(route.query.view as string).value;\n    defaultParams.is_default = false;\n  } else if (defaultView.value) {\n    currentView = defaultView.value;\n    defaultParams.is_default = true;\n  }\n  return currentView;\n}\n\nwatch(\n  () => route.query.view,\n  (val: string) => {\n    defaultParams.view.name = val;\n    handleViewChanges();\n    if (!val) {\n      headerView.value.label = \"List\";\n      headerView.value.icon = \"lucide:align-justify\";\n    }\n  }\n);\n\nconst listScrollPosition = useStorage(\n  `list_position+${props.options.doctype}`,\n  0\n);\nfunction handleListScroll(e) {\n  listScrollPosition.value = e.target.scrollTop;\n}\nfunction handleScrollPosition() {\n  setTimeout(() => {\n    const listContainer = document.querySelector(\".list-rows\");\n    if (!listContainer) return;\n    listContainer.scrollTop = listScrollPosition.value;\n  }, 200);\n}\n\nonMounted(async () => {\n  handleScrollPosition();\n\n  if (views.data?.length > 0 && views.filters?.dt === options.value.doctype) {\n    handleViewChanges();\n  } else {\n    await views.list.promise;\n    handleViewChanges();\n  }\n  if (route.query.view || defaultView.value) {\n    if (route.query.view) {\n      const currentView = findCurrentView();\n      if (!currentView) return;\n      headerView.value.label = currentView.label || \"List\";\n      headerView.value.icon = getIcon(currentView.icon);\n    }\n    return;\n  }\n});\n\ndefineExpose(exposeFunctions);\n</script>\n"],"names":["Se","s","re","U","d","P","q","ye","le","ae","ue","ge","j","h","u","f","R","t","o","y","v","m","b","O","V","E","L","$","n","x","e","Z","r","l","g","G","C","a","K","z","Pe","N","c","I","F","w","se","i","de","p","J","pe","fe","be","me","T","W","A","Ge","H","ee","te","ve","k","oe","M","B","D","Y","X","Q","je","ne","_","he","S","ie","Oe","ke","getDate","args","getDateValue","date","dayjs","getDatesAfter","count","incrementer","dates","getDaysInMonth","monthIndex","year","daysInMonth","isLeapYear","useDatePicker","currentYear","ref","currentMonth","today","computed","firstDayOfMonth","lastDayOfMonth","leftPaddingCount","rightPaddingCount","leftPadding","rightPadding","datesInMonth","lastDate","finalPadding","datesAsWeeks","computedDates","week","formattedMonth","prevMonth","changeMonth","nextMonth","adder","props","__props","emit","__emit","marginClass","_marginClass","_a","_b","_c","dateValue","selectDate","isNow","dayjsLocal","selectCurrentMonthYear","onMounted","hour","minute","second","changeTime","systemParsedDate","dayjsSystem","toValue","twoDigit","number","updateDate","fromDate","toDate","handleDateClick","swapDatesIfNecessary","from","to","temp","selectDates","val","isInRange","formatDates","value","values","clearDates","_sfc_main","FeatherIcon","RadioGroup","RadioGroupOption","RadioGroupLabel","_hoisted_1","_createBlock","_component_RadioGroup","$options","_cache","$event","_withCtx","_createElementVNode","_openBlock","_createElementBlock","_Fragment","_renderList","$props","button","_component_RadioGroupOption","active","checked","_normalizeClass","_component_FeatherIcon","_createCommentVNode","_createVNode","_component_RadioGroupLabel","_createTextVNode","_toDisplayString","_vShow","list","inject","getGridTemplateColumns","columns","withCheckbox","checkBoxWidth","columnsWidth","col","width","alignmentMap","resizer","columnRef","widthInPx","parsedWidth","startResizing","initialX","initialWidth","onMouseMove","newWidth","updateWidth","onMouseUp","useDebounceFn","label","getValue","isLastRow","isSelected","isHoverable","rowHeight","_sfc_render","_ctx","toggleGroup","selectedText","title","slots","useSlots","selections","reactive","watch","_options","defaultTrue","defaultFalse","allRowsSelected","showGroupedRows","acc","row","selectable","toggleRow","toggleAllRows","select","provide","__expose","pageLengthCount","pageLengthOptions","showLoadMore","reference","popover","popper","setupPopper","createPopper","updatePosition","nextTick","onBeforeUnmount","isMobileView","useScreenSize","typeCheck","typeLink","typeNumber","typeSelect","typeString","typeDate","typeRating","listViewData","listViewActions","filterableFields","filters","allFilters","convertFilters","data","key","field","oppositeOperatorMap","getOperators","fieldtype","fieldname","options","getValueControl","operator","FormControl","timespanOptions","getSelectOptions","Link","DateRangePicker","DatePicker","DateTimePicker","StarRating","updateValue","getDefaultValue","getDefaultOperator","setfilter","apply","updateFilter","index","removeFilter","clearfilter","close","filter","updateOperator","event","oldOperatorValue","newOperatorValue","isSameTypeOperator","oldOperator","newOperator","textOperators","_filters","parseFilters","transformIn","operatorMap","tryOnScopeDispose","fn","getCurrentScope","onScopeDispose","unref","isClient","getLifeCycleTarget","target","getCurrentInstance","tryOnMounted","sync","defaultDocument","unrefElement","elRef","plain","useSortable","el","sortable","document","resetOptions","defaultOptions","moveArrayElement","start","Sortable","stop","option","name","insertNodeAt","parentElement","element","refElement","removeNode","node","_valueIsRef","isRef","array","sortOptions","sortValues","allSortValues","sortValue","direction","convertToString","selectedOptions","sort","restartSort","sortSortable","getSortLabel","setSort","updateSort","oldSort","removeSort","clearSort","_sortValues","debouncedFn","quickFilters","applyQuickFilter","columnsUpdated","oldValues","edit","column","is_default","rows","fields","allFields","addColumn","align","_column","removeColumn","editColumn","updateColumn","cancelUpdate","resetToDefault","reload","isDefault","reset","obj","watchOnce","groupedRows","actions","group","_actions","action","route","useRoute","router","useRouter","isManager","useAuthStore","defaultEmptyState","defaultParams","emptyState","isViewUpdated","createResource","handleFetchFromField","handleColumnConfig","exposeFunctions","selectBannerOptions","unselectAll","getGroupedByRows","_d","listRows","groupByField","filteredRows","groupDetail","regex","isFetchFromField","columnConfig","sortableFields","listCell","item","idx","formatTimeShort","MultipleAvatar","handleFieldClick","applyFilters","showViewControls","applySort","updateColumns","handleViewUpdate","order_by","_columns","handlePageLength","loadMore","view","updateView","findView","defaultView","useView","canSaveView","currentView","handleReload","handleViewChanges","findCurrentView","headerView","listScrollPosition","useStorage","handleListScroll","handleScrollPosition","listContainer","views","getIcon"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,35,36]}