{"version":3,"file":"TicketCustomer-619de2a2.js","sources":["../../../../desk/src/components/ticket/TicketCustomerSidebar.vue","../../../../desk/src/pages/ticket/data.ts","../../../../desk/src/pages/ticket/TicketCustomer.vue"],"sourcesContent":["<template>\n  <div class=\"flex w-[382px] flex-col border-l gap-4\">\n    <!-- Ticket ID -->\n    <div class=\"flex items-center justify-between border-b px-5 py-3\">\n      <span class=\"cursor-copy text-lg font-semibold\">Ticket details</span>\n    </div>\n    <!-- user info and sla info -->\n    <div class=\"flex flex-col gap-4 pt-0 px-5 py-3 border-b\">\n      <!-- user info -->\n      <div class=\"flex gap-2\">\n        <Avatar\n          size=\"2xl\"\n          :image=\"ticket.data.contact.image\"\n          :label=\"ticket.data.contact.name\"\n        />\n        <div class=\"flex items-center justify-between\">\n          <Tooltip :text=\"ticket.data.contact.name\">\n            <div class=\"w-[242px] truncate text-2xl font-medium\">\n              {{ ticket.data.contact.name }}\n            </div>\n          </Tooltip>\n          <div class=\"flex gap-1.5\" v-if=\"!ticket.data.feedback_rating\">\n            <Tooltip :text=\"ticket.data.contact.email_id\">\n              <Button class=\"h-7 w-7\" @click=\"emit('open')\">\n                <EmailIcon class=\"h-4 w-4\" />\n              </Button>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n\n      <!-- Ticket Info -->\n      <div\n        class=\"flex items-center text-base leading-5\"\n        v-for=\"field in ticketBasicInfo\"\n      >\n        <span class=\"w-[126px] text-sm text-gray-600\">{{ field.label }}</span>\n        <span class=\"text-base text-gray-800 flex-1\">\n          {{ field.value }}\n        </span>\n      </div>\n\n      <!-- sla info -->\n      <div\n        v-for=\"data in slaData\"\n        :key=\"data.label\"\n        class=\"flex items-center text-base\"\n      >\n        <div class=\"w-[126px] text-gray-600 text-sm\">{{ data.title }}</div>\n\n        <div class=\"break-words text-base text-gray-800\">\n          <Tooltip :text=\"dayjs(data.value).long()\">\n            <Badge :label=\"data.label\" :theme=\"data.theme\" variant=\"outline\" />\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n    <!-- feedback component -->\n    <TicketFeedback\n      v-if=\"ticket.data.feedback_rating\"\n      class=\"border-b text-base text-gray-600\"\n      :ticket=\"ticket.data\"\n    />\n    <div class=\"flex flex-col gap-4 pt-0 px-5 py-3\">\n      <div\n        class=\"flex items-center text-base leading-5\"\n        v-for=\"field in ticketAdditionalInfo\"\n      >\n        <span class=\"w-[126px] text-sm text-gray-600\">{{ field.label }}</span>\n        <span class=\"text-base text-gray-800 flex-1\">\n          {{ field.value }}\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { inject, computed } from \"vue\";\nimport { ITicket } from \"@/pages/ticket/symbols\";\nimport { Tooltip, Avatar } from \"frappe-ui\";\nimport { dayjs } from \"@/dayjs\";\nimport { formatTime } from \"@/utils\";\nimport { Field } from \"@/types\";\n\nconst emit = defineEmits([\"open\"]);\n\nconst ticket = inject(ITicket);\n\nconst slaData = computed(() => {\n  const firstResponse = firstResponseData();\n  const resolution = resolutionData();\n  return [\n    {\n      title: \"First Response\",\n      value: ticket.data.first_responded_on || ticket.data.response_by,\n      label: firstResponse.label,\n      theme: firstResponse.color,\n    },\n    {\n      title: \"Resolution\",\n      value: ticket.data.resolution_date || ticket.data.resolution_by,\n      label: resolution.label,\n      theme: resolution.color,\n    },\n  ];\n});\n\nfunction firstResponseData() {\n  let firstResponse = null;\n  if (\n    !ticket.data.first_responded_on &&\n    dayjs().isBefore(dayjs(ticket.data.response_by))\n  ) {\n    firstResponse = {\n      label: `Due in ${formatTime(\n        dayjs(ticket.data.response_by).diff(dayjs(), \"s\")\n      )}`,\n      color: \"orange\",\n    };\n  } else if (\n    dayjs(ticket.data.first_responded_on).isBefore(\n      dayjs(ticket.data.response_by)\n    )\n  ) {\n    firstResponse = {\n      label: `Fulfilled in ${formatTime(\n        dayjs(ticket.data.first_responded_on).diff(\n          dayjs(ticket.data.creation),\n          \"s\"\n        )\n      )}`,\n      color: \"green\",\n    };\n  } else {\n    firstResponse = {\n      label: \"Failed\",\n      color: \"red\",\n    };\n  }\n  return firstResponse;\n}\n\nfunction resolutionData() {\n  let resolution = null;\n  if (\n    !ticket.data.resolution_date &&\n    dayjs().isBefore(ticket.data.resolution_by)\n  ) {\n    resolution = {\n      label: `Due in ${formatTime(\n        dayjs(ticket.data.resolution_by).diff(dayjs(), \"s\")\n      )}`,\n      color: \"orange\",\n    };\n  } else if (\n    dayjs(ticket.data.resolution_date).isBefore(ticket.data.resolution_by)\n  ) {\n    resolution = {\n      label: `Fulfilled in ${formatTime(\n        dayjs(ticket.data.resolution_date).diff(\n          dayjs(ticket.data.creation),\n          \"s\"\n        )\n      )}`,\n      color: \"green\",\n    };\n  } else {\n    resolution = {\n      label: \"Failed\",\n      color: \"red\",\n    };\n  }\n  return resolution;\n}\n\nconst ticketBasicInfo = computed(() => [\n  {\n    label: \"Ticket ID\",\n    value: ticket.data.name,\n  },\n  {\n    label: \"Status\",\n    value: transformStatus(ticket.data.status),\n    bold: true,\n  },\n]);\n\nconst ticketAdditionalInfo = computed(() => {\n  const fields = [\n    {\n      label: \"Subject\",\n      value: ticket.data.subject,\n    },\n    {\n      label: \"Team\",\n      value: ticket.data.agent_group || \"-\",\n    },\n    {\n      label: \"Priority\",\n      value: ticket.data.priority,\n    },\n  ];\n  const custom_fields = ticket.data.template.fields\n    .filter(\n      (field: Field) =>\n        !field.hide_from_customer &&\n        [\"subject\", \"team\", \"priority\"].indexOf(field.fieldname) === -1\n    )\n    .map((field: Field) => ({\n      label: field.label,\n      value: ticket.data[field.fieldname],\n    }));\n\n  return [...fields, ...custom_fields];\n});\nfunction transformStatus(status: string) {\n  switch (status) {\n    case \"Replied\":\n      return \"Awaiting reply\";\n    default:\n      return status;\n  }\n}\n</script>\n\n<style scoped></style>\n","import { createResource } from \"frappe-ui\";\nimport { Resource, Ticket } from \"@/types\";\n\nexport function useTicket(\n  id?: number | string,\n  isCustomerPortal: boolean = false,\n  transformCB?: (data: any) => any,\n  successCB?: (data: any) => any,\n  errorCB?: (err: any) => any\n): Resource<Ticket> {\n  const t = createResource({\n    url: \"helpdesk.helpdesk.doctype.hd_ticket.api.get_one\",\n    cache: [\"Ticket\", id],\n    params: {\n      name: id,\n      is_customer_portal: isCustomerPortal,\n    },\n    auto: true,\n    transform: (data) => {\n      transformCB && transformCB(data);\n    },\n    onSuccess: (data) => {\n      successCB && successCB(data);\n    },\n    onError: (err) => {\n      console.log(\"here\");\n      errorCB && errorCB(err);\n    },\n  });\n  return t;\n}\n","<template>\n  <div v-if=\"ticket.data\" class=\"flex flex-col\">\n    <LayoutHeader>\n      <template #left-header>\n        <Breadcrumbs :items=\"breadcrumbs\" />\n      </template>\n      <template #right-header>\n        <CustomActions\n          v-if=\"ticket.data._customActions\"\n          :actions=\"ticket.data._customActions\"\n        />\n        <Button\n          v-if=\"ticket.data.status !== 'Closed'\"\n          label=\"Close\"\n          theme=\"gray\"\n          variant=\"solid\"\n          @click=\"handleClose()\"\n        >\n          <template #prefix>\n            <Icon icon=\"lucide:check\" />\n          </template>\n        </Button>\n      </template>\n    </LayoutHeader>\n    <div class=\"flex overflow-hidden h-full\">\n      <!-- Main Ticket Comm -->\n      <section class=\"flex flex-col flex-1\">\n        <!-- show for only mobile -->\n        <TicketCustomerTemplateFields v-if=\"isMobileView\" />\n\n        <TicketConversation class=\"grow\" />\n        <div\n          class=\"m-5\"\n          @keydown.ctrl.enter.capture.stop=\"sendEmail\"\n          @keydown.meta.enter.capture.stop=\"sendEmail\"\n        >\n          <TicketTextEditor\n            v-if=\"showEditor\"\n            ref=\"editor\"\n            v-model:attachments=\"attachments\"\n            v-model:content=\"editorContent\"\n            v-model:expand=\"isExpanded\"\n            :placeholder=\"placeholder\"\n            autofocus\n            @clear=\"() => (isExpanded = false)\"\n          >\n            <template #bottom-right>\n              <Button\n                label=\"Send\"\n                theme=\"gray\"\n                variant=\"solid\"\n                :disabled=\"$refs.editor?.editor.isEmpty || send.loading\"\n                :loading=\"send.loading\"\n                @click=\"sendEmail\"\n              />\n            </template>\n          </TicketTextEditor>\n        </div>\n      </section>\n      <!-- Ticket Sidebar only for desktop view-->\n      <TicketCustomerSidebar v-if=\"!isMobileView\" @open=\"isExpanded = true\" />\n    </div>\n    <TicketFeedback v-model:open=\"showFeedbackDialog\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, provide, ref } from \"vue\";\nimport { createResource, Button, Breadcrumbs, call } from \"frappe-ui\";\nimport { useConfigStore } from \"@/stores/config\";\nimport { globalStore } from \"@/stores/globalStore\";\nimport { Icon } from \"@iconify/vue\";\nimport { ITicket } from \"./symbols\";\nimport { useRouter } from \"vue-router\";\nimport { createToast, isContentEmpty } from \"@/utils\";\nimport { setupCustomizations } from \"@/composables/formCustomisation\";\nimport { socket } from \"@/socket\";\nimport { LayoutHeader } from \"@/components\";\nimport { useScreenSize } from \"@/composables/screen\";\nimport TicketConversation from \"./TicketConversation.vue\";\nimport TicketCustomerTemplateFields from \"./TicketCustomerTemplateFields.vue\";\nimport TicketTextEditor from \"./TicketTextEditor.vue\";\nimport TicketFeedback from \"./TicketFeedback.vue\";\nimport TicketCustomerSidebar from \"@/components/ticket/TicketCustomerSidebar.vue\";\nimport { useTicket } from \"./data\";\n\ninterface P {\n  ticketId: string;\n}\nconst router = useRouter();\n\nconst props = defineProps<P>();\nconst ticket = useTicket(\n  props.ticketId,\n  true,\n  null,\n  (data) => {\n    setupCustomizations(data, {\n      doc: data,\n      call,\n      router,\n      $dialog,\n      updateField,\n      createToast,\n    });\n  },\n  () => {\n    createToast({\n      title: \"Ticket not found\",\n      icon: \"x\",\n      iconClasses: \"text-red-600\",\n    });\n    router.replace(\"/my-tickets\");\n  }\n);\nprovide(ITicket, ticket);\nconst editor = ref(null);\nconst placeholder = \"Type a message\";\nconst editorContent = ref(\"\");\nconst attachments = ref([]);\nconst showFeedbackDialog = ref(false);\nconst isExpanded = ref(false);\n\nconst { isMobileView } = useScreenSize();\nconst { $dialog } = globalStore();\n\nconst send = createResource({\n  url: \"run_doc_method\",\n  debounce: 300,\n  makeParams: () => ({\n    dt: \"HD Ticket\",\n    dn: props.ticketId,\n    method: \"create_communication_via_contact\",\n    args: {\n      message: editorContent.value,\n      attachments: attachments.value,\n    },\n  }),\n  onSuccess: () => {\n    editor.value.editor.commands.clearContent(true);\n    attachments.value = [];\n    isExpanded.value = false;\n    ticket.reload();\n  },\n});\n\nfunction updateField(name, value, callback = () => {}) {\n  updateTicket(name, value);\n  callback();\n}\n\nfunction sendEmail() {\n  if (isContentEmpty(editorContent.value) || send.loading) {\n    return;\n  }\n  send.submit();\n}\n\nfunction updateTicket(fieldname: string, value: string) {\n  createResource({\n    url: \"frappe.client.set_value\",\n    params: {\n      doctype: \"HD Ticket\",\n      name: props.ticketId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      ticket.reload();\n      createToast({\n        title: \"Ticket updated\",\n        icon: \"check\",\n        iconClasses: \"text-green-600\",\n      });\n    },\n  });\n}\n\nfunction handleClose() {\n  if (showFeedback.value) {\n    showFeedbackDialog.value = true;\n  } else {\n    showConfirmationDialog();\n  }\n}\n\nfunction showConfirmationDialog() {\n  $dialog({\n    title: \"Close Ticket\",\n    message: \"Are you sure you want to close this ticket?\",\n    actions: [\n      {\n        label: \"Confirm\",\n        variant: \"solid\",\n        onClick(close: Function) {\n          ticket.data.status = \"Closed\";\n          setValue.submit(\n            { fieldname: \"status\", value: \"Closed\" },\n            {\n              onSuccess: () => {\n                createToast({\n                  title: \"Ticket closed successfully\",\n                  icon: \"check\",\n                  iconClasses: \"text-green-600\",\n                  position: \"top-right\",\n                });\n              },\n            }\n          );\n          close();\n        },\n      },\n    ],\n  });\n}\n\nconst setValue = createResource({\n  url: \"frappe.client.set_value\",\n  debounce: 300,\n  makeParams: (params) => {\n    return {\n      doctype: \"HD Ticket\",\n      name: props.ticketId,\n      fieldname: params.fieldname,\n      value: params.value,\n    };\n  },\n  onSuccess: () => {\n    showFeedbackDialog.value = false;\n    ticket.reload();\n  },\n});\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: \"Tickets\", route: { name: \"TicketsCustomer\" } }];\n  items.push({\n    label: ticket.data?.subject,\n    route: { name: \"TicketCustomer\" },\n  });\n  return items;\n});\n\nconst showEditor = computed(() => ticket.data.status !== \"Closed\");\n\n// this handles whether the ticket was raised and then was closed without any reply from the agent.\nconst { isFeedbackMandatory } = useConfigStore();\nconst showFeedback = computed(() => {\n  const hasAgentCommunication = ticket.data?.communications?.some(\n    (c) => c.sender !== ticket.data.raised_by\n  );\n  return hasAgentCommunication && isFeedbackMandatory;\n});\n\nonMounted(() => {\n  document.title = props.ticketId;\n  socket.on(\"helpdesk:ticket-update\", (ticketID) => {\n    if (ticketID === Number(props.ticketId)) {\n      ticket.reload();\n    }\n  });\n});\n\nonUnmounted(() => {\n  document.title = \"Helpdesk\";\n  socket.off(\"helpdesk:ticket-update\");\n});\n</script>\n"],"names":["emit","__emit","ticket","inject","ITicket","slaData","computed","firstResponse","firstResponseData","resolution","resolutionData","dayjs","formatTime","ticketBasicInfo","transformStatus","ticketAdditionalInfo","fields","custom_fields","field","status","useTicket","id","isCustomerPortal","transformCB","successCB","errorCB","createResource","data","err","placeholder","router","useRouter","props","__props","setupCustomizations","call","$dialog","updateField","createToast","provide","editor","ref","editorContent","attachments","showFeedbackDialog","isExpanded","isMobileView","useScreenSize","globalStore","send","name","value","callback","updateTicket","sendEmail","isContentEmpty","fieldname","handleClose","showFeedback","showConfirmationDialog","close","setValue","params","breadcrumbs","items","_a","showEditor","isFeedbackMandatory","useConfigStore","_b","c","onMounted","socket","ticketID","onUnmounted"],"mappings":"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"}