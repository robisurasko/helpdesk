{"version":3,"file":"TicketAgent-bb35d088.js","sources":["../../../../desk/src/components/ticket/TicketMergeModal.vue","../../../../desk/src/components/ticket/TicketAgentSidebar.vue","../../../../desk/src/pages/ticket/TicketAgent.vue"],"sourcesContent":["<template>\n  <Dialog\n    :options=\"{ title: `Merge with another ticket` }\"\n    v-model=\"showDialog\"\n  >\n    <template #body-content>\n      <div class=\"flex flex-col gap-4\">\n        <p class=\"text-p-base text-ink-gray-8\">\n          All comments and emails of the ticket\n          <span class=\"whitespace-nowrap font-semibold\"\n            >#{{ ticket.name }}</span\n          >\n          will be moved to the selected ticket.\n        </p>\n        <Link\n          class=\"form-control\"\n          doctype=\"HD Ticket\"\n          placeholder=\"Select Ticket\"\n          :filters=\"getDefaultFilters()\"\n          label=\"Ticket\"\n          :page-length=\"10\"\n          :value=\"targetTicket\"\n          :show-description=\"true\"\n          @change=\"targetTicket = String($event)\"\n        />\n        <FormControl\n          v-if=\"targetTicket\"\n          label=\"Ticket Subject\"\n          type=\"text\"\n          v-model=\"subject\"\n          :disabled=\"true\"\n        />\n        <!-- banner -->\n        <div\n          class=\"flex items-center gap-2 rounded-md p-2 ring-1 ring-gray-200\"\n        >\n          <TriangleAlert\n            class=\"h-6 w-5 w-min-5 w-max-5 min-h-5 max-w-5 text-yellow-500\"\n          />\n\n          <div class=\"text-wrap text-sm text-gray-700\">\n            This action is irreversible.\n          </div>\n        </div>\n      </div>\n    </template>\n    <template #actions>\n      <Button\n        class=\"w-full\"\n        variant=\"solid\"\n        :label=\"\n          targetTicket ? `Merge with ticket #${targetTicket} ` : 'Select Ticket'\n        \"\n        :loading=\"mergeTicket.loading\"\n        :icon-left=\"targetTicket && LucideMerge\"\n        @click=\"handleTicketMerge\"\n      />\n    </template>\n  </Dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { Dialog, createResource, createListResource } from \"frappe-ui\";\nimport { Ticket } from \"@/types\";\nimport TriangleAlert from \"~icons/lucide/triangle-alert\";\nimport { createToast } from \"@/utils\";\nimport { watch } from \"vue\";\nimport LucideMerge from \"~icons/lucide/merge\";\n// interface P\ninterface Props {\n  ticket: Ticket;\n}\n\ninterface E {\n  (event: \"update\"): void;\n  //   (event: \"rowClick\", row: any): void;\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<E>();\nconst showDialog = defineModel<boolean>();\n\ninterface Filter {\n  status: [string, string[] | string];\n  is_merged: number;\n  name: string[];\n  customer?: any;\n  raised_by?: [string, string[] | string];\n}\n\nfunction getDefaultFilters() {\n  const filters: Filter = {\n    status: [\"in\", [\"Open\", \"Replied\"]],\n    is_merged: 0,\n    name: [\"!=\", props.ticket.name],\n  };\n  // if part of an organization show all tickets of the organization\n  if (props.ticket.customer) {\n    filters.customer = props.ticket.customer;\n  }\n  //  show all tickets of the person who raised the ticket\n  if (props.ticket.raised_by) {\n    filters.raised_by = [\"like\", `%${props.ticket.raised_by}%`];\n  }\n  return filters;\n}\n\nconst targetTicket = ref(null);\nconst subject = ref(null);\n\nconst mergeTicket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.merge_ticket\",\n  makeParams({ source, target }) {\n    return {\n      source,\n      target,\n    };\n  },\n  validate({ source, target }) {\n    if (!source) throw { message: \"Category is required\" };\n    if (!target) throw { message: \"Ticket to merged with is required\" };\n  },\n  onSuccess: () => {\n    createToast({\n      title: \"Ticket merged successfully\",\n      icon: \"check\",\n      iconClasses: \"text-green-600\",\n    });\n    emit(\"update\");\n\n    showDialog.value = false;\n    // open the target Ticket\n    window.open(\n      window.location.origin + \"/helpdesk/tickets/\" + targetTicket.value,\n      \"_blank\"\n    );\n    targetTicket.value = null;\n  },\n});\n\nconst getTicketSubject = createListResource({\n  doctype: \"HD Ticket\",\n  filters: {\n    name: [\"=\", targetTicket],\n  },\n  fields: [\"subject\"],\n  onSuccess: (data: any) => {\n    if (data.length > 0) {\n      subject.value = data[0].subject;\n    }\n  },\n});\n\nwatch(\n  () => targetTicket.value,\n  (newValue) => {\n    if (newValue) {\n      getTicketSubject.update({\n        filters: {\n          name: [\"=\", newValue],\n        },\n      });\n      getTicketSubject.reload();\n    }\n  }\n);\n\nfunction handleTicketMerge() {\n  mergeTicket.submit({\n    source: props.ticket.name,\n    target: targetTicket.value,\n  });\n}\n</script>\n\n<style scoped></style>\n","<template>\n  <div class=\"flex w-[382px] flex-col justify-between border-l\">\n    <div\n      class=\"flex h-10.5 items-center border-b px-5 py-2.5 text-lg font-medium text-ink-gray-9 justify-between\"\n    >\n      <span\n        class=\"cursor-copy text-lg font-semibold\"\n        @click=\"copyToClipboard(ticket.name, ticket.name)\"\n        >#{{ ticket.name }}\n      </span>\n      <Dropdown\n        v-if=\"showMergeOption\"\n        :options=\"[\n          {\n            label: 'Merge Ticket',\n            onClick: () => (showMergeModal = true),\n            icon: LucideMerge,\n            condition: () => !ticket.is_merged,\n          },\n        ]\"\n      >\n        <Button icon=\"more-horizontal\" class=\"text-gray-600\" variant=\"ghost\" />\n      </Dropdown>\n    </div>\n    <TicketAgentContact\n      :contact=\"ticket.contact\"\n      @email:open=\"(e) => emit('email:open', e)\"\n    />\n    <!-- feedback component -->\n    <TicketFeedback\n      v-if=\"ticket.feedback_rating\"\n      class=\"py-3 !px-6 !gap-3 text-base text-gray-600\"\n      :ticket=\"ticket\"\n    />\n    <!-- ticket details -->\n    <TicketAgentDetails :ticket=\"ticket\" />\n    <!-- fields -->\n    <TicketAgentFields :ticket=\"ticket\" @update=\"update\" />\n    <TicketMergeModal\n      :ticket=\"ticket\"\n      v-if=\"showMergeModal\"\n      v-model=\"showMergeModal\"\n      @update=\"emit('reload')\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport TicketAgentDetails from \"./TicketAgentDetails.vue\";\nimport TicketAgentContact from \"./TicketAgentContact.vue\";\nimport TicketAgentFields from \"./TicketAgentFields.vue\";\nimport TicketMergeModal from \"./TicketMergeModal.vue\";\nimport LucideMerge from \"~icons/lucide/merge\";\nimport { copyToClipboard } from \"@/utils\";\nimport { Ticket } from \"@/types\";\nimport { computed } from \"vue\";\n\ninterface Props {\n  ticket: Ticket;\n}\n\nconst props = defineProps<Props>();\n\nconst emit = defineEmits([\"update\", \"email:open\", \"reload\"]);\n\nfunction update(val = null) {\n  if (val.value && typeof val.value === \"object\") {\n    val.value = val.value.target?.value || null;\n  }\n  emit(\"update\", val);\n}\n\nconst showMergeModal = ref(false);\n\nconst showMergeOption = computed(() => {\n  return (\n    !props.ticket.is_merged && [\"Open\", \"Replied\"].includes(props.ticket.status)\n  );\n});\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <LayoutHeader v-if=\"ticket.data\">\n      <template #left-header>\n        <Breadcrumbs :items=\"breadcrumbs\" class=\"breadcrumbs\">\n          <template #prefix=\"{ item }\">\n            <Icon\n              v-if=\"item.icon\"\n              :icon=\"item.icon\"\n              class=\"mr-1 h-4 flex items-center justify-center self-center\"\n            />\n          </template>\n        </Breadcrumbs>\n      </template>\n      <template #right-header>\n        <CustomActions\n          v-if=\"ticket.data._customActions\"\n          :actions=\"ticket.data._customActions\"\n        />\n        <div v-if=\"ticket.data.assignees?.length\">\n          <component :is=\"ticket.data.assignees.length == 1 ? 'Button' : 'div'\">\n            <MultipleAvatar\n              :avatars=\"ticket.data.assignees\"\n              @click=\"showAssignmentModal = true\"\n            />\n          </component>\n        </div>\n        <button\n          v-else\n          class=\"rounded bg-gray-100 px-2 py-1.5 text-base text-gray-800\"\n          @click=\"showAssignmentModal = true\"\n        >\n          Assign\n        </button>\n        <Dropdown :options=\"dropdownOptions\">\n          <template #default=\"{ open }\">\n            <Button :label=\"ticket.data.status\">\n              <template #prefix>\n                <IndicatorIcon\n                  :class=\"ticketStatusStore.textColorMap[ticket.data.status]\"\n                />\n              </template>\n              <template #suffix>\n                <FeatherIcon\n                  :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                  class=\"h-4\"\n                />\n              </template>\n            </Button>\n          </template>\n        </Dropdown>\n      </template>\n    </LayoutHeader>\n    <div v-if=\"ticket.data\" class=\"flex h-full overflow-hidden\">\n      <div class=\"flex flex-1 flex-col\">\n        <!-- ticket activities -->\n        <div class=\"overflow-y-hidden flex flex-1 !h-full flex-col\">\n          <Tabs v-model=\"tabIndex\" :tabs=\"tabs\">\n            <TabList />\n            <TabPanel v-slot=\"{ tab }\" class=\"h-full\">\n              <TicketAgentActivities\n                ref=\"ticketAgentActivitiesRef\"\n                :activities=\"filterActivities(tab.name)\"\n                :title=\"tab.label\"\n                :ticket-status=\"ticket.data?.status\"\n                @update=\"\n                  () => {\n                    ticket.reload();\n                  }\n                \"\n                @email:reply=\"\n                  (e) => {\n                    communicationAreaRef.replyToEmail(e);\n                  }\n                \"\n                @email:forward=\"\n                  (e) => {\n                    communicationAreaRef.forwardEmail(e);\n                  }\n                \"\n              />\n            </TabPanel>\n          </Tabs>\n        </div>\n        <CommunicationArea\n          ref=\"communicationAreaRef\"\n          v-model=\"ticket.data\"\n          :to-emails=\"[ticket.data?.raised_by]\"\n          :cc-emails=\"[]\"\n          :bcc-emails=\"[]\"\n          :key=\"ticket.data?.name\"\n          @update=\"\n            () => {\n              ticket.reload();\n              ticketAgentActivitiesRef.scrollToLatestActivity();\n            }\n          \"\n        />\n      </div>\n      <TicketAgentSidebar\n        :ticket=\"ticket.data\"\n        @update=\"({ field, value }) => updateTicket(field, value)\"\n        @email:open=\"(e) => communicationAreaRef.toggleEmailBox()\"\n        @reload=\"ticket.reload()\"\n      />\n    </div>\n    <AssignmentModal\n      v-if=\"ticket.data\"\n      v-model=\"showAssignmentModal\"\n      :assignees=\"ticket.data.assignees\"\n      :docname=\"ticketId\"\n      doctype=\"HD Ticket\"\n      @update=\"\n        () => {\n          ticket.reload();\n        }\n      \"\n    />\n    <!-- Rename Subject Dialog -->\n    <Dialog v-model=\"showSubjectDialog\" :options=\"{ title: 'Rename Subject' }\">\n      <template #body-content>\n        <div class=\"flex flex-col flex-1 gap-3\">\n          <FormControl\n            v-model=\"renameSubject\"\n            type=\"textarea\"\n            size=\"sm\"\n            variant=\"subtle\"\n            :disabled=\"false\"\n          />\n          <Button\n            variant=\"solid\"\n            :loading=\"isLoading\"\n            label=\"Rename\"\n            @click=\"handleRename\"\n          />\n        </div>\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, h, watch, onMounted, onUnmounted, provide } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport {\n  Breadcrumbs,\n  Dropdown,\n  createResource,\n  Dialog,\n  FormControl,\n  Tabs,\n  TabPanel,\n  TabList,\n  call,\n} from \"frappe-ui\";\n\nimport {\n  LayoutHeader,\n  MultipleAvatar,\n  AssignmentModal,\n  CommunicationArea,\n  Icon,\n} from \"@/components\";\nimport { TicketAgentActivities, TicketAgentSidebar } from \"@/components/ticket\";\nimport {\n  IndicatorIcon,\n  CommentIcon,\n  ActivityIcon,\n  EmailIcon,\n} from \"@/components/icons\";\nimport { socket } from \"@/socket\";\nimport { useTicketStatusStore } from \"@/stores/ticketStatus\";\nimport { useUserStore } from \"@/stores/user\";\nimport { globalStore } from \"@/stores/globalStore\";\nimport { createToast, getIcon } from \"@/utils\";\nimport { setupCustomizations } from \"@/composables/formCustomisation\";\nimport { TabObject, TicketTab, View } from \"@/types\";\nimport { useView } from \"@/composables/useView\";\nimport { ComputedRef } from \"vue\";\n\nconst route = useRoute();\nconst router = useRouter();\n\nconst ticketStatusStore = useTicketStatusStore();\nconst { getUser } = useUserStore();\nconst { $dialog } = globalStore();\nconst ticketAgentActivitiesRef = ref(null);\nconst communicationAreaRef = ref(null);\nconst renameSubject = ref(\"\");\nconst isLoading = ref(false);\n\nconst props = defineProps({\n  ticketId: {\n    type: String,\n    required: true,\n  },\n});\nwatch(\n  () => props.ticketId,\n  () => {\n    ticket.reload();\n  }\n);\n\nconst { findView } = useView(\"HD Ticket\");\n\nprovide(\"communicationArea\", communicationAreaRef);\n\nconst showAssignmentModal = ref(false);\nconst showSubjectDialog = ref(false);\n\nconst ticket = createResource({\n  url: \"helpdesk.helpdesk.doctype.hd_ticket.api.get_one\",\n  auto: true,\n  makeParams: () => ({\n    name: props.ticketId,\n  }),\n  transform: (data) => {\n    if (data._assign) {\n      data.assignees = JSON.parse(data._assign).map((assignee) => {\n        return {\n          name: assignee,\n          image: getUser(assignee).user_image,\n          label: getUser(assignee).full_name,\n        };\n      });\n    }\n    renameSubject.value = data.subject;\n  },\n  onSuccess: (ticket) => {\n    document.title = ticket.subject;\n    setupCustomizations(ticket, {\n      doc: ticket,\n      call,\n      router,\n      $dialog,\n      updateField,\n      createToast,\n    });\n  },\n});\nfunction updateField(name: string, value: string, callback = () => {}) {\n  updateTicket(name, value);\n  callback();\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: \"Tickets\", route: { name: \"TicketsAgent\" } }];\n  if (route.query.view) {\n    const currView: ComputedRef<View> = findView(route.query.view as string);\n    if (currView) {\n      items.push({\n        label: currView.value?.label,\n        icon: getIcon(currView.value?.icon),\n        route: { name: \"TicketsAgent\", query: { view: currView.value?.name } },\n      });\n    }\n  }\n  items.push({\n    label: ticket.data?.subject,\n    onClick: () => {\n      showSubjectDialog.value = true;\n    },\n  });\n  return items;\n});\n\nconst handleRename = () => {\n  if (renameSubject.value === ticket.data?.subject) return;\n  updateTicket(\"subject\", renameSubject.value);\n  showSubjectDialog.value = false;\n};\n\nconst dropdownOptions = computed(() =>\n  ticketStatusStore.options.map((o) => ({\n    label: o,\n    value: o,\n    onClick: () => updateTicket(\"status\", o),\n    icon: () =>\n      h(IndicatorIcon, {\n        class: ticketStatusStore.textColorMap[o],\n      }),\n  }))\n);\n\nconst tabIndex = ref(0);\nconst tabs: TabObject[] = [\n  {\n    name: \"activity\",\n    label: \"Activity\",\n    icon: ActivityIcon,\n  },\n  {\n    name: \"email\",\n    label: \"Emails\",\n    icon: EmailIcon,\n  },\n  {\n    name: \"comment\",\n    label: \"Comments\",\n    icon: CommentIcon,\n  },\n];\n\nconst activities = computed(() => {\n  const emailProps = ticket.data.communications.map((email, idx: number) => {\n    return {\n      subject: email.subject,\n      content: email.content,\n      sender: { name: email.user.email, full_name: email.user.name },\n      to: email.recipients,\n      type: \"email\",\n      key: email.creation,\n      cc: email.cc,\n      bcc: email.bcc,\n      creation: email.creation,\n      attachments: email.attachments,\n      name: email.name,\n      isFirstEmail: idx === 0,\n    };\n  });\n\n  const commentProps = ticket.data.comments.map((comment) => {\n    return {\n      name: comment.name,\n      type: \"comment\",\n      key: comment.creation,\n      commentedBy: comment.commented_by,\n      commenter: comment.user.name,\n      creation: comment.creation,\n      content: comment.content,\n      attachments: comment.attachments,\n    };\n  });\n\n  const historyProps = [...ticket.data.history, ...ticket.data.views].map(\n    (h) => {\n      return {\n        type: \"history\",\n        key: h.creation,\n        content: h.action ? h.action : \"viewed this\",\n        creation: h.creation,\n        user: h.user.name + \" \",\n      };\n    }\n  );\n\n  const sorted = [...emailProps, ...commentProps, ...historyProps].sort(\n    (a, b) => new Date(a.creation) - new Date(b.creation)\n  );\n\n  const data = [];\n  let i = 0;\n\n  while (i < sorted.length) {\n    const currentActivity = sorted[i];\n    if (currentActivity.type === \"history\") {\n      currentActivity.relatedActivities = [];\n      for (let j = i + 1; j < sorted.length + 1; j++) {\n        const nextActivity = sorted[j];\n        if (nextActivity && nextActivity.type === \"history\") {\n          currentActivity.relatedActivities.push(nextActivity);\n        } else {\n          data.push(currentActivity);\n          i = j - 1;\n          break;\n        }\n      }\n    } else {\n      data.push(currentActivity);\n    }\n    i++;\n  }\n  return data;\n});\n\nfunction filterActivities(eventType: TicketTab) {\n  if (eventType === \"activity\") {\n    return activities.value;\n  }\n  return activities.value.filter((activity) => activity.type === eventType);\n}\nconst isErrorTriggered = ref(false);\nfunction updateTicket(fieldname: string, value: string) {\n  if (value === ticket.data[fieldname]) return;\n  updateOptimistic(fieldname, value);\n\n  createResource({\n    url: \"frappe.client.set_value\",\n    params: {\n      doctype: \"HD Ticket\",\n      name: props.ticketId,\n      fieldname,\n      value,\n    },\n    debounce: 500,\n    auto: true,\n    onSuccess: () => {\n      isLoading.value = false;\n      isErrorTriggered.value = false;\n      ticket.reload();\n    },\n    onError: () => {\n      if (isErrorTriggered.value) return;\n      isErrorTriggered.value = true;\n\n      ticket.reload();\n    },\n  });\n}\n\nfunction updateOptimistic(fieldname: string, value: string) {\n  ticket.data[fieldname] = value;\n  createToast({\n    title: \"Ticket updated\",\n    icon: \"check\",\n    iconClasses: \"text-green-600\",\n  });\n}\n\nonMounted(() => {\n  socket.on(\"helpdesk:ticket-update\", (ticketID) => {\n    if (ticketID === Number(props.ticketId)) {\n      ticket.reload();\n    }\n  });\n});\n\nonUnmounted(() => {\n  document.title = \"Helpdesk\";\n  socket.off(\"helpdesk:ticket-update\");\n});\n</script>\n\n<style>\n.breadcrumbs button {\n  background-color: inherit !important;\n  &:hover,\n  &:focus {\n    background-color: inherit !important;\n  }\n}\n</style>\n"],"names":["props","__props","emit","__emit","showDialog","_useModel","getDefaultFilters","filters","targetTicket","ref","subject","mergeTicket","createResource","source","target","createToast","getTicketSubject","createListResource","data","watch","newValue","handleTicketMerge","update","val","_a","showMergeModal","showMergeOption","computed","route","useRoute","router","useRouter","ticketStatusStore","useTicketStatusStore","getUser","useUserStore","$dialog","globalStore","ticketAgentActivitiesRef","communicationAreaRef","renameSubject","isLoading","ticket","findView","useView","provide","showAssignmentModal","showSubjectDialog","assignee","setupCustomizations","call","updateField","name","value","callback","updateTicket","breadcrumbs","items","currView","getIcon","_b","_c","_d","handleRename","dropdownOptions","o","h","IndicatorIcon","tabIndex","tabs","ActivityIcon","EmailIcon","CommentIcon","activities","emailProps","email","idx","commentProps","comment","historyProps","sorted","a","b","i","currentActivity","j","nextActivity","filterActivities","eventType","activity","isErrorTriggered","fieldname","updateOptimistic","onMounted","socket","ticketID","onUnmounted"],"mappings":"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"}