import{j as u,o as h,k as f,l as c,E as g,F as m,G as _}from"./index-04936222.js";class F{constructor(){this.listeners={},this.failed=!1}on(e,t){this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(t)}trigger(e,t){(this.listeners[e]||[]).forEach(a=>{a.call(this,t)})}upload(e,t){return new Promise((n,a)=>{let s=new XMLHttpRequest;s.upload.addEventListener("loadstart",()=>{this.trigger("start")}),s.upload.addEventListener("progress",l=>{l.lengthComputable&&this.trigger("progress",{uploaded:l.loaded,total:l.total})}),s.upload.addEventListener("load",()=>{this.trigger("finish")}),s.addEventListener("error",()=>{this.trigger("error"),a()}),s.onreadystatechange=()=>{if(s.readyState==XMLHttpRequest.DONE){let l;if(s.status===200){let d=null;try{d=JSON.parse(s.responseText)}catch{d=s.responseText}let o=d.message||d;n(o)}else if(s.status===403)l=JSON.parse(s.responseText);else{this.failed=!0;try{l=JSON.parse(s.responseText)}catch{}}l&&l.exc&&console.error(JSON.parse(l.exc)[0]),a(l)}};const p=t.upload_endpoint||"/api/method/upload_file";s.open("POST",p,!0),s.setRequestHeader("Accept","application/json"),window.csrf_token&&window.csrf_token!=="{{ csrf_token }}"&&s.setRequestHeader("X-Frappe-CSRF-Token",window.csrf_token);let i=new FormData;e&&i.append("file",e,e.name),i.append("is_private",t.private?"1":"0"),i.append("folder",t.folder||"Home"),t.file_url&&i.append("file_url",t.file_url),t.doctype&&i.append("doctype",t.doctype),t.docname&&i.append("docname",t.docname),t.fieldname&&i.append("fieldname",t.fieldname),t.method&&i.append("method",t.method),t.type&&i.append("type",t.type),t.optimize&&(i.append("optimize","1"),t.max_width&&i.append("max_width",t.max_width.toString()),t.max_height&&i.append("max_height",t.max_height.toString())),s.send(i)})}}const y={name:"FileUploader",props:{fileTypes:{type:[String,Array]},uploadArgs:{type:Object},validateFile:{type:Function,default:null}},data(){return{uploader:null,uploading:!1,uploaded:0,error:null,message:"",total:0,file:null,finishedUploading:!1}},computed:{progress(){let r=Math.floor(this.uploaded/this.total*100);return isNaN(r)?0:r},success(){return this.finishedUploading&&!this.error}},methods:{inputRef(){return this.$refs.input},openFileSelector(){this.$refs.input.click()},async onFileAdd(r){if(this.error=null,this.file=r.target.files[0],this.file&&this.validateFile)try{let e=await this.validateFile(this.file);e&&(this.error=e)}catch(e){this.error=e}this.error||this.uploadFile(this.file)},async uploadFile(r){this.error=null,this.uploaded=0,this.total=0,this.uploader=new F,this.uploader.on("start",()=>{this.uploading=!0}),this.uploader.on("progress",e=>{this.uploaded=e.uploaded,this.total=e.total}),this.uploader.on("error",()=>{this.uploading=!1,this.error="Error Uploading File"}),this.uploader.on("finish",()=>{this.uploading=!1,this.finishedUploading=!0}),this.uploader.upload(r,this.uploadArgs||{}).then(e=>{this.$emit("success",e)}).catch(e=>{this.uploading=!1;let t="Error Uploading File";e!=null&&e._server_messages?t=JSON.parse(JSON.parse(e._server_messages)[0]).message:e!=null&&e.exc&&(t=JSON.parse(e.exc)[0].split(`
`).slice(-2,-1)[0]),this.error=t,this.$emit("failure",e)})}},expose:["inputRef"]},x=["accept"];function S(r,e,t,n,a,s){return h(),f("div",null,[c("input",{ref:"input",type:"file",accept:t.fileTypes,class:"hidden",onChange:e[0]||(e[0]=(...p)=>s.onFileAdd&&s.onFileAdd(...p))},null,40,x),g(r.$slots,"default",m(_({file:a.file,uploading:a.uploading,progress:s.progress,uploaded:a.uploaded,message:a.message,error:a.error,total:a.total,success:s.success,openFileSelector:s.openFileSelector})))])}const E=u(y,[["render",S]]);export{E as F};
//# sourceMappingURL=FileUploader-38365a62.js.map
